{
	"id": "6ab471a6c8943f0fdd9fc31d9280e388",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sequential.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract MyToken is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _tokenIdCounter;\n    \n    string public baseTokenURI;\n\n\n    constructor() ERC721(\"MyToken\", \"MTK\") {}\n\n    function safeMint(address to, string memory uri) public onlyOwner {\n        uint256 tokenId = _tokenIdCounter.current();\n        _tokenIdCounter.increment();\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, uri);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {\n        super._burn(tokenId);\n    }\n\n      // Set new baseURI\n    function setBaseURI(string memory baseURI) public onlyOwner {\n        baseTokenURI = baseURI;\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    { \n        return string(abi.encodePacked(baseTokenURI,tokenId,\"\"));\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be irreversibly burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\");\n        _burn(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":5027:5041   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5020:5042   */\n      iszero\n        /* \"#utility.yul\":5002:5043   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4990:4992   */\n      0x20\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4325:4357   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4307:4358   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4295:4297   */\n      0x20\n        /* \"#utility.yul\":4280:4298   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":4161:4364   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":10316:10341   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10304:10306   */\n      0x20\n        /* \"#utility.yul\":10289:10307   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":10170:10347   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2542:2555  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2574:2579  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2567:2579  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4076:4083  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8723:8725   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8705:8726   */\n      mstore\n        /* \"#utility.yul\":8762:8764   */\n      0x2c\n        /* \"#utility.yul\":8742:8760   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8735:8765   */\n      mstore\n        /* \"#utility.yul\":8801:8835   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":8781:8799   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8774:8836   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8852:8870   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8845:8887   */\n      mstore\n        /* \"#utility.yul\":8904:8923   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4201  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3631  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3649:3656  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3648  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3657  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3681:3686  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3677  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9552:9554   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9534:9555   */\n      mstore\n        /* \"#utility.yul\":9591:9593   */\n      0x21\n        /* \"#utility.yul\":9571:9589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9564:9594   */\n      mstore\n        /* \"#utility.yul\":9630:9664   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":9610:9628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9603:9665   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":9681:9699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9674:9705   */\n      mstore\n        /* \"#utility.yul\":9722:9741   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_91\n        /* \"#utility.yul\":9350:9747   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3756:3777  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3756:3818  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_101\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3798:3803  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7477:7479   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7459:7480   */\n      mstore\n        /* \"#utility.yul\":7516:7518   */\n      0x38\n        /* \"#utility.yul\":7496:7514   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7489:7519   */\n      mstore\n        /* \"#utility.yul\":7555:7589   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":7535:7553   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7528:7590   */\n      mstore\n        /* \"#utility.yul\":7626:7652   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":7606:7624   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7599:7653   */\n      mstore\n        /* \"#utility.yul\":7670:7689   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_91\n        /* \"#utility.yul\":7275:7695   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3920:3922  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3924:3931  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3919  _approve */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4949:4956  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4934  _isApprovedOrOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4908:5011  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5032:5036  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5038:5040  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5042:5049  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5031  _transfer */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5273:5277  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5279:5281  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5283:5290  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5272  safeTransferFrom */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2263:2270  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2305  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2332:2351  owner != address(0) */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8313:8315   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8295:8316   */\n      mstore\n        /* \"#utility.yul\":8352:8354   */\n      0x29\n        /* \"#utility.yul\":8332:8350   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8325:8355   */\n      mstore\n        /* \"#utility.yul\":8391:8425   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":8371:8389   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8364:8426   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8442:8460   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8435:8474   */\n      mstore\n        /* \"#utility.yul\":8491:8510   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":8111:8516   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7902:7904   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7884:7905   */\n      mstore\n        /* \"#utility.yul\":7941:7943   */\n      0x2a\n        /* \"#utility.yul\":7921:7939   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7914:7944   */\n      mstore\n        /* \"#utility.yul\":7980:8014   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":7960:7978   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7953:8015   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":8031:8049   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8024:8064   */\n      mstore\n        /* \"#utility.yul\":8081:8100   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_91\n        /* \"#utility.yul\":7700:8106   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2120  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2706:2719  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2738:2745  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2731:2745  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4411:4419  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4421:4429  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4396  _setApprovalForAll */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5570:5577  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5555  _isApprovedOrOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5529:5632  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5656:5660  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5662:5664  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5666:5673  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5675:5680  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5655  _safeTransfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7225:7229  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2891:2904  string memory */\n      0x60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9136:9138   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9118:9139   */\n      mstore\n        /* \"#utility.yul\":9175:9177   */\n      0x2f\n        /* \"#utility.yul\":9155:9173   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9148:9178   */\n      mstore\n        /* \"#utility.yul\":9214:9248   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":9194:9212   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9187:9249   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":9265:9283   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9258:9303   */\n      mstore\n        /* \"#utility.yul\":9320:9339   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":8934:9345   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3003:3024  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3465:3474  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3389:3481  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3003:3037  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3078:3079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3060:3067  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3075  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3079  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_151\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_152)\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3106:3113  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3131  tokenId.toString */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3089:3134  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3047:3140  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11258  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11272  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11310  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11287:11333  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7540  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7064:7066   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7046:7067   */\n      mstore\n        /* \"#utility.yul\":7103:7105   */\n      0x2c\n        /* \"#utility.yul\":7083:7101   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7076:7106   */\n      mstore\n        /* \"#utility.yul\":7142:7176   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":7122:7140   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7115:7177   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":7193:7211   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7186:7228   */\n      mstore\n        /* \"#utility.yul\":7245:7264   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":6862:7270   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7648  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7666:7673  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7665  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7674  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7703:7708  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7699  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7744  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_170\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7712:7744  isApprovedForAll(owner, spender) */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7772:7779  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7760:7767  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7759  getApproved */\n      tag_31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7684:7780  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10453:11058  function _transfer(... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10607:10611  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10595:10602  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10594  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5899:5901   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5881:5902   */\n      mstore\n        /* \"#utility.yul\":5938:5940   */\n      0x25\n        /* \"#utility.yul\":5918:5936   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5911:5941   */\n      mstore\n        /* \"#utility.yul\":5977:6011   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":5957:5975   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5950:6012   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":6028:6046   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6021:6056   */\n      mstore\n        /* \"#utility.yul\":6073:6092   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_91\n        /* \"#utility.yul\":5697:6098   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10671:10687  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6305:6307   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6287:6308   */\n      mstore\n        /* \"#utility.yul\":6344:6346   */\n      0x24\n        /* \"#utility.yul\":6324:6342   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6317:6347   */\n      mstore\n        /* \"#utility.yul\":6383:6417   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":6363:6381   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6356:6418   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":6434:6452   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6427:6461   */\n      mstore\n        /* \"#utility.yul\":6478:6497   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_91\n        /* \"#utility.yul\":6103:6503   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10857:10858  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10861:10868  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10848  _approve */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10889  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_184\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_185\n      jump\t// in\n    tag_184:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10919  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_186\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_187\n      jump\t// in\n    tag_186:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10945  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10959  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11625:11633  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11621  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6710:6712   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6692:6713   */\n      mstore\n        /* \"#utility.yul\":6749:6751   */\n      0x19\n        /* \"#utility.yul\":6729:6747   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6722:6752   */\n      mstore\n        /* \"#utility.yul\":6788:6815   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":6768:6786   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6761:6816   */\n      mstore\n        /* \"#utility.yul\":6833:6851   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_91\n        /* \"#utility.yul\":6508:6857   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11691  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11708  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11719  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":5002:5043   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6550:6857  function _safeTransfer(... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6711:6715  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6717:6719  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6721:6728  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6710  _transfer */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6770:6774  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6776:6778  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6780:6787  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6789:6794  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6769  _checkOnERC721Received */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6739:6850  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_201\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:611  value == 0 */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_204\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:637  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":672:677  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":718:727  temp != 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      tag_207\n      dup2\n      tag_208\n      jump\t// in\n    tag_207:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      tag_209\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup4\n      tag_210\n      jump\t// in\n    tag_209:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_205)\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_212\n      jumpi\n      tag_212\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_214:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:861  value != 0 */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup4\n      tag_185\n      jump\t// in\n    tag_217:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_218\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:950  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_220\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_187\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_222\n      tag_223\n      jump\t// in\n    tag_222:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      tag_224\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup7\n      tag_210\n      jump\t// in\n    tag_224:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_215)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12485:12489  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12505:12518  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12576  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_232\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12591:12595  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12597:12604  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12606:12611  _data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_233\n      jump\t// in\n    tag_232:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_235\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_236\n      swap2\n      dup2\n      add\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      0x01\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_238\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_243\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_242)\n    tag_243:\n      0x60\n      swap2\n      pop\n    tag_242:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12779:12792  reason.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12821:12881  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_201\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12993:12999  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12987:13000  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12978:12984  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12974:12976  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12970:12985  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12963:13001  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_238:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12662:12713  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12655:12713  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_171)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n    tag_230:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13092:13096  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_251:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_253:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_51:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_255:\n        /* \"#utility.yul\":343:372   */\n      tag_152\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_251\n      jump\t// in\n        /* \"#utility.yul\":383:643   */\n    tag_72:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_258:\n        /* \"#utility.yul\":551:580   */\n      tag_259\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_251\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_260\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_251\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_40:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_262:\n        /* \"#utility.yul\":833:862   */\n      tag_263\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_251\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_264\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_251\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:2119   */\n    tag_64:\n        /* \"#utility.yul\":1076:1082   */\n      0x00\n        /* \"#utility.yul\":1084:1090   */\n      dup1\n        /* \"#utility.yul\":1092:1098   */\n      0x00\n        /* \"#utility.yul\":1100:1106   */\n      dup1\n        /* \"#utility.yul\":1153:1156   */\n      0x80\n        /* \"#utility.yul\":1141:1150   */\n      dup6\n        /* \"#utility.yul\":1132:1139   */\n      dup8\n        /* \"#utility.yul\":1128:1151   */\n      sub\n        /* \"#utility.yul\":1124:1157   */\n      slt\n        /* \"#utility.yul\":1121:1174   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":1170:1171   */\n      0x00\n        /* \"#utility.yul\":1167:1168   */\n      dup1\n        /* \"#utility.yul\":1160:1172   */\n      revert\n        /* \"#utility.yul\":1121:1174   */\n    tag_266:\n        /* \"#utility.yul\":1193:1222   */\n      tag_267\n        /* \"#utility.yul\":1212:1221   */\n      dup6\n        /* \"#utility.yul\":1193:1222   */\n      tag_251\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1183:1222   */\n      swap4\n      pop\n        /* \"#utility.yul\":1241:1279   */\n      tag_268\n        /* \"#utility.yul\":1275:1277   */\n      0x20\n        /* \"#utility.yul\":1264:1273   */\n      dup7\n        /* \"#utility.yul\":1260:1278   */\n      add\n        /* \"#utility.yul\":1241:1279   */\n      tag_251\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1231:1279   */\n      swap3\n      pop\n        /* \"#utility.yul\":1326:1328   */\n      0x40\n        /* \"#utility.yul\":1315:1324   */\n      dup6\n        /* \"#utility.yul\":1311:1329   */\n      add\n        /* \"#utility.yul\":1298:1330   */\n      calldataload\n        /* \"#utility.yul\":1288:1330   */\n      swap2\n      pop\n        /* \"#utility.yul\":1381:1383   */\n      0x60\n        /* \"#utility.yul\":1370:1379   */\n      dup6\n        /* \"#utility.yul\":1366:1384   */\n      add\n        /* \"#utility.yul\":1353:1385   */\n      calldataload\n        /* \"#utility.yul\":1404:1422   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1445:1447   */\n      dup1\n        /* \"#utility.yul\":1437:1443   */\n      dup3\n        /* \"#utility.yul\":1434:1448   */\n      gt\n        /* \"#utility.yul\":1431:1465   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1431:1465   */\n    tag_269:\n        /* \"#utility.yul\":1499:1505   */\n      dup2\n        /* \"#utility.yul\":1488:1497   */\n      dup8\n        /* \"#utility.yul\":1484:1506   */\n      add\n        /* \"#utility.yul\":1474:1506   */\n      swap2\n      pop\n        /* \"#utility.yul\":1544:1551   */\n      dup8\n        /* \"#utility.yul\":1537:1541   */\n      0x1f\n        /* \"#utility.yul\":1533:1535   */\n      dup4\n        /* \"#utility.yul\":1529:1542   */\n      add\n        /* \"#utility.yul\":1525:1552   */\n      slt\n        /* \"#utility.yul\":1515:1570   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":1566:1567   */\n      0x00\n        /* \"#utility.yul\":1563:1564   */\n      dup1\n        /* \"#utility.yul\":1556:1568   */\n      revert\n        /* \"#utility.yul\":1515:1570   */\n    tag_270:\n        /* \"#utility.yul\":1602:1604   */\n      dup2\n        /* \"#utility.yul\":1589:1605   */\n      calldataload\n        /* \"#utility.yul\":1624:1626   */\n      dup2\n        /* \"#utility.yul\":1620:1622   */\n      dup2\n        /* \"#utility.yul\":1617:1627   */\n      gt\n        /* \"#utility.yul\":1614:1650   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1630:1648   */\n      tag_272\n      tag_213\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1705:1707   */\n      0x40\n        /* \"#utility.yul\":1699:1708   */\n      mload\n        /* \"#utility.yul\":1673:1675   */\n      0x1f\n        /* \"#utility.yul\":1759:1772   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1755:1777   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1779:1781   */\n      0x3f\n        /* \"#utility.yul\":1751:1782   */\n      add\n        /* \"#utility.yul\":1747:1787   */\n      and\n        /* \"#utility.yul\":1735:1788   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1803:1821   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1823:1845   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1800:1846   */\n      or\n        /* \"#utility.yul\":1797:1869   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":1849:1867   */\n      tag_274\n      tag_213\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1889:1899   */\n      dup2\n        /* \"#utility.yul\":1885:1887   */\n      0x40\n        /* \"#utility.yul\":1878:1900   */\n      mstore\n        /* \"#utility.yul\":1924:1926   */\n      dup3\n        /* \"#utility.yul\":1916:1922   */\n      dup2\n        /* \"#utility.yul\":1909:1927   */\n      mstore\n        /* \"#utility.yul\":1964:1971   */\n      dup11\n        /* \"#utility.yul\":1959:1961   */\n      0x20\n        /* \"#utility.yul\":1954:1956   */\n      dup5\n        /* \"#utility.yul\":1950:1952   */\n      dup8\n        /* \"#utility.yul\":1946:1957   */\n      add\n        /* \"#utility.yul\":1942:1962   */\n      add\n        /* \"#utility.yul\":1939:1972   */\n      gt\n        /* \"#utility.yul\":1936:1989   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":1985:1986   */\n      0x00\n        /* \"#utility.yul\":1982:1983   */\n      dup1\n        /* \"#utility.yul\":1975:1987   */\n      revert\n        /* \"#utility.yul\":1936:1989   */\n    tag_275:\n        /* \"#utility.yul\":2041:2043   */\n      dup3\n        /* \"#utility.yul\":2036:2038   */\n      0x20\n        /* \"#utility.yul\":2032:2034   */\n      dup7\n        /* \"#utility.yul\":2028:2039   */\n      add\n        /* \"#utility.yul\":2023:2025   */\n      0x20\n        /* \"#utility.yul\":2015:2021   */\n      dup4\n        /* \"#utility.yul\":2011:2026   */\n      add\n        /* \"#utility.yul\":1998:2044   */\n      calldatacopy\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2081:2083   */\n      0x20\n        /* \"#utility.yul\":2076:2078   */\n      dup5\n        /* \"#utility.yul\":2068:2074   */\n      dup4\n        /* \"#utility.yul\":2064:2079   */\n      add\n        /* \"#utility.yul\":2060:2084   */\n      add\n        /* \"#utility.yul\":2053:2088   */\n      mstore\n        /* \"#utility.yul\":2107:2113   */\n      dup1\n        /* \"#utility.yul\":2097:2113   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:2119   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2124:2471   */\n    tag_60:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      dup1\n        /* \"#utility.yul\":2250:2252   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup4\n        /* \"#utility.yul\":2229:2236   */\n      dup6\n        /* \"#utility.yul\":2225:2248   */\n      sub\n        /* \"#utility.yul\":2221:2253   */\n      slt\n        /* \"#utility.yul\":2218:2270   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2263:2264   */\n      dup1\n        /* \"#utility.yul\":2256:2268   */\n      revert\n        /* \"#utility.yul\":2218:2270   */\n    tag_277:\n        /* \"#utility.yul\":2289:2318   */\n      tag_278\n        /* \"#utility.yul\":2308:2317   */\n      dup4\n        /* \"#utility.yul\":2289:2318   */\n      tag_251\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2279:2318   */\n      swap2\n      pop\n        /* \"#utility.yul\":2368:2370   */\n      0x20\n        /* \"#utility.yul\":2357:2366   */\n      dup4\n        /* \"#utility.yul\":2353:2371   */\n      add\n        /* \"#utility.yul\":2340:2372   */\n      calldataload\n        /* \"#utility.yul\":2415:2420   */\n      dup1\n        /* \"#utility.yul\":2408:2421   */\n      iszero\n        /* \"#utility.yul\":2401:2422   */\n      iszero\n        /* \"#utility.yul\":2394:2399   */\n      dup2\n        /* \"#utility.yul\":2391:2423   */\n      eq\n        /* \"#utility.yul\":2381:2441   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2434:2435   */\n      dup1\n        /* \"#utility.yul\":2427:2439   */\n      revert\n        /* \"#utility.yul\":2381:2441   */\n    tag_279:\n        /* \"#utility.yul\":2460:2465   */\n      dup1\n        /* \"#utility.yul\":2450:2465   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2124:2471   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2476:2730   */\n    tag_36:\n        /* \"#utility.yul\":2544:2550   */\n      0x00\n        /* \"#utility.yul\":2552:2558   */\n      dup1\n        /* \"#utility.yul\":2605:2607   */\n      0x40\n        /* \"#utility.yul\":2593:2602   */\n      dup4\n        /* \"#utility.yul\":2584:2591   */\n      dup6\n        /* \"#utility.yul\":2580:2603   */\n      sub\n        /* \"#utility.yul\":2576:2608   */\n      slt\n        /* \"#utility.yul\":2573:2625   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2621:2622   */\n      0x00\n        /* \"#utility.yul\":2618:2619   */\n      dup1\n        /* \"#utility.yul\":2611:2623   */\n      revert\n        /* \"#utility.yul\":2573:2625   */\n    tag_281:\n        /* \"#utility.yul\":2644:2673   */\n      tag_282\n        /* \"#utility.yul\":2663:2672   */\n      dup4\n        /* \"#utility.yul\":2644:2673   */\n      tag_251\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2634:2673   */\n      swap5\n        /* \"#utility.yul\":2720:2722   */\n      0x20\n        /* \"#utility.yul\":2705:2723   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2692:2724   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2476:2730   */\n      jump\t// out\n        /* \"#utility.yul\":2735:2980   */\n    tag_20:\n        /* \"#utility.yul\":2793:2799   */\n      0x00\n        /* \"#utility.yul\":2846:2848   */\n      0x20\n        /* \"#utility.yul\":2834:2843   */\n      dup3\n        /* \"#utility.yul\":2825:2832   */\n      dup5\n        /* \"#utility.yul\":2821:2844   */\n      sub\n        /* \"#utility.yul\":2817:2849   */\n      slt\n        /* \"#utility.yul\":2814:2866   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":2862:2863   */\n      0x00\n        /* \"#utility.yul\":2859:2860   */\n      dup1\n        /* \"#utility.yul\":2852:2864   */\n      revert\n        /* \"#utility.yul\":2814:2866   */\n    tag_284:\n        /* \"#utility.yul\":2901:2910   */\n      dup2\n        /* \"#utility.yul\":2888:2911   */\n      calldataload\n        /* \"#utility.yul\":2920:2950   */\n      tag_152\n        /* \"#utility.yul\":2944:2949   */\n      dup2\n        /* \"#utility.yul\":2920:2950   */\n      tag_286\n      jump\t// in\n        /* \"#utility.yul\":2985:3234   */\n    tag_237:\n        /* \"#utility.yul\":3054:3060   */\n      0x00\n        /* \"#utility.yul\":3107:3109   */\n      0x20\n        /* \"#utility.yul\":3095:3104   */\n      dup3\n        /* \"#utility.yul\":3086:3093   */\n      dup5\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3110   */\n      slt\n        /* \"#utility.yul\":3075:3127   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3123:3124   */\n      0x00\n        /* \"#utility.yul\":3120:3121   */\n      dup1\n        /* \"#utility.yul\":3113:3125   */\n      revert\n        /* \"#utility.yul\":3075:3127   */\n    tag_288:\n        /* \"#utility.yul\":3155:3164   */\n      dup2\n        /* \"#utility.yul\":3149:3165   */\n      mload\n        /* \"#utility.yul\":3174:3204   */\n      tag_152\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3174:3204   */\n      tag_286\n      jump\t// in\n        /* \"#utility.yul\":3239:3419   */\n    tag_30:\n        /* \"#utility.yul\":3298:3304   */\n      0x00\n        /* \"#utility.yul\":3351:3353   */\n      0x20\n        /* \"#utility.yul\":3339:3348   */\n      dup3\n        /* \"#utility.yul\":3330:3337   */\n      dup5\n        /* \"#utility.yul\":3326:3349   */\n      sub\n        /* \"#utility.yul\":3322:3354   */\n      slt\n        /* \"#utility.yul\":3319:3371   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3367:3368   */\n      0x00\n        /* \"#utility.yul\":3364:3365   */\n      dup1\n        /* \"#utility.yul\":3357:3369   */\n      revert\n        /* \"#utility.yul\":3319:3371   */\n    tag_291:\n      pop\n        /* \"#utility.yul\":3390:3413   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3239:3419   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3424:3681   */\n    tag_292:\n        /* \"#utility.yul\":3465:3468   */\n      0x00\n        /* \"#utility.yul\":3503:3508   */\n      dup2\n        /* \"#utility.yul\":3497:3509   */\n      mload\n        /* \"#utility.yul\":3530:3536   */\n      dup1\n        /* \"#utility.yul\":3525:3528   */\n      dup5\n        /* \"#utility.yul\":3518:3537   */\n      mstore\n        /* \"#utility.yul\":3546:3609   */\n      tag_294\n        /* \"#utility.yul\":3602:3608   */\n      dup2\n        /* \"#utility.yul\":3595:3599   */\n      0x20\n        /* \"#utility.yul\":3590:3593   */\n      dup7\n        /* \"#utility.yul\":3586:3600   */\n      add\n        /* \"#utility.yul\":3579:3583   */\n      0x20\n        /* \"#utility.yul\":3572:3577   */\n      dup7\n        /* \"#utility.yul\":3568:3584   */\n      add\n        /* \"#utility.yul\":3546:3609   */\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3663:3665   */\n      0x1f\n        /* \"#utility.yul\":3642:3657   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3638:3667   */\n      and\n        /* \"#utility.yul\":3629:3668   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3670:3674   */\n      0x20\n        /* \"#utility.yul\":3625:3675   */\n      add\n      swap3\n        /* \"#utility.yul\":3424:3681   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3686:4156   */\n    tag_156:\n        /* \"#utility.yul\":3865:3868   */\n      0x00\n        /* \"#utility.yul\":3903:3909   */\n      dup4\n        /* \"#utility.yul\":3897:3910   */\n      mload\n        /* \"#utility.yul\":3919:3972   */\n      tag_297\n        /* \"#utility.yul\":3965:3971   */\n      dup2\n        /* \"#utility.yul\":3960:3963   */\n      dup5\n        /* \"#utility.yul\":3953:3957   */\n      0x20\n        /* \"#utility.yul\":3945:3951   */\n      dup9\n        /* \"#utility.yul\":3941:3958   */\n      add\n        /* \"#utility.yul\":3919:3972   */\n      tag_295\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4035:4048   */\n      dup4\n      mload\n        /* \"#utility.yul\":3994:4010   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4057:4114   */\n      tag_298\n        /* \"#utility.yul\":4035:4048   */\n      dup2\n        /* \"#utility.yul\":3994:4010   */\n      dup4\n        /* \"#utility.yul\":4091:4095   */\n      0x20\n        /* \"#utility.yul\":4079:4096   */\n      dup9\n      add\n        /* \"#utility.yul\":4057:4114   */\n      tag_295\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4130:4150   */\n      add\n      swap5\n        /* \"#utility.yul\":3686:4156   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4369:4857   */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4638:4653   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":4620:4654   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4690:4705   */\n      dup5\n      and\n        /* \"#utility.yul\":4685:4687   */\n      0x20\n        /* \"#utility.yul\":4670:4688   */\n      dup3\n      add\n        /* \"#utility.yul\":4663:4706   */\n      mstore\n        /* \"#utility.yul\":4737:4739   */\n      0x40\n        /* \"#utility.yul\":4722:4740   */\n      dup2\n      add\n        /* \"#utility.yul\":4715:4749   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4785:4788   */\n      0x80\n        /* \"#utility.yul\":4780:4782   */\n      0x60\n        /* \"#utility.yul\":4765:4783   */\n      dup3\n      add\n        /* \"#utility.yul\":4758:4789   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4563:4567   */\n      0x00\n      swap1\n        /* \"#utility.yul\":4806:4851   */\n      tag_301\n      swap1\n        /* \"#utility.yul\":4831:4850   */\n      dup4\n      add\n        /* \"#utility.yul\":4823:4829   */\n      dup5\n        /* \"#utility.yul\":4806:4851   */\n      tag_292\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4798:4851   */\n      swap7\n        /* \"#utility.yul\":4369:4857   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5054:5273   */\n    tag_27:\n        /* \"#utility.yul\":5203:5205   */\n      0x20\n        /* \"#utility.yul\":5192:5201   */\n      dup2\n        /* \"#utility.yul\":5185:5206   */\n      mstore\n        /* \"#utility.yul\":5166:5170   */\n      0x00\n        /* \"#utility.yul\":5223:5267   */\n      tag_152\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"#utility.yul\":5252:5261   */\n      dup4\n        /* \"#utility.yul\":5248:5266   */\n      add\n        /* \"#utility.yul\":5240:5246   */\n      dup5\n        /* \"#utility.yul\":5223:5267   */\n      tag_292\n      jump\t// in\n        /* \"#utility.yul\":5278:5692   */\n    tag_201:\n        /* \"#utility.yul\":5480:5482   */\n      0x20\n        /* \"#utility.yul\":5462:5483   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5519:5521   */\n      0x32\n        /* \"#utility.yul\":5499:5517   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5492:5522   */\n      mstore\n        /* \"#utility.yul\":5558:5592   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":5553:5555   */\n      0x40\n        /* \"#utility.yul\":5538:5556   */\n      dup3\n      add\n        /* \"#utility.yul\":5531:5593   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":5624:5626   */\n      0x60\n        /* \"#utility.yul\":5609:5627   */\n      dup3\n      add\n        /* \"#utility.yul\":5602:5650   */\n      mstore\n        /* \"#utility.yul\":5682:5685   */\n      0x80\n        /* \"#utility.yul\":5667:5686   */\n      add\n      swap1\n        /* \"#utility.yul\":5278:5692   */\n      jump\t// out\n        /* \"#utility.yul\":9752:10165   */\n    tag_114:\n        /* \"#utility.yul\":9954:9956   */\n      0x20\n        /* \"#utility.yul\":9936:9957   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9993:9995   */\n      0x31\n        /* \"#utility.yul\":9973:9991   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9966:9996   */\n      mstore\n        /* \"#utility.yul\":10032:10066   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":10027:10029   */\n      0x40\n        /* \"#utility.yul\":10012:10030   */\n      dup3\n      add\n        /* \"#utility.yul\":10005:10067   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":10098:10100   */\n      0x60\n        /* \"#utility.yul\":10083:10101   */\n      dup3\n      add\n        /* \"#utility.yul\":10076:10123   */\n      mstore\n        /* \"#utility.yul\":10155:10158   */\n      0x80\n        /* \"#utility.yul\":10140:10159   */\n      add\n      swap1\n        /* \"#utility.yul\":9752:10165   */\n      jump\t// out\n        /* \"#utility.yul\":10352:10480   */\n    tag_187:\n        /* \"#utility.yul\":10392:10395   */\n      0x00\n        /* \"#utility.yul\":10423:10424   */\n      dup3\n        /* \"#utility.yul\":10419:10425   */\n      not\n        /* \"#utility.yul\":10416:10417   */\n      dup3\n        /* \"#utility.yul\":10413:10426   */\n      gt\n        /* \"#utility.yul\":10410:10449   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":10429:10447   */\n      tag_320\n      tag_321\n      jump\t// in\n    tag_320:\n      pop\n        /* \"#utility.yul\":10465:10474   */\n      add\n      swap1\n        /* \"#utility.yul\":10352:10480   */\n      jump\t// out\n        /* \"#utility.yul\":10485:10605   */\n    tag_210:\n        /* \"#utility.yul\":10525:10526   */\n      0x00\n        /* \"#utility.yul\":10551:10552   */\n      dup3\n        /* \"#utility.yul\":10541:10576   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":10556:10574   */\n      tag_324\n      tag_325\n      jump\t// in\n    tag_324:\n      pop\n        /* \"#utility.yul\":10590:10599   */\n      div\n      swap1\n        /* \"#utility.yul\":10485:10605   */\n      jump\t// out\n        /* \"#utility.yul\":10610:10735   */\n    tag_185:\n        /* \"#utility.yul\":10650:10654   */\n      0x00\n        /* \"#utility.yul\":10678:10679   */\n      dup3\n        /* \"#utility.yul\":10675:10676   */\n      dup3\n        /* \"#utility.yul\":10672:10680   */\n      lt\n        /* \"#utility.yul\":10669:10703   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":10683:10701   */\n      tag_328\n      tag_321\n      jump\t// in\n    tag_328:\n      pop\n        /* \"#utility.yul\":10720:10729   */\n      sub\n      swap1\n        /* \"#utility.yul\":10610:10735   */\n      jump\t// out\n        /* \"#utility.yul\":10740:10998   */\n    tag_295:\n        /* \"#utility.yul\":10812:10813   */\n      0x00\n        /* \"#utility.yul\":10822:10935   */\n    tag_330:\n        /* \"#utility.yul\":10836:10842   */\n      dup4\n        /* \"#utility.yul\":10833:10834   */\n      dup2\n        /* \"#utility.yul\":10830:10843   */\n      lt\n        /* \"#utility.yul\":10822:10935   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":10912:10923   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10906:10924   */\n      mload\n        /* \"#utility.yul\":10893:10904   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":10886:10925   */\n      mstore\n        /* \"#utility.yul\":10858:10860   */\n      0x20\n        /* \"#utility.yul\":10851:10861   */\n      add\n        /* \"#utility.yul\":10822:10935   */\n      jump(tag_330)\n    tag_332:\n        /* \"#utility.yul\":10953:10959   */\n      dup4\n        /* \"#utility.yul\":10950:10951   */\n      dup2\n        /* \"#utility.yul\":10947:10960   */\n      gt\n        /* \"#utility.yul\":10944:10992   */\n      iszero\n      tag_142\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":10988:10989   */\n      0x00\n        /* \"#utility.yul\":10970:10986   */\n      swap2\n      add\n        /* \"#utility.yul\":10963:10990   */\n      mstore\n        /* \"#utility.yul\":10740:10998   */\n      jump\t// out\n        /* \"#utility.yul\":11003:11383   */\n    tag_82:\n        /* \"#utility.yul\":11082:11083   */\n      0x01\n        /* \"#utility.yul\":11078:11090   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":11125:11137   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":11146:11207   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":11200:11204   */\n      0x7f\n        /* \"#utility.yul\":11192:11198   */\n      dup3\n        /* \"#utility.yul\":11188:11205   */\n      and\n        /* \"#utility.yul\":11178:11205   */\n      swap2\n      pop\n        /* \"#utility.yul\":11146:11207   */\n    tag_335:\n        /* \"#utility.yul\":11253:11255   */\n      0x20\n        /* \"#utility.yul\":11245:11251   */\n      dup3\n        /* \"#utility.yul\":11242:11256   */\n      lt\n        /* \"#utility.yul\":11222:11240   */\n      dup2\n        /* \"#utility.yul\":11219:11257   */\n      eq\n        /* \"#utility.yul\":11216:11377   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":11299:11309   */\n      0x4e487b71\n        /* \"#utility.yul\":11294:11297   */\n      0xe0\n        /* \"#utility.yul\":11290:11310   */\n      shl\n        /* \"#utility.yul\":11287:11288   */\n      0x00\n        /* \"#utility.yul\":11280:11311   */\n      mstore\n        /* \"#utility.yul\":11334:11338   */\n      0x22\n        /* \"#utility.yul\":11331:11332   */\n      0x04\n        /* \"#utility.yul\":11324:11339   */\n      mstore\n        /* \"#utility.yul\":11362:11366   */\n      0x24\n        /* \"#utility.yul\":11359:11360   */\n      0x00\n        /* \"#utility.yul\":11352:11367   */\n      revert\n        /* \"#utility.yul\":11216:11377   */\n    tag_336:\n      pop\n        /* \"#utility.yul\":11003:11383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11388:11523   */\n    tag_208:\n        /* \"#utility.yul\":11427:11430   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":11448:11465   */\n      dup3\n      eq\n        /* \"#utility.yul\":11445:11488   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":11468:11486   */\n      tag_339\n      tag_321\n      jump\t// in\n    tag_339:\n      pop\n        /* \"#utility.yul\":11515:11516   */\n      0x01\n        /* \"#utility.yul\":11504:11517   */\n      add\n      swap1\n        /* \"#utility.yul\":11388:11523   */\n      jump\t// out\n        /* \"#utility.yul\":11528:11640   */\n    tag_219:\n        /* \"#utility.yul\":11560:11561   */\n      0x00\n        /* \"#utility.yul\":11586:11587   */\n      dup3\n        /* \"#utility.yul\":11576:11611   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":11591:11609   */\n      tag_342\n      tag_325\n      jump\t// in\n    tag_342:\n      pop\n        /* \"#utility.yul\":11625:11634   */\n      mod\n      swap1\n        /* \"#utility.yul\":11528:11640   */\n      jump\t// out\n        /* \"#utility.yul\":11645:11772   */\n    tag_321:\n        /* \"#utility.yul\":11706:11716   */\n      0x4e487b71\n        /* \"#utility.yul\":11701:11704   */\n      0xe0\n        /* \"#utility.yul\":11697:11717   */\n      shl\n        /* \"#utility.yul\":11694:11695   */\n      0x00\n        /* \"#utility.yul\":11687:11718   */\n      mstore\n        /* \"#utility.yul\":11737:11741   */\n      0x11\n        /* \"#utility.yul\":11734:11735   */\n      0x04\n        /* \"#utility.yul\":11727:11742   */\n      mstore\n        /* \"#utility.yul\":11761:11765   */\n      0x24\n        /* \"#utility.yul\":11758:11759   */\n      0x00\n        /* \"#utility.yul\":11751:11766   */\n      revert\n        /* \"#utility.yul\":11777:11904   */\n    tag_325:\n        /* \"#utility.yul\":11838:11848   */\n      0x4e487b71\n        /* \"#utility.yul\":11833:11836   */\n      0xe0\n        /* \"#utility.yul\":11829:11849   */\n      shl\n        /* \"#utility.yul\":11826:11827   */\n      0x00\n        /* \"#utility.yul\":11819:11850   */\n      mstore\n        /* \"#utility.yul\":11869:11873   */\n      0x12\n        /* \"#utility.yul\":11866:11867   */\n      0x04\n        /* \"#utility.yul\":11859:11874   */\n      mstore\n        /* \"#utility.yul\":11893:11897   */\n      0x24\n        /* \"#utility.yul\":11890:11891   */\n      0x00\n        /* \"#utility.yul\":11883:11898   */\n      revert\n        /* \"#utility.yul\":11909:12036   */\n    tag_223:\n        /* \"#utility.yul\":11970:11980   */\n      0x4e487b71\n        /* \"#utility.yul\":11965:11968   */\n      0xe0\n        /* \"#utility.yul\":11961:11981   */\n      shl\n        /* \"#utility.yul\":11958:11959   */\n      0x00\n        /* \"#utility.yul\":11951:11982   */\n      mstore\n        /* \"#utility.yul\":12001:12005   */\n      0x32\n        /* \"#utility.yul\":11998:11999   */\n      0x04\n        /* \"#utility.yul\":11991:12006   */\n      mstore\n        /* \"#utility.yul\":12025:12029   */\n      0x24\n        /* \"#utility.yul\":12022:12023   */\n      0x00\n        /* \"#utility.yul\":12015:12030   */\n      revert\n        /* \"#utility.yul\":12041:12168   */\n    tag_213:\n        /* \"#utility.yul\":12102:12112   */\n      0x4e487b71\n        /* \"#utility.yul\":12097:12100   */\n      0xe0\n        /* \"#utility.yul\":12093:12113   */\n      shl\n        /* \"#utility.yul\":12090:12091   */\n      0x00\n        /* \"#utility.yul\":12083:12114   */\n      mstore\n        /* \"#utility.yul\":12133:12137   */\n      0x41\n        /* \"#utility.yul\":12130:12131   */\n      0x04\n        /* \"#utility.yul\":12123:12138   */\n      mstore\n        /* \"#utility.yul\":12157:12161   */\n      0x24\n        /* \"#utility.yul\":12154:12155   */\n      0x00\n        /* \"#utility.yul\":12147:12162   */\n      revert\n        /* \"#utility.yul\":12173:12304   */\n    tag_286:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":12247:12279   */\n      dup2\n      and\n        /* \"#utility.yul\":12237:12280   */\n      dup2\n      eq\n        /* \"#utility.yul\":12227:12298   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":12294:12295   */\n      0x00\n        /* \"#utility.yul\":12291:12292   */\n      dup1\n        /* \"#utility.yul\":12284:12296   */\n      revert\n        /* \"#utility.yul\":12227:12298   */\n    tag_348:\n        /* \"#utility.yul\":12173:12304   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d6018ac69a992c1141b895b05e557396586965552d26c16b4fde1679b81e44e064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_167": {
									"entryPoint": null,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:14"
															},
															"nodeType": "YulIf",
															"src": "88:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:14",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:14"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:14"
															},
															"nodeType": "YulIf",
															"src": "221:36:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:14"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:14"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:14"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:14"
															},
															"nodeType": "YulIf",
															"src": "404:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:14"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:14"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:14"
															},
															"nodeType": "YulIf",
															"src": "566:53:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:14"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:14"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:14"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:14"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:14"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:14",
																"statements": []
															},
															"src": "647:133:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:14"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:14"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:14"
															},
															"nodeType": "YulIf",
															"src": "789:80:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:14",
														"type": ""
													}
												],
												"src": "14:885:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:14"
															},
															"nodeType": "YulIf",
															"src": "1032:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:14",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:14"
															},
															"nodeType": "YulIf",
															"src": "1169:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:14"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:14"
															},
															"nodeType": "YulIf",
															"src": "1342:36:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:14"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:14",
														"type": ""
													}
												],
												"src": "904:562:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:14"
															},
															"nodeType": "YulIf",
															"src": "1614:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:14"
															},
															"nodeType": "YulIf",
															"src": "1684:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:14",
														"type": ""
													}
												],
												"src": "1471:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620014ed380380620014ed8339810160408190526200003491620001c5565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61125b80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610f3a565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190611025565b61012461011f366004610f74565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610f10565b6103a6565b005b61014f61015f366004610dbc565b6104bc565b61014f610172366004610dbc565b6104ed565b610124610185366004610f74565b610508565b61019d610198366004610d6e565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610ed4565b610615565b61014f6101d4366004610df8565b610624565b6101046101e7366004610f74565b61065c565b6100e76101fa366004610d89565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102899061114a565b80601f01602080910402602001604051908101604052809291908181526020018280546102b59061114a565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b78383610744565b505050565b6104c633826107b2565b6104e25760405162461bcd60e51b81526004016103819061108a565b6104b78383836108a9565b6104b783838360405180602001604052806000815250610624565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b6060600180546102899061114a565b610620338383610a45565b5050565b61062e33836107b2565b61064a5760405162461bcd60e51b81526004016103819061108a565b61065684848484610b14565b50505050565b6000818152600260205260409020546060906001600160a01b03166106db5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f260408051602081019091526000815290565b90506000815111610712576040518060200160405280600081525061073d565b8061071c84610b47565b60405160200161072d929190610fb9565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077982610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083683610508565b9050806001600160a01b0316846001600160a01b0316148061087d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108a15750836001600160a01b03166108968461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166108bc82610508565b6001600160a01b0316146109205760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109825760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098d600082610744565b6001600160a01b03831660009081526003602052604081208054600192906109b6908490611107565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e49084906110db565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610aa75760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1f8484846108a9565b610b2b84848484610c45565b6106565760405162461bcd60e51b815260040161038190611038565b606081610b6b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b955780610b7f81611185565b9150610b8e9050600a836110f3565b9150610b6f565b60008167ffffffffffffffff811115610bb057610bb06111f6565b6040519080825280601f01601f191660200182016040528015610bda576020820181803683370190505b5090505b84156108a157610bef600183611107565b9150610bfc600a866111a0565b610c079060306110db565b60f81b818381518110610c1c57610c1c6111e0565b60200101906001600160f81b031916908160001a905350610c3e600a866110f3565b9450610bde565b60006001600160a01b0384163b15610d4757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c89903390899088908890600401610fe8565b602060405180830381600087803b158015610ca357600080fd5b505af1925050508015610cd3575060408051601f3d908101601f19168201909252610cd091810190610f57565b60015b610d2d573d808015610d01576040519150601f19603f3d011682016040523d82523d6000602084013e610d06565b606091505b508051610d255760405162461bcd60e51b815260040161038190611038565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a1565b506001949350505050565b80356001600160a01b0381168114610d6957600080fd5b919050565b600060208284031215610d8057600080fd5b61073d82610d52565b60008060408385031215610d9c57600080fd5b610da583610d52565b9150610db360208401610d52565b90509250929050565b600080600060608486031215610dd157600080fd5b610dda84610d52565b9250610de860208501610d52565b9150604084013590509250925092565b60008060008060808587031215610e0e57600080fd5b610e1785610d52565b9350610e2560208601610d52565b925060408501359150606085013567ffffffffffffffff80821115610e4957600080fd5b818701915087601f830112610e5d57600080fd5b813581811115610e6f57610e6f6111f6565b604051601f8201601f19908116603f01168101908382118183101715610e9757610e976111f6565b816040528281528a6020848701011115610eb057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610ee757600080fd5b610ef083610d52565b915060208301358015158114610f0557600080fd5b809150509250929050565b60008060408385031215610f2357600080fd5b610f2c83610d52565b946020939093013593505050565b600060208284031215610f4c57600080fd5b813561073d8161120c565b600060208284031215610f6957600080fd5b815161073d8161120c565b600060208284031215610f8657600080fd5b5035919050565b60008151808452610fa581602086016020860161111e565b601f01601f19169290920160200192915050565b60008351610fcb81846020880161111e565b835190830190610fdf81836020880161111e565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061101b90830184610f8d565b9695505050505050565b60208152600061073d6020830184610f8d565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156110ee576110ee6111b4565b500190565b600082611102576111026111ca565b500490565b600082821015611119576111196111b4565b500390565b60005b83811015611139578181015183820152602001611121565b838111156106565750506000910152565b600181811c9082168061115e57607f821691505b6020821081141561117f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611199576111996111b4565b5060010190565b6000826111af576111af6111ca565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461122257600080fd5b5056fea2646970667358221220d6018ac69a992c1141b895b05e557396586965552d26c16b4fde1679b81e44e064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14ED CODESIZE SUB DUP1 PUSH3 0x14ED DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x125B DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3A JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1025 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x114A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x744 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x624 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH2 0x620 CALLER DUP4 DUP4 PUSH2 0xA45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62E CALLER DUP4 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x656 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB14 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73D JUMP JUMPDEST DUP1 PUSH2 0x71C DUP5 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72D SWAP3 SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x779 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x87D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x8A1 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x896 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BC DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x98D PUSH1 0x0 DUP3 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B6 SWAP1 DUP5 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E4 SWAP1 DUP5 SWAP1 PUSH2 0x10DB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB1F DUP5 DUP5 DUP5 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0xB2B DUP5 DUP5 DUP5 DUP5 PUSH2 0xC45 JUMP JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB6B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB95 JUMPI DUP1 PUSH2 0xB7F DUP2 PUSH2 0x1185 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8E SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x10F3 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB0 JUMPI PUSH2 0xBB0 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A1 JUMPI PUSH2 0xBEF PUSH1 0x1 DUP4 PUSH2 0x1107 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFC PUSH1 0xA DUP7 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0xC07 SWAP1 PUSH1 0x30 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1C JUMPI PUSH2 0xC1C PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC3E PUSH1 0xA DUP7 PUSH2 0x10F3 JUMP JUMPDEST SWAP5 POP PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC89 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCD3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD0 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD2D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1038 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D DUP3 PUSH2 0xD52 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA5 DUP4 PUSH2 0xD52 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB3 PUSH1 0x20 DUP5 ADD PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDA DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP3 POP PUSH2 0xDE8 PUSH1 0x20 DUP6 ADD PUSH2 0xD52 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE17 DUP6 PUSH2 0xD52 JUMP JUMPDEST SWAP4 POP PUSH2 0xE25 PUSH1 0x20 DUP7 ADD PUSH2 0xD52 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE97 JUMPI PUSH2 0xE97 PUSH2 0x11F6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF0 DUP4 PUSH2 0xD52 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2C DUP4 PUSH2 0xD52 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73D DUP2 PUSH2 0x120C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73D DUP2 PUSH2 0x120C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xFA5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x111E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFCB DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x111E JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFDF DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x111E JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x101B SWAP1 DUP4 ADD DUP5 PUSH2 0xF8D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10EE JUMPI PUSH2 0x10EE PUSH2 0x11B4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1102 JUMPI PUSH2 0x1102 PUSH2 0x11CA JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1119 JUMPI PUSH2 0x1119 PUSH2 0x11B4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1139 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1121 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x656 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x115E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x117F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1199 JUMPI PUSH2 0x1199 PUSH2 0x11B4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11AF JUMPI PUSH2 0x11AF PUSH2 0x11CA JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 ADD DUP11 0xC6 SWAP11 SWAP10 0x2C GT COINBASE 0xB8 SWAP6 0xB0 0x5E SSTORE PUSH20 0x96586965552D26C16B4FDE1679B81E44E064736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "628:13658:1:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:1;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;628:13658;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:13658:1;;;-1:-1:-1;628:13658:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:14;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:14;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:14;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:14:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:14;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;628:13658:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_969": {
									"entryPoint": null,
									"id": 969,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_853": {
									"entryPoint": 1860,
									"id": 853,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_321": {
									"entryPoint": null,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_947": {
									"entryPoint": 3141,
									"id": 947,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_543": {
									"entryPoint": null,
									"id": 543,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_584": {
									"entryPoint": 1970,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1596": {
									"entryPoint": null,
									"id": 1596,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransfer_525": {
									"entryPoint": 2836,
									"id": 525,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_885": {
									"entryPoint": 2629,
									"id": 885,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_829": {
									"entryPoint": 2217,
									"id": 829,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_364": {
									"entryPoint": 934,
									"id": 364,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_222": {
									"entryPoint": 1407,
									"id": 222,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_385": {
									"entryPoint": 780,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_420": {
									"entryPoint": null,
									"id": 420,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1307": {
									"entryPoint": null,
									"id": 1307,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_260": {
									"entryPoint": 634,
									"id": 260,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_250": {
									"entryPoint": 1288,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_466": {
									"entryPoint": 1261,
									"id": 466,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_496": {
									"entryPoint": 1572,
									"id": 496,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_402": {
									"entryPoint": 1557,
									"id": 402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1906": {
									"entryPoint": null,
									"id": 1906,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_198": {
									"entryPoint": 552,
									"id": 198,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_270": {
									"entryPoint": 1542,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1765": {
									"entryPoint": 2887,
									"id": 1765,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_312": {
									"entryPoint": 1628,
									"id": 312,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_447": {
									"entryPoint": 1212,
									"id": 447,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 3981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4025,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4382,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12306:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:14"
															},
															"nodeType": "YulIf",
															"src": "111:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:14",
														"type": ""
													}
												],
												"src": "14:173:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:14"
															},
															"nodeType": "YulIf",
															"src": "272:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:14",
														"type": ""
													}
												],
												"src": "192:186:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:14"
															},
															"nodeType": "YulIf",
															"src": "480:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:14",
														"type": ""
													}
												],
												"src": "383:260:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:14"
															},
															"nodeType": "YulIf",
															"src": "762:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:14",
														"type": ""
													}
												],
												"src": "648:328:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1111:1008:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1158:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1170:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1160:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1160:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1160:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1132:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1128:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1128:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1124:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:33:14"
															},
															"nodeType": "YulIf",
															"src": "1121:53:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1183:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1193:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1231:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1264:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1275:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1241:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1241:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1288:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1326:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1298:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1288:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1339:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1381:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1366:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1366:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1353:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1343:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1394:28:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1404:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1398:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1437:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1434:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:14:14"
															},
															"nodeType": "YulIf",
															"src": "1431:34:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1474:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1488:9:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1499:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:22:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1478:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1554:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1563:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1556:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1556:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1556:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1533:2:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1537:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1529:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:35:14"
															},
															"nodeType": "YulIf",
															"src": "1515:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1579:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1589:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:16:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1583:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1628:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1630:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1630:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1630:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1620:2:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1624:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1617:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:10:14"
															},
															"nodeType": "YulIf",
															"src": "1614:36:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1659:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:7:14"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1663:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1685:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1699:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1689:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1717:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1739:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1763:2:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1767:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1759:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1759:13:14"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1774:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1755:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1755:22:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1779:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1751:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1751:31:14"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1784:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1747:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:40:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1735:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:53:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1721:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1847:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1849:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1849:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1849:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1806:10:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1818:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1803:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1803:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1826:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1838:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1823:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1823:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1800:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:46:14"
															},
															"nodeType": "YulIf",
															"src": "1797:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1885:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1889:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1878:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1916:6:14"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1924:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:18:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:18:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1973:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1982:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1985:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1975:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1975:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1975:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1950:2:14"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1954:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1946:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1946:11:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1959:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:20:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1964:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1939:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:33:14"
															},
															"nodeType": "YulIf",
															"src": "1936:53:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2015:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2023:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2011:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2011:15:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2032:2:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2036:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:11:14"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2041:2:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1998:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1998:46:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2068:6:14"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2076:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2064:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2064:15:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2081:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2060:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2060:24:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2053:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2097:16:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2107:6:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1053:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1064:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1076:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1084:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1092:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1100:6:14",
														"type": ""
													}
												],
												"src": "981:1138:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2254:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2263:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2266:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2256:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2256:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2256:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2229:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2238:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2250:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:32:14"
															},
															"nodeType": "YulIf",
															"src": "2218:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2279:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2308:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2289:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2327:45:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2357:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2368:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2340:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2340:32:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2331:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2425:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2434:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2427:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2427:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2427:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2394:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2415:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2408:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2408:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2401:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2401:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2391:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2391:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2384:40:14"
															},
															"nodeType": "YulIf",
															"src": "2381:60:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2450:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2460:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2166:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2177:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2189:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2197:6:14",
														"type": ""
													}
												],
												"src": "2124:347:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2563:167:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2618:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2621:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2611:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2584:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2593:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2580:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2605:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2576:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2576:32:14"
															},
															"nodeType": "YulIf",
															"src": "2573:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2634:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2663:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2644:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2634:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2682:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2692:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2692:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2521:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2532:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2544:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2552:6:14",
														"type": ""
													}
												],
												"src": "2476:254:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:176:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2850:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2859:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2862:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2852:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2852:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2852:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2825:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2834:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2821:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2821:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2846:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2817:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:32:14"
															},
															"nodeType": "YulIf",
															"src": "2814:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2875:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2901:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2888:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2888:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2879:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2944:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2920:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2920:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2959:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2969:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2959:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2770:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2781:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2793:6:14",
														"type": ""
													}
												],
												"src": "2735:245:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:169:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3111:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3120:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3123:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3113:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3113:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3113:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:32:14"
															},
															"nodeType": "YulIf",
															"src": "3075:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3136:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3155:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3149:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3140:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3174:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3174:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3213:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3223:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3213:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3031:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3042:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3054:6:14",
														"type": ""
													}
												],
												"src": "2985:249:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3309:110:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3355:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3364:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3367:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3357:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3357:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3357:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3330:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3339:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3326:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:32:14"
															},
															"nodeType": "YulIf",
															"src": "3319:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3380:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3403:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3390:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3275:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3286:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3298:6:14",
														"type": ""
													}
												],
												"src": "3239:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3473:208:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3483:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3503:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3497:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3487:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3525:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3530:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:19:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3568:16:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3590:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3595:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3586:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:14:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3546:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:63:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3546:63:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3633:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3646:6:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3642:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3642:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3663:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3659:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3659:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3638:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3638:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:39:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3625:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3625:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3450:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3457:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3465:3:14",
														"type": ""
													}
												],
												"src": "3424:257:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3873:283:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3883:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3903:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3897:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3897:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3887:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3945:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3953:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3941:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3941:17:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3960:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3965:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3919:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:53:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3919:53:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3981:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3998:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3994:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:16:14"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "3985:5:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4019:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4041:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4035:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:13:14"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "4023:8:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4083:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4091:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:17:14"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4098:5:14"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4105:8:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4057:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:57:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:57:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4123:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4134:5:14"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4141:8:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4130:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:20:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4123:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3841:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3846:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3854:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3865:3:14",
														"type": ""
													}
												],
												"src": "3686:470:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4262:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4272:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4284:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4280:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4272:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4314:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4329:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4345:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4350:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4341:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4341:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4354:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4337:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4337:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4325:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4325:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4307:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4231:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4242:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4253:4:14",
														"type": ""
													}
												],
												"src": "4161:203:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4572:285:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4582:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4600:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4605:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:11:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4592:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4586:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4627:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4642:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4650:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4620:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4620:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4685:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4670:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4694:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4690:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4690:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4663:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4726:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4737:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4722:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4722:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4742:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4715:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4769:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4780:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4765:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4758:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4758:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4758:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4798:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4823:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4835:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4846:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4831:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4831:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4806:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:45:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4798:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4517:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4528:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4536:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4544:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4552:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4563:4:14",
														"type": ""
													}
												],
												"src": "4369:488:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:92:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4967:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4979:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4967:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5009:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5034:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5027:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5027:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5020:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5020:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5002:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5002:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4926:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4937:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4948:4:14",
														"type": ""
													}
												],
												"src": "4862:187:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5175:98:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5192:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5203:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5185:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5185:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5185:21:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5215:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5240:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5252:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5263:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5223:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:44:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5215:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5144:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5155:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5166:4:14",
														"type": ""
													}
												],
												"src": "5054:219:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5452:240:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5469:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5480:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5462:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5462:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5462:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5503:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5514:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5499:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5499:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5519:2:14",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5492:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5492:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5492:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5542:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5553:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5538:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5538:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5558:34:14",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5531:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5531:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5531:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5613:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5624:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5609:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5609:18:14"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5629:20:14",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5602:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5602:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5602:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5659:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5671:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5682:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5667:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5659:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5429:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5443:4:14",
														"type": ""
													}
												],
												"src": "5278:414:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5871:227:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5888:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5899:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5881:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5881:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5881:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5922:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5933:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5918:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5918:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5938:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5911:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5911:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5961:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5972:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5957:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5957:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5977:34:14",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5950:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5950:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6043:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:18:14"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6048:7:14",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6021:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6065:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6077:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6088:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6073:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6073:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6065:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5848:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5862:4:14",
														"type": ""
													}
												],
												"src": "5697:401:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6277:226:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6294:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6305:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6287:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6287:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6344:2:14",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6317:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6317:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6367:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6378:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6363:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6363:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6383:34:14",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6356:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6356:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6356:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6438:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6449:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6434:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6434:18:14"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6454:6:14",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6427:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6427:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6427:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6470:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6482:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6493:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6478:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6470:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6254:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6268:4:14",
														"type": ""
													}
												],
												"src": "6103:400:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6682:175:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6699:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6710:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6692:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6692:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6692:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6733:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6744:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6729:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6729:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6749:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6722:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6722:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6722:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6772:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6783:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6768:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6768:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6788:27:14",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6761:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:55:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6761:55:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6825:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6837:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6833:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6833:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6825:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6659:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6673:4:14",
														"type": ""
													}
												],
												"src": "6508:349:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7036:234:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7053:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7064:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7046:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7046:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7046:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7087:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7098:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7083:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7083:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7103:2:14",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7076:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7076:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7126:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7137:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7122:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7122:18:14"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7142:34:14",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7115:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7197:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7208:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7193:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7193:18:14"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7213:14:14",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7186:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7186:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7186:42:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7237:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7249:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7260:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7245:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7237:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7013:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7027:4:14",
														"type": ""
													}
												],
												"src": "6862:408:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7449:246:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7466:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7477:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7459:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7459:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7459:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7500:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7511:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7496:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7496:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7516:2:14",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7489:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7489:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7489:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7539:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7550:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7535:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7535:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7555:34:14",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7528:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7528:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7610:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7621:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7606:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7606:18:14"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7626:26:14",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7599:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7599:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7599:54:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7662:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7674:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7685:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7670:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7662:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7426:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7440:4:14",
														"type": ""
													}
												],
												"src": "7275:420:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7874:232:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7891:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7902:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7884:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7884:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7884:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7925:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7936:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7921:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7921:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7941:2:14",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7914:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7914:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7914:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7964:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7975:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7960:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7960:18:14"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7980:34:14",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7953:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7953:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7953:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8035:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8046:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8031:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8031:18:14"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8051:12:14",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8024:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8024:40:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8024:40:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8073:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8085:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8096:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8081:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8081:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8073:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7851:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7865:4:14",
														"type": ""
													}
												],
												"src": "7700:406:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8285:231:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8302:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8313:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8295:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8295:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8295:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8336:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8347:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8332:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8332:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8352:2:14",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8325:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8325:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8325:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8375:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8386:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8371:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8371:18:14"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8391:34:14",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8364:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8364:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8364:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8446:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8457:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8442:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8442:18:14"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8462:11:14",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8435:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8435:39:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8435:39:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8483:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8495:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8506:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8491:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8491:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8483:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8262:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8276:4:14",
														"type": ""
													}
												],
												"src": "8111:405:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8695:234:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8712:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8723:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8705:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8705:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8705:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8746:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8757:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8742:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8742:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8762:2:14",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8735:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8735:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8735:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8785:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8796:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8781:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8781:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8801:34:14",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8774:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8774:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8774:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8856:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8867:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8852:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8852:18:14"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8872:14:14",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8845:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8845:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8845:42:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8896:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8908:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8919:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8904:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8904:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8896:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8672:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8686:4:14",
														"type": ""
													}
												],
												"src": "8521:408:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9108:237:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9125:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9136:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9118:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9118:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9118:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9159:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9170:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9155:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9155:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9175:2:14",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9148:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9148:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9148:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9209:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9194:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9194:18:14"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9214:34:14",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9187:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9187:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9269:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9280:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9265:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9265:18:14"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9285:17:14",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9258:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9258:45:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9258:45:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9312:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9324:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9335:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9320:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9320:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9312:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9085:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9099:4:14",
														"type": ""
													}
												],
												"src": "8934:411:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9524:223:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9541:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9552:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9534:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9534:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9534:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9575:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9586:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9571:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9571:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9591:2:14",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9564:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9564:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9564:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9614:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9625:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9610:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9610:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9630:34:14",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9603:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9603:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9603:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9685:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9696:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9681:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9681:18:14"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9701:3:14",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9674:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9674:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9674:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9714:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9726:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9737:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9722:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9722:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9714:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9501:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9515:4:14",
														"type": ""
													}
												],
												"src": "9350:397:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9926:239:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9943:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9954:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9936:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9936:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9936:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9977:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9988:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9973:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9973:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9993:2:14",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9966:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9966:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9966:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10016:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10027:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10012:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10012:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10032:34:14",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10005:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10005:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10005:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10087:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10098:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10083:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10083:18:14"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10103:19:14",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10076:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10076:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10076:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10132:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10144:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10155:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10140:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10140:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10132:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9903:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9917:4:14",
														"type": ""
													}
												],
												"src": "9752:413:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10271:76:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10281:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10293:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10304:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10289:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10289:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10281:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10323:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10334:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10316:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10316:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10316:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10240:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10251:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10262:4:14",
														"type": ""
													}
												],
												"src": "10170:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10400:80:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10427:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10429:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10429:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10429:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10416:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10423:1:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10419:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10419:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10413:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10413:13:14"
															},
															"nodeType": "YulIf",
															"src": "10410:39:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10458:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10469:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10472:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10465:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10465:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10458:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10383:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10386:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10392:3:14",
														"type": ""
													}
												],
												"src": "10352:128:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10531:74:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10554:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10556:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10556:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10556:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10551:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10544:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10544:9:14"
															},
															"nodeType": "YulIf",
															"src": "10541:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10585:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10594:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10597:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10590:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10590:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10585:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10516:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10519:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10525:1:14",
														"type": ""
													}
												],
												"src": "10485:120:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10659:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10681:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10683:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10683:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10683:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10675:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10678:1:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10672:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10672:8:14"
															},
															"nodeType": "YulIf",
															"src": "10669:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10712:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10724:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10727:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10720:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10720:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10712:4:14"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10641:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10644:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10650:4:14",
														"type": ""
													}
												],
												"src": "10610:125:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10793:205:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10803:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10812:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10807:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10872:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10897:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10902:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10893:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10893:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10916:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10921:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10912:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10912:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10906:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10906:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10886:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10886:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10886:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10833:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10836:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10830:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10830:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10844:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10846:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10855:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10858:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10851:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10851:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10846:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10826:3:14",
																"statements": []
															},
															"src": "10822:113:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10961:31:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10974:3:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10979:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10970:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10970:16:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10988:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10963:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10963:27:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10963:27:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10950:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10953:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10947:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10947:13:14"
															},
															"nodeType": "YulIf",
															"src": "10944:48:14"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10771:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10776:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10781:6:14",
														"type": ""
													}
												],
												"src": "10740:258:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11058:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11068:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11082:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11085:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "11078:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11078:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11068:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11099:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11129:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11135:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11125:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11125:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11103:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11176:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11178:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11192:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11200:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11188:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11188:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11178:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11156:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11149:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11149:26:14"
															},
															"nodeType": "YulIf",
															"src": "11146:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11266:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11287:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11294:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11299:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11290:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11290:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11280:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11280:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11280:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11331:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11334:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11324:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11324:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11324:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11359:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11362:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11352:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11352:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11352:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11222:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11245:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11253:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11242:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11242:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11219:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11219:38:14"
															},
															"nodeType": "YulIf",
															"src": "11216:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11038:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11047:6:14",
														"type": ""
													}
												],
												"src": "11003:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11435:88:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11466:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11468:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11468:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11468:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11451:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11462:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11458:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11458:6:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11448:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11448:17:14"
															},
															"nodeType": "YulIf",
															"src": "11445:43:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11497:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11508:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11515:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11504:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11504:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11497:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11417:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11427:3:14",
														"type": ""
													}
												],
												"src": "11388:135:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11566:74:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11589:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11591:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11591:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11591:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11586:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11579:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11579:9:14"
															},
															"nodeType": "YulIf",
															"src": "11576:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11620:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11629:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11632:1:14"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "11625:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11625:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11620:1:14"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11551:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11554:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11560:1:14",
														"type": ""
													}
												],
												"src": "11528:112:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11677:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11694:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11701:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11706:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11697:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11697:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11687:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11687:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11687:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11734:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11737:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11727:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11727:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11727:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11758:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11761:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11751:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11751:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11751:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11645:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11809:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11826:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11833:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11838:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11829:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11829:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11819:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11819:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11819:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11866:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11869:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11859:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11859:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11859:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11890:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11893:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11883:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11883:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11883:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11777:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11941:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11958:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11965:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11970:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11961:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11961:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11951:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11951:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11951:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11998:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12001:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11991:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11991:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11991:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12022:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12025:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12015:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12015:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12015:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11909:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12073:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12090:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12097:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12102:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12093:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12093:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12083:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12083:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12083:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12130:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12133:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12123:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12123:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12123:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12154:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12157:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12147:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12147:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12147:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12041:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12217:87:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12282:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12291:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12294:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12284:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12284:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12284:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12240:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12251:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12262:3:14",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12267:10:14",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12258:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12258:20:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12247:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12247:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12237:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12237:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12230:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12230:51:14"
															},
															"nodeType": "YulIf",
															"src": "12227:71:14"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12206:5:14",
														"type": ""
													}
												],
												"src": "12173:131:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3A JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1025 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x114A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x744 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x624 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH2 0x620 CALLER DUP4 DUP4 PUSH2 0xA45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62E CALLER DUP4 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x656 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB14 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73D JUMP JUMPDEST DUP1 PUSH2 0x71C DUP5 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72D SWAP3 SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x779 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x87D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x8A1 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x896 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BC DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x98D PUSH1 0x0 DUP3 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B6 SWAP1 DUP5 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E4 SWAP1 DUP5 SWAP1 PUSH2 0x10DB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB1F DUP5 DUP5 DUP5 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0xB2B DUP5 DUP5 DUP5 DUP5 PUSH2 0xC45 JUMP JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB6B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB95 JUMPI DUP1 PUSH2 0xB7F DUP2 PUSH2 0x1185 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8E SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x10F3 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB0 JUMPI PUSH2 0xBB0 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A1 JUMPI PUSH2 0xBEF PUSH1 0x1 DUP4 PUSH2 0x1107 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFC PUSH1 0xA DUP7 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0xC07 SWAP1 PUSH1 0x30 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1C JUMPI PUSH2 0xC1C PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC3E PUSH1 0xA DUP7 PUSH2 0x10F3 JUMP JUMPDEST SWAP5 POP PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC89 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCD3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD0 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD2D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1038 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D DUP3 PUSH2 0xD52 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA5 DUP4 PUSH2 0xD52 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB3 PUSH1 0x20 DUP5 ADD PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDA DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP3 POP PUSH2 0xDE8 PUSH1 0x20 DUP6 ADD PUSH2 0xD52 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE17 DUP6 PUSH2 0xD52 JUMP JUMPDEST SWAP4 POP PUSH2 0xE25 PUSH1 0x20 DUP7 ADD PUSH2 0xD52 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE97 JUMPI PUSH2 0xE97 PUSH2 0x11F6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF0 DUP4 PUSH2 0xD52 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2C DUP4 PUSH2 0xD52 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73D DUP2 PUSH2 0x120C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73D DUP2 PUSH2 0x120C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xFA5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x111E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFCB DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x111E JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFDF DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x111E JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x101B SWAP1 DUP4 ADD DUP5 PUSH2 0xF8D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10EE JUMPI PUSH2 0x10EE PUSH2 0x11B4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1102 JUMPI PUSH2 0x1102 PUSH2 0x11CA JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1119 JUMPI PUSH2 0x1119 PUSH2 0x11B4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1139 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1121 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x656 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x115E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x117F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1199 JUMPI PUSH2 0x1199 PUSH2 0x11B4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11AF JUMPI PUSH2 0x11AF PUSH2 0x11CA JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 ADD DUP11 0xC6 SWAP11 SWAP10 0x2C GT COINBASE 0xB8 SWAP6 0xB0 0x5E SSTORE PUSH20 0x96586965552D26C16B4FDE1679B81E44E064736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "628:13658:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;5027:14:14;;5020:22;5002:41;;4990:2;4975:18;1570:300:1;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4325:32:14;;;4307:51;;4295:2;4280:18;4000:217:1;4161:203:14;3538:401:1;;;;;;:::i;:::-;;:::i;:::-;;4727:330;;;;;;:::i;:::-;;:::i;5123:179::-;;;;;;:::i;:::-;;:::i;2191:235::-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;:::-;;;10316:25:14;;;10304:2;10289:18;1929:205:1;10170:177:14;2650:102:1;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;5368:320::-;;;;;;:::i;:::-;;:::i;2818:329::-;;;;;;:::i;:::-;;:::i;4503:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4623:25:1;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4503:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:11;;;1827:36:1;1688:175;1570:300;-1:-1:-1;;1570:300:1:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:1;4095:73;;;;-1:-1:-1;;;4095:73:1;;8723:2:14;4095:73:1;;;8705:21:14;8762:2;8742:18;;;8735:30;8801:34;8781:18;;;8774:62;-1:-1:-1;;;8852:18:14;;;8845:42;8904:19;;4095:73:1;;;;;;;;;-1:-1:-1;4186:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:1;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:1;:2;-1:-1:-1;;;;;3675:11:1;;;3667:57;;;;-1:-1:-1;;;3667:57:1;;9552:2:14;3667:57:1;;;9534:21:14;9591:2;9571:18;;;9564:30;9630:34;9610:18;;;9603:62;-1:-1:-1;;;9681:18:14;;;9674:31;9722:19;;3667:57:1;9350:397:14;3667:57:1;719:10:8;-1:-1:-1;;;;;3756:21:1;;;;:62;;-1:-1:-1;3781:37:1;3798:5;719:10:8;4503:162:1;:::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:1;;7477:2:14;3735:165:1;;;7459:21:14;7516:2;7496:18;;;7489:30;7555:34;7535:18;;;7528:62;7626:26;7606:18;;;7599:54;7670:19;;3735:165:1;7275:420:14;3735:165:1;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;4727:330::-;4916:41;719:10:8;4949:7:1;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:1;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;5123:179::-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;2191:235::-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:1;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:1;;8313:2:14;2324:73:1;;;8295:21:14;8352:2;8332:18;;;8325:30;8391:34;8371:18;;;8364:62;-1:-1:-1;;;8442:18:14;;;8435:39;8491:19;;2324:73:1;8111:405:14;1929:205:1;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:74;;;;-1:-1:-1;;;2020:74:1;;7902:2:14;2020:74:1;;;7884:21:14;7941:2;7921:18;;;7914:30;7980:34;7960:18;;;7953:62;-1:-1:-1;;;8031:18:14;;;8024:40;8081:19;;2020:74:1;7700:406:14;2020:74:1;-1:-1:-1;;;;;;2111:16:1;;;;;:9;:16;;;;;;;1929:205::o;2650:102::-;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;719:10:8;4411:8:1;4421;4378:18;:52::i;:::-;4284:153;;:::o;5368:320::-;5537:41;719:10:8;5570:7:1;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:1;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;:::-;5368:320;;;;:::o;2818:329::-;7225:4;7248:16;;;:7;:16;;;;;;2891:13;;-1:-1:-1;;;;;7248:16:1;2916:76;;;;-1:-1:-1;;;2916:76:1;;9136:2:14;2916:76:1;;;9118:21:14;9175:2;9155:18;;;9148:30;9214:34;9194:18;;;9187:62;-1:-1:-1;;;9265:18:14;;;9258:45;9320:19;;2916:76:1;8934:411:14;2916:76:1;3003:21;3027:10;3465:9;;;;;;;;;-1:-1:-1;3465:9:1;;;3389:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:1:o;11169:171::-;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:1;-1:-1:-1;;;;;11243:29:1;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:1;;;;;;;;;;;11169:171;;:::o;7443:344::-;7536:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:1;7552:73;;;;-1:-1:-1;;;7552:73:1;;7064:2:14;7552:73:1;;;7046:21:14;7103:2;7083:18;;;7076:30;7142:34;7122:18;;;7115:62;-1:-1:-1;;;7193:18:14;;;7186:42;7245:19;;7552:73:1;6862:408:14;7552:73:1;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:1;:7;-1:-1:-1;;;;;7692:16:1;;:52;;;-1:-1:-1;;;;;;4623:25:1;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7712:32;7692:87;;;;7772:7;-1:-1:-1;;;;;7748:31:1;:20;7760:7;7748:11;:20::i;:::-;-1:-1:-1;;;;;7748:31:1;;7692:87;7684:96;7443:344;-1:-1:-1;;;;7443:344:1:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:1;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:1;;10572:81;;;;-1:-1:-1;;;10572:81:1;;5899:2:14;10572:81:1;;;5881:21:14;5938:2;5918:18;;;5911:30;5977:34;5957:18;;;5950:62;-1:-1:-1;;;6028:18:14;;;6021:35;6073:19;;10572:81:1;5697:401:14;10572:81:1;-1:-1:-1;;;;;10671:16:1;;10663:65;;;;-1:-1:-1;;;10663:65:1;;6305:2:14;10663:65:1;;;6287:21:14;6344:2;6324:18;;;6317:30;6383:34;6363:18;;;6356:62;-1:-1:-1;;;6434:18:14;;;6427:34;6478:19;;10663:65:1;6103:400:14;10663:65:1;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:1;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:1;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:1;-1:-1:-1;;;;;10938:21:1;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;11475:307::-;11625:8;-1:-1:-1;;;;;11616:17:1;:5;-1:-1:-1;;;;;11616:17:1;;;11608:55;;;;-1:-1:-1;;;11608:55:1;;6710:2:14;11608:55:1;;;6692:21:14;6749:2;6729:18;;;6722:30;6788:27;6768:18;;;6761:55;6833:18;;11608:55:1;6508:349:14;11608:55:1;-1:-1:-1;;;;;11673:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:1;;;;;;;;;;11734:41;;5002::14;;;11734::1;;4975:18:14;11734:41:1;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:1;;;;;;;:::i;328:703:10:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:10;;;;;;;;;;;;-1:-1:-1;;;627:10:10;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:10;;-1:-1:-1;773:2:10;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:10;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:10;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:10;;;;;;;;-1:-1:-1;972:11:10;981:2;972:11;;:::i;:::-;;;844:150;;12335:778:1;12485:4;-1:-1:-1;;;;;12505:13:1;;1465:19:7;:23;12501:606:1;;12540:72;;-1:-1:-1;;;12540:72:1;;-1:-1:-1;;;;;12540:36:1;;;;;:72;;719:10:8;;12591:4:1;;12597:7;;12606:5;;12540:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:1;;;;;;;;-1:-1:-1;;12540:72:1;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12779:13:1;;12775:266;;12821:60;;-1:-1:-1;;;12821:60:1;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:1;-1:-1:-1;;;12662:51:1;;-1:-1:-1;12655:58:1;;12501:606;-1:-1:-1;13092:4:1;12335:778;;;;;;:::o;14:173:14:-;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:1138::-;1076:6;1084;1092;1100;1153:3;1141:9;1132:7;1128:23;1124:33;1121:53;;;1170:1;1167;1160:12;1121:53;1193:29;1212:9;1193:29;:::i;:::-;1183:39;;1241:38;1275:2;1264:9;1260:18;1241:38;:::i;:::-;1231:48;;1326:2;1315:9;1311:18;1298:32;1288:42;;1381:2;1370:9;1366:18;1353:32;1404:18;1445:2;1437:6;1434:14;1431:34;;;1461:1;1458;1451:12;1431:34;1499:6;1488:9;1484:22;1474:32;;1544:7;1537:4;1533:2;1529:13;1525:27;1515:55;;1566:1;1563;1556:12;1515:55;1602:2;1589:16;1624:2;1620;1617:10;1614:36;;;1630:18;;:::i;:::-;1705:2;1699:9;1673:2;1759:13;;-1:-1:-1;;1755:22:14;;;1779:2;1751:31;1747:40;1735:53;;;1803:18;;;1823:22;;;1800:46;1797:72;;;1849:18;;:::i;:::-;1889:10;1885:2;1878:22;1924:2;1916:6;1909:18;1964:7;1959:2;1954;1950;1946:11;1942:20;1939:33;1936:53;;;1985:1;1982;1975:12;1936:53;2041:2;2036;2032;2028:11;2023:2;2015:6;2011:15;1998:46;2086:1;2081:2;2076;2068:6;2064:15;2060:24;2053:35;2107:6;2097:16;;;;;;;981:1138;;;;;;;:::o;2124:347::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2289:29;2308:9;2289:29;:::i;:::-;2279:39;;2368:2;2357:9;2353:18;2340:32;2415:5;2408:13;2401:21;2394:5;2391:32;2381:60;;2437:1;2434;2427:12;2381:60;2460:5;2450:15;;;2124:347;;;;;:::o;2476:254::-;2544:6;2552;2605:2;2593:9;2584:7;2580:23;2576:32;2573:52;;;2621:1;2618;2611:12;2573:52;2644:29;2663:9;2644:29;:::i;:::-;2634:39;2720:2;2705:18;;;;2692:32;;-1:-1:-1;;;2476:254:14:o;2735:245::-;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;2901:9;2888:23;2920:30;2944:5;2920:30;:::i;2985:249::-;3054:6;3107:2;3095:9;3086:7;3082:23;3078:32;3075:52;;;3123:1;3120;3113:12;3075:52;3155:9;3149:16;3174:30;3198:5;3174:30;:::i;3239:180::-;3298:6;3351:2;3339:9;3330:7;3326:23;3322:32;3319:52;;;3367:1;3364;3357:12;3319:52;-1:-1:-1;3390:23:14;;3239:180;-1:-1:-1;3239:180:14:o;3424:257::-;3465:3;3503:5;3497:12;3530:6;3525:3;3518:19;3546:63;3602:6;3595:4;3590:3;3586:14;3579:4;3572:5;3568:16;3546:63;:::i;:::-;3663:2;3642:15;-1:-1:-1;;3638:29:14;3629:39;;;;3670:4;3625:50;;3424:257;-1:-1:-1;;3424:257:14:o;3686:470::-;3865:3;3903:6;3897:13;3919:53;3965:6;3960:3;3953:4;3945:6;3941:17;3919:53;:::i;:::-;4035:13;;3994:16;;;;4057:57;4035:13;3994:16;4091:4;4079:17;;4057:57;:::i;:::-;4130:20;;3686:470;-1:-1:-1;;;;3686:470:14:o;4369:488::-;-1:-1:-1;;;;;4638:15:14;;;4620:34;;4690:15;;4685:2;4670:18;;4663:43;4737:2;4722:18;;4715:34;;;4785:3;4780:2;4765:18;;4758:31;;;4563:4;;4806:45;;4831:19;;4823:6;4806:45;:::i;:::-;4798:53;4369:488;-1:-1:-1;;;;;;4369:488:14:o;5054:219::-;5203:2;5192:9;5185:21;5166:4;5223:44;5263:2;5252:9;5248:18;5240:6;5223:44;:::i;5278:414::-;5480:2;5462:21;;;5519:2;5499:18;;;5492:30;5558:34;5553:2;5538:18;;5531:62;-1:-1:-1;;;5624:2:14;5609:18;;5602:48;5682:3;5667:19;;5278:414::o;9752:413::-;9954:2;9936:21;;;9993:2;9973:18;;;9966:30;10032:34;10027:2;10012:18;;10005:62;-1:-1:-1;;;10098:2:14;10083:18;;10076:47;10155:3;10140:19;;9752:413::o;10352:128::-;10392:3;10423:1;10419:6;10416:1;10413:13;10410:39;;;10429:18;;:::i;:::-;-1:-1:-1;10465:9:14;;10352:128::o;10485:120::-;10525:1;10551;10541:35;;10556:18;;:::i;:::-;-1:-1:-1;10590:9:14;;10485:120::o;10610:125::-;10650:4;10678:1;10675;10672:8;10669:34;;;10683:18;;:::i;:::-;-1:-1:-1;10720:9:14;;10610:125::o;10740:258::-;10812:1;10822:113;10836:6;10833:1;10830:13;10822:113;;;10912:11;;;10906:18;10893:11;;;10886:39;10858:2;10851:10;10822:113;;;10953:6;10950:1;10947:13;10944:48;;;-1:-1:-1;;10988:1:14;10970:16;;10963:27;10740:258::o;11003:380::-;11082:1;11078:12;;;;11125;;;11146:61;;11200:4;11192:6;11188:17;11178:27;;11146:61;11253:2;11245:6;11242:14;11222:18;11219:38;11216:161;;;11299:10;11294:3;11290:20;11287:1;11280:31;11334:4;11331:1;11324:15;11362:4;11359:1;11352:15;11216:161;;11003:380;;;:::o;11388:135::-;11427:3;-1:-1:-1;;11448:17:14;;11445:43;;;11468:18;;:::i;:::-;-1:-1:-1;11515:1:14;11504:13;;11388:135::o;11528:112::-;11560:1;11586;11576:35;;11591:18;;:::i;:::-;-1:-1:-1;11625:9:14;;11528:112::o;11645:127::-;11706:10;11701:3;11697:20;11694:1;11687:31;11737:4;11734:1;11727:15;11761:4;11758:1;11751:15;11777:127;11838:10;11833:3;11829:20;11826:1;11819:31;11869:4;11866:1;11859:15;11893:4;11890:1;11883:15;11909:127;11970:10;11965:3;11961:20;11958:1;11951:31;12001:4;11998:1;11991:15;12025:4;12022:1;12015:15;12041:127;12102:10;12097:3;12093:20;12090:1;12083:31;12133:4;12130:1;12123:15;12157:4;12154:1;12147:15;12173:131;-1:-1:-1;;;;;;12247:32:14;;12237:43;;12227:71;;12294:1;12291;12284:12;12227:71;12173:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "939800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4737",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2579",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26708",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 14,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 14
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6018ac69a992c1141b895b05e557396586965552d26c16b4fde1679b81e44e064736f6c63430008070033",
									".code": [
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5020,
											"end": 5042,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4307,
											"end": 4358,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4307,
											"end": 4358,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4295,
											"end": 4297,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4161,
											"end": 4364,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10341,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10316,
											"end": 10341,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10316,
											"end": 10341,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10304,
											"end": 10306,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10170,
											"end": 10347,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2555,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2574,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8725,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8726,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8762,
											"end": 8764,
											"name": "PUSH",
											"source": 14,
											"value": "2C"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8735,
											"end": 8765,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8801,
											"end": 8835,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 8781,
											"end": 8799,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8781,
											"end": 8799,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8781,
											"end": 8799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8774,
											"end": 8836,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8852,
											"end": 8870,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8852,
											"end": 8870,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8852,
											"end": 8870,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8845,
											"end": 8887,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8904,
											"end": 8923,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 8904,
											"end": 8923,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9554,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9591,
											"end": 9593,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 9571,
											"end": 9589,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9571,
											"end": 9589,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9571,
											"end": 9589,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9564,
											"end": 9594,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9630,
											"end": 9664,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9603,
											"end": 9665,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9681,
											"end": 9699,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9681,
											"end": 9699,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9681,
											"end": 9699,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9674,
											"end": 9705,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9722,
											"end": 9741,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 9722,
											"end": 9741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9350,
											"end": 9747,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7479,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7480,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7516,
											"end": 7518,
											"name": "PUSH",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 7496,
											"end": 7514,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7496,
											"end": 7514,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7496,
											"end": 7514,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7489,
											"end": 7519,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7555,
											"end": 7589,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7626,
											"end": 7652,
											"name": "PUSH",
											"source": 14,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7599,
											"end": 7653,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7670,
											"end": 7689,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 7670,
											"end": 7689,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7275,
											"end": 7695,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5032,
											"end": 5036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5040,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8315,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8295,
											"end": 8316,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8354,
											"name": "PUSH",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 8332,
											"end": 8350,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8332,
											"end": 8350,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8332,
											"end": 8350,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8391,
											"end": 8425,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8364,
											"end": 8426,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8442,
											"end": 8460,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8442,
											"end": 8460,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8442,
											"end": 8460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8435,
											"end": 8474,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8491,
											"end": 8510,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 8491,
											"end": 8510,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 8111,
											"end": 8516,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 7904,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7884,
											"end": 7905,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7941,
											"end": 7943,
											"name": "PUSH",
											"source": 14,
											"value": "2A"
										},
										{
											"begin": 7921,
											"end": 7939,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7921,
											"end": 7939,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7921,
											"end": 7939,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7914,
											"end": 7944,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7980,
											"end": 8014,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7953,
											"end": 8015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8031,
											"end": 8049,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8031,
											"end": 8049,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8031,
											"end": 8049,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8024,
											"end": 8064,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8081,
											"end": 8100,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 8081,
											"end": 8100,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7700,
											"end": 8106,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2738,
											"end": 2745,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4411,
											"end": 4419,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5675,
											"end": 5680,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2891,
											"end": 2904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9136,
											"end": 9138,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9139,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9175,
											"end": 9177,
											"name": "PUSH",
											"source": 14,
											"value": "2F"
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9148,
											"end": 9178,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9214,
											"end": 9248,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 9194,
											"end": 9212,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9194,
											"end": 9212,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9194,
											"end": 9212,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9187,
											"end": 9249,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9265,
											"end": 9283,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9265,
											"end": 9283,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9265,
											"end": 9283,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9258,
											"end": 9303,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9320,
											"end": 9339,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 9320,
											"end": 9339,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 8934,
											"end": 9345,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3481,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3079,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3140,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7066,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7067,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7103,
											"end": 7105,
											"name": "PUSH",
											"source": 14,
											"value": "2C"
										},
										{
											"begin": 7083,
											"end": 7101,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7083,
											"end": 7101,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7083,
											"end": 7101,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7076,
											"end": 7106,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7142,
											"end": 7176,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7115,
											"end": 7177,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7211,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7193,
											"end": 7211,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7193,
											"end": 7211,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7186,
											"end": 7228,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7245,
											"end": 7264,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 7245,
											"end": 7264,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6862,
											"end": 7270,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7666,
											"end": 7673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7699,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 7760,
											"end": 7767,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7780,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10607,
											"end": 10611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 10595,
											"end": 10602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5901,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5881,
											"end": 5902,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5938,
											"end": 5940,
											"name": "PUSH",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5911,
											"end": 5941,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5950,
											"end": 6012,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6021,
											"end": 6056,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6073,
											"end": 6092,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 6073,
											"end": 6092,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5697,
											"end": 6098,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6307,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6308,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6344,
											"end": 6346,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6317,
											"end": 6347,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6383,
											"end": 6417,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6356,
											"end": 6418,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6427,
											"end": 6461,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6478,
											"end": 6497,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 6478,
											"end": 6497,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6103,
											"end": 6503,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10857,
											"end": 10858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10861,
											"end": 10868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10889,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10919,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10945,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11616,
											"end": 11621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6712,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6692,
											"end": 6713,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6749,
											"end": 6751,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6722,
											"end": 6752,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6788,
											"end": 6815,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6761,
											"end": 6816,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6833,
											"end": 6851,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6833,
											"end": 6851,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6508,
											"end": 6857,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6787,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6794,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 851,
											"end": 861,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 851,
											"end": 861,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12779,
											"end": 12792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12779,
											"end": 12792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12993,
											"end": 12999,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13000,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12978,
											"end": 12984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 12976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12963,
											"end": 13001,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13092,
											"end": 13096,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1153,
											"end": 1156,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1170,
											"end": 1171,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1168,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1160,
											"end": 1172,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 1275,
											"end": 1277,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1326,
											"end": 1328,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1330,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1383,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1353,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1447,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1484,
											"end": 1506,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 1542,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1525,
											"end": 1552,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1566,
											"end": 1567,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1589,
											"end": 1605,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1626,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1617,
											"end": 1627,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1708,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1673,
											"end": 1675,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1779,
											"end": 1781,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 1751,
											"end": 1782,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1747,
											"end": 1787,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1800,
											"end": 1846,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 1899,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1885,
											"end": 1887,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1900,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1924,
											"end": 1926,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1916,
											"end": 1922,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1909,
											"end": 1927,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1954,
											"end": 1956,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1950,
											"end": 1952,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1942,
											"end": 1962,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1939,
											"end": 1972,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1985,
											"end": 1986,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2043,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2028,
											"end": 2039,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2025,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2026,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1998,
											"end": 2044,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2053,
											"end": 2088,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2225,
											"end": 2248,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2221,
											"end": 2253,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2268,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2401,
											"end": 2422,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2399,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2605,
											"end": 2607,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2584,
											"end": 2591,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2621,
											"end": 2622,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2623,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2634,
											"end": 2673,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2848,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2825,
											"end": 2832,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2821,
											"end": 2844,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2817,
											"end": 2849,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 2944,
											"end": 2949,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3109,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3078,
											"end": 3110,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3113,
											"end": 3125,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3326,
											"end": 3349,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3322,
											"end": 3354,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3357,
											"end": 3369,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3468,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3508,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3530,
											"end": 3536,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3525,
											"end": 3528,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3518,
											"end": 3537,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3599,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3590,
											"end": 3593,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3586,
											"end": 3600,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3577,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3568,
											"end": 3584,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3670,
											"end": 3674,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3865,
											"end": 3868,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3941,
											"end": 3958,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4095,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "tag",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4620,
											"end": 4654,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4620,
											"end": 4654,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4685,
											"end": 4687,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4663,
											"end": 4706,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4737,
											"end": 4739,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4785,
											"end": 4788,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4780,
											"end": 4782,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 4851,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5054,
											"end": 5273,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 5054,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5203,
											"end": 5205,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5201,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5185,
											"end": 5206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5252,
											"end": 5261,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5278,
											"end": 5692,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 5278,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5480,
											"end": 5482,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5483,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5462,
											"end": 5483,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5462,
											"end": 5483,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5519,
											"end": 5521,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5492,
											"end": 5522,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5558,
											"end": 5592,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5556,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5538,
											"end": 5556,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5531,
											"end": 5593,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5624,
											"end": 5626,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5602,
											"end": 5650,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5682,
											"end": 5685,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5278,
											"end": 5692,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9752,
											"end": 10165,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 9752,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9954,
											"end": 9956,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9936,
											"end": 9957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9936,
											"end": 9957,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9936,
											"end": 9957,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9993,
											"end": 9995,
											"name": "PUSH",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 9973,
											"end": 9991,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9973,
											"end": 9991,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9973,
											"end": 9991,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9966,
											"end": 9996,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10032,
											"end": 10066,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 10027,
											"end": 10029,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10005,
											"end": 10067,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10098,
											"end": 10100,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 10123,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10155,
											"end": 10158,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10140,
											"end": 10159,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10140,
											"end": 10159,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9752,
											"end": 10165,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10352,
											"end": 10480,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 10352,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10392,
											"end": 10395,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10423,
											"end": 10424,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10419,
											"end": 10425,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 10416,
											"end": 10417,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10413,
											"end": 10426,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10410,
											"end": 10449,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10410,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 10410,
											"end": 10449,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10474,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10465,
											"end": 10474,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10352,
											"end": 10480,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10485,
											"end": 10605,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 10485,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10525,
											"end": 10526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10541,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 10541,
											"end": 10576,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10556,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 10556,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 10556,
											"end": 10574,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10556,
											"end": 10574,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 10556,
											"end": 10574,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10590,
											"end": 10599,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10590,
											"end": 10599,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10485,
											"end": 10605,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10610,
											"end": 10735,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 10610,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10650,
											"end": 10654,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10678,
											"end": 10679,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10675,
											"end": 10676,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10672,
											"end": 10680,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10669,
											"end": 10703,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10669,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 10669,
											"end": 10703,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10720,
											"end": 10729,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10720,
											"end": 10729,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10610,
											"end": 10735,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10740,
											"end": 10998,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 10740,
											"end": 10998,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10812,
											"end": 10813,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10822,
											"end": 10935,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 10822,
											"end": 10935,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10836,
											"end": 10842,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10833,
											"end": 10834,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10830,
											"end": 10843,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10822,
											"end": 10935,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10822,
											"end": 10935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 10822,
											"end": 10935,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10912,
											"end": 10923,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10912,
											"end": 10923,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10912,
											"end": 10923,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10893,
											"end": 10904,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10893,
											"end": 10904,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10893,
											"end": 10904,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10886,
											"end": 10925,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10858,
											"end": 10860,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10851,
											"end": 10861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10822,
											"end": 10935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 10822,
											"end": 10935,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10822,
											"end": 10935,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 10822,
											"end": 10935,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10953,
											"end": 10959,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10950,
											"end": 10951,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10947,
											"end": 10960,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10944,
											"end": 10992,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10944,
											"end": 10992,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 10944,
											"end": 10992,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10988,
											"end": 10989,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10970,
											"end": 10986,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10970,
											"end": 10986,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10963,
											"end": 10990,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10740,
											"end": 10998,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11003,
											"end": 11383,
											"name": "tag",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 11003,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11082,
											"end": 11083,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11078,
											"end": 11090,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11090,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11090,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11090,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11125,
											"end": 11137,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11125,
											"end": 11137,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11125,
											"end": 11137,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11146,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 11146,
											"end": 11207,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11200,
											"end": 11204,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 11192,
											"end": 11198,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11205,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11178,
											"end": 11205,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11178,
											"end": 11205,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11146,
											"end": 11207,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 11146,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11253,
											"end": 11255,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11245,
											"end": 11251,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11256,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11222,
											"end": 11240,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11219,
											"end": 11257,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 11216,
											"end": 11377,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11216,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 11216,
											"end": 11377,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11299,
											"end": 11309,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 11294,
											"end": 11297,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11290,
											"end": 11310,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11287,
											"end": 11288,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11280,
											"end": 11311,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11338,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 11331,
											"end": 11332,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11324,
											"end": 11339,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 11366,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11359,
											"end": 11360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11216,
											"end": 11377,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 11216,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11216,
											"end": 11377,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11003,
											"end": 11383,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11003,
											"end": 11383,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11003,
											"end": 11383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11003,
											"end": 11383,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11388,
											"end": 11523,
											"name": "tag",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 11388,
											"end": 11523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11427,
											"end": 11430,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11448,
											"end": 11465,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11448,
											"end": 11465,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 11445,
											"end": 11488,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11445,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 11445,
											"end": 11488,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11515,
											"end": 11516,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11504,
											"end": 11517,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11504,
											"end": 11517,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11388,
											"end": 11523,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11528,
											"end": 11640,
											"name": "tag",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 11528,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11560,
											"end": 11561,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11586,
											"end": 11587,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11576,
											"end": 11611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 11576,
											"end": 11611,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 11591,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 11591,
											"end": 11609,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11591,
											"end": 11609,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 11591,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11625,
											"end": 11634,
											"name": "MOD",
											"source": 14
										},
										{
											"begin": 11625,
											"end": 11634,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11528,
											"end": 11640,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11645,
											"end": 11772,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 11645,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11706,
											"end": 11716,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 11701,
											"end": 11704,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11697,
											"end": 11717,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11694,
											"end": 11695,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11718,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11737,
											"end": 11741,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 11734,
											"end": 11735,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11727,
											"end": 11742,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11761,
											"end": 11765,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11758,
											"end": 11759,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11751,
											"end": 11766,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11777,
											"end": 11904,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 11777,
											"end": 11904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11838,
											"end": 11848,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 11833,
											"end": 11836,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11829,
											"end": 11849,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11826,
											"end": 11827,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11819,
											"end": 11850,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11869,
											"end": 11873,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 11866,
											"end": 11867,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11859,
											"end": 11874,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11893,
											"end": 11897,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11890,
											"end": 11891,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11883,
											"end": 11898,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11909,
											"end": 12036,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 11909,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11970,
											"end": 11980,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 11965,
											"end": 11968,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11961,
											"end": 11981,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11958,
											"end": 11959,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11951,
											"end": 11982,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12001,
											"end": 12005,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 11998,
											"end": 11999,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11991,
											"end": 12006,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12025,
											"end": 12029,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12022,
											"end": 12023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12015,
											"end": 12030,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12041,
											"end": 12168,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 12041,
											"end": 12168,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12102,
											"end": 12112,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 12097,
											"end": 12100,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 12093,
											"end": 12113,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 12090,
											"end": 12091,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12083,
											"end": 12114,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12133,
											"end": 12137,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 12130,
											"end": 12131,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12123,
											"end": 12138,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12157,
											"end": 12161,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12154,
											"end": 12155,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12147,
											"end": 12162,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12173,
											"end": 12304,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 12173,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12247,
											"end": 12279,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12247,
											"end": 12279,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12237,
											"end": 12280,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12237,
											"end": 12280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 12227,
											"end": 12298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 12227,
											"end": 12298,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12294,
											"end": 12295,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12291,
											"end": 12292,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12284,
											"end": 12296,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12227,
											"end": 12298,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 12227,
											"end": 12298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12173,
											"end": 12304,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12173,
											"end": 12304,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 144,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 150,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ERC721Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be irreversibly burned (destroyed).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be irreversibly burned (destroyed).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x1f16f9737853b988865ab819d1ebf8b5009defe981c75bc9079e0f40ed2a2e57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e50f827969ca93b0d7bad1e022aa3147c8f390e9f91bb814752e8fbbbe621c\",\"dweb:/ipfs/QmdR2fJ2a3HM7FyC9pGD4JeKF9z6bxqU9FbhMyQfH1sDJH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 144,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 150,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 144,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 150,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1147,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122031eb738e0a5a287ee8ea71fab68f385e674f509f1f48352e1256086258b31d8764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122031eb738e0a5a287ee8ea71fab68f385e674f509f1f48352e1256086258b31d8764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xEB PUSH20 0x8E0A5A287EE8EA71FAB68F385E674F509F1F4835 0x2E SLT JUMP ADDMOD PUSH3 0x58B31D DUP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "424:971:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122031eb738e0a5a287ee8ea71fab68f385e674f509f1f48352e1256086258b31d8764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xEB PUSH20 0x8E0A5A287EE8EA71FAB68F385E674F509F1F4835 0x2E SLT JUMP ADDMOD PUSH3 0x58B31D DUP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "424:971:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031eb738e0a5a287ee8ea71fab68f385e674f509f1f48352e1256086258b31d8764736f6c63430008070033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xEC 0xC4 COINBASE 0xF EQ 0xC9 SGT DELEGATECALL 0xBD SWAP15 CODECOPY 0xCF 0xD4 PUSH20 0x5CA5A997CB1D168663F6B238BD5ADFF95864736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "146:1885:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xEC 0xC4 COINBASE 0xF EQ 0xC9 SGT DELEGATECALL 0xBD SWAP15 CODECOPY 0xCF 0xD4 PUSH20 0x5CA5A997CB1D168663F6B238BD5ADFF95864736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "146:1885:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/sequential.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sequential.sol\":378:1400  contract MyToken is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/sequential.sol\":581:622  constructor() ERC721(\"MyToken\", \"MTK\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x07\n  dup2\n  mstore\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x03\n  dup5\n  mstore\n  shl(0xe8, 0x4d544b)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_6\n  swap2\n  0x00\n  swap2\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_10:\n    /* \"contracts/sequential.sol\":378:1400  contract MyToken is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x07\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/sequential.sol\":378:1400  contract MyToken is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_24)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_24)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_24\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\n  pop\n  tag_25\n  swap3\n  swap2\n  pop\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_27)\n    /* \"#utility.yul\":14:394   */\ntag_19:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_31:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_32:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_29:\n    /* \"contracts/sequential.sol\":378:1400  contract MyToken is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sequential.sol\":378:1400  contract MyToken is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd204c45e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd547cfb7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x42842e0e\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":7154:7168   */\n      swap1\n      iszero\n        /* \"#utility.yul\":7147:7169   */\n      iszero\n        /* \"#utility.yul\":7129:7170   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7117:7119   */\n      0x20\n        /* \"#utility.yul\":7102:7120   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6452:6484   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6434:6485   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6422:6424   */\n      0x20\n        /* \"#utility.yul\":6407:6425   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_30\n        /* \"#utility.yul\":6288:6491   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_7:\n      tag_42\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_8:\n      tag_42\n      tag_51\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":529:770  function burn(uint256 tokenId) public virtual {... */\n    tag_9:\n      tag_42\n      tag_54\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"contracts/sequential.sol\":1077:1176  function setBaseURI(string memory baseURI) public onlyOwner {... */\n    tag_10:\n      tag_42\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_11:\n      tag_36\n      tag_61\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_64\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n        /* \"#utility.yul\":14345:14370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":14333:14335   */\n      0x20\n        /* \"#utility.yul\":14318:14336   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_30\n        /* \"#utility.yul\":14199:14376   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_42\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_36)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_32\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_16:\n      tag_42\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_17:\n      tag_42\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"contracts/sequential.sol\":1182:1398  function tokenURI(uint256 tokenId)... */\n    tag_18:\n      tag_32\n      tag_87\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"contracts/sequential.sol\":628:859  function safeMint(address to, string memory uri) public onlyOwner {... */\n    tag_19:\n      tag_42\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"contracts/sequential.sol\":547:573  string public baseTokenURI */\n    tag_20:\n      tag_32\n      tag_95\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_21:\n      tag_26\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_42\n      tag_103\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_106\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_108\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2542:2555  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2574:2579  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2567:2579  return _name */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_112\n      jump\t// in\n    tag_113:\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_115\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_114)\n    tag_115:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_116:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_116\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4076:4083  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12390:12392   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12372:12393   */\n      mstore\n        /* \"#utility.yul\":12429:12431   */\n      0x2c\n        /* \"#utility.yul\":12409:12427   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12402:12432   */\n      mstore\n        /* \"#utility.yul\":12468:12502   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":12448:12466   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12441:12503   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":12519:12537   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12512:12554   */\n      mstore\n        /* \"#utility.yul\":12571:12590   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4201  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3631  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3649:3656  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3648  ERC721.ownerOf */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3657  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3681:3686  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3677  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13164:13166   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13146:13167   */\n      mstore\n        /* \"#utility.yul\":13203:13205   */\n      0x21\n        /* \"#utility.yul\":13183:13201   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13176:13206   */\n      mstore\n        /* \"#utility.yul\":13242:13276   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":13222:13240   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13215:13277   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":13293:13311   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13286:13317   */\n      mstore\n        /* \"#utility.yul\":13334:13353   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_121\n        /* \"#utility.yul\":12962:13359   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3756:3777  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3756:3818  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_131\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3798:3803  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10368:10370   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10350:10371   */\n      mstore\n        /* \"#utility.yul\":10407:10409   */\n      0x38\n        /* \"#utility.yul\":10387:10405   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10380:10410   */\n      mstore\n        /* \"#utility.yul\":10446:10480   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":10426:10444   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10419:10481   */\n      mstore\n        /* \"#utility.yul\":10517:10543   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":10497:10515   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10490:10544   */\n      mstore\n        /* \"#utility.yul\":10561:10580   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_121\n        /* \"#utility.yul\":10166:10586   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3920:3922  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3924:3931  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3919  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_139\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4935:4947  _msgSender() */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4949:4956  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4934  _isApprovedOrOwner */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4908:5011  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_144\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5032:5036  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5038:5040  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5042:5049  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5031  _transfer */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5273:5277  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5279:5281  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5283:5290  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5272  safeTransferFrom */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":529:770  function burn(uint256 tokenId) public virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":645:686  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_150\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":664:676  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":645:686  _isApprovedOrOwner(_msgSender(), tokenId) */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":637:739  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13984:13986   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":637:739  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13966:13987   */\n      mstore\n        /* \"#utility.yul\":14023:14025   */\n      0x30\n        /* \"#utility.yul\":14003:14021   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13996:14026   */\n      mstore\n        /* \"#utility.yul\":14062:14096   */\n      0x4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":14042:14060   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14035:14097   */\n      mstore\n      shl(0x82, 0x1b995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":14113:14131   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14106:14152   */\n      mstore\n        /* \"#utility.yul\":14169:14188   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":637:739  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n      tag_121\n        /* \"#utility.yul\":13782:14194   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":637:739  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":749:763  _burn(tokenId) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":755:762  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":749:754  _burn */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":749:763  _burn(tokenId) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":529:770  function burn(uint256 tokenId) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/sequential.sol\":1077:1176  function setBaseURI(string memory baseURI) public onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_162\n      jump\t// in\n    tag_160:\n        /* \"contracts/sequential.sol\":1147:1169  baseTokenURI = baseURI */\n      dup1\n      mload\n      tag_164\n      swap1\n        /* \"contracts/sequential.sol\":1147:1159  baseTokenURI */\n      0x09\n      swap1\n        /* \"contracts/sequential.sol\":1147:1169  baseTokenURI = baseURI */\n      0x20\n      dup5\n      add\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      pop\n        /* \"contracts/sequential.sol\":1077:1176  function setBaseURI(string memory baseURI) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2263:2270  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2305  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2332:2351  owner != address(0) */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11204:11206   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11186:11207   */\n      mstore\n        /* \"#utility.yul\":11243:11245   */\n      0x29\n        /* \"#utility.yul\":11223:11241   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11216:11246   */\n      mstore\n        /* \"#utility.yul\":11282:11316   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":11262:11280   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11255:11317   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":11333:11351   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11326:11365   */\n      mstore\n        /* \"#utility.yul\":11382:11401   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_121\n        /* \"#utility.yul\":11002:11407   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10793:10795   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10775:10796   */\n      mstore\n        /* \"#utility.yul\":10832:10834   */\n      0x2a\n        /* \"#utility.yul\":10812:10830   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10805:10835   */\n      mstore\n        /* \"#utility.yul\":10871:10905   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":10851:10869   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10844:10906   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":10922:10940   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10915:10955   */\n      mstore\n        /* \"#utility.yul\":10972:10991   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_121\n        /* \"#utility.yul\":10591:10997   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_171:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2120  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_162\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2706:2719  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2738:2745  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2731:2745  return _symbol */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_164\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4411:4419  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4421:4429  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4396  _setApprovalForAll */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_194\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5570:5577  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5555  _isApprovedOrOwner */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5529:5632  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_144\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5656:5660  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5662:5664  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5666:5673  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5675:5680  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5655  _safeTransfer */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sequential.sol\":1182:1398  function tokenURI(uint256 tokenId)... */\n    tag_88:\n        /* \"contracts/sequential.sol\":1305:1318  string memory */\n      0x60\n        /* \"contracts/sequential.sol\":1366:1378  baseTokenURI */\n      0x09\n        /* \"contracts/sequential.sol\":1379:1386  tokenId */\n      dup3\n        /* \"contracts/sequential.sol\":1349:1390  abi.encodePacked(baseTokenURI,tokenId,\"\") */\n      add(0x20, mload(0x40))\n      tag_201\n      swap3\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/sequential.sol\":1335:1391  return string(abi.encodePacked(baseTokenURI,tokenId,\"\")) */\n      swap1\n      pop\n        /* \"contracts/sequential.sol\":1182:1398  function tokenURI(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sequential.sol\":628:859  function safeMint(address to, string memory uri) public onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_162\n      jump\t// in\n    tag_206:\n        /* \"contracts/sequential.sol\":704:719  uint256 tokenId */\n      0x00\n        /* \"contracts/sequential.sol\":722:747  _tokenIdCounter.current() */\n      tag_209\n        /* \"contracts/sequential.sol\":722:737  _tokenIdCounter */\n      0x08\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/sequential.sol\":722:747  _tokenIdCounter.current() */\n    tag_209:\n        /* \"contracts/sequential.sol\":704:747  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"contracts/sequential.sol\":757:784  _tokenIdCounter.increment() */\n      tag_211\n        /* \"contracts/sequential.sol\":757:772  _tokenIdCounter */\n      0x08\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/sequential.sol\":757:784  _tokenIdCounter.increment() */\n    tag_211:\n        /* \"contracts/sequential.sol\":794:816  _safeMint(to, tokenId) */\n      tag_213\n        /* \"contracts/sequential.sol\":804:806  to */\n      dup4\n        /* \"contracts/sequential.sol\":808:815  tokenId */\n      dup3\n        /* \"contracts/sequential.sol\":794:803  _safeMint */\n      tag_214\n        /* \"contracts/sequential.sol\":794:816  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/sequential.sol\":826:852  _setTokenURI(tokenId, uri) */\n      tag_136\n        /* \"contracts/sequential.sol\":839:846  tokenId */\n      dup2\n        /* \"contracts/sequential.sol\":848:851  uri */\n      dup4\n        /* \"contracts/sequential.sol\":826:838  _setTokenURI */\n      tag_216\n        /* \"contracts/sequential.sol\":826:852  _setTokenURI(tokenId, uri) */\n      jump\t// in\n        /* \"contracts/sequential.sol\":547:573  string public baseTokenURI */\n    tag_95:\n      0x09\n      dup1\n      sload\n      tag_217\n      swap1\n      tag_112\n      jump\t// in\n    tag_217:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_218\n      swap1\n      tag_112\n      jump\t// in\n    tag_218:\n      dup1\n      iszero\n      tag_219\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_220\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_219)\n    tag_220:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_221:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_221\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_219:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_162\n      jump\t// in\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8026:8028   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8008:8029   */\n      mstore\n        /* \"#utility.yul\":8065:8067   */\n      0x26\n        /* \"#utility.yul\":8045:8063   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8038:8068   */\n      mstore\n        /* \"#utility.yul\":8104:8138   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8084:8102   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8077:8139   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8155:8173   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8148:8184   */\n      mstore\n        /* \"#utility.yul\":8201:8220   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_121\n        /* \"#utility.yul\":7824:8226   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11258  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11272  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11310  ERC721.ownerOf */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11287:11333  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7540  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9955:9957   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9937:9958   */\n      mstore\n        /* \"#utility.yul\":9994:9996   */\n      0x2c\n        /* \"#utility.yul\":9974:9992   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9967:9997   */\n      mstore\n        /* \"#utility.yul\":10033:10067   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":10013:10031   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10006:10068   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":10084:10102   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10077:10119   */\n      mstore\n        /* \"#utility.yul\":10136:10155   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_121\n        /* \"#utility.yul\":9753:10161   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7648  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7666:7673  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7665  ERC721.ownerOf */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7674  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7703:7708  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7699  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7744  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_245\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7712:7744  isApprovedForAll(owner, spender) */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_246\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7772:7779  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7760:7767  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7759  getApproved */\n      tag_39\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7684:7780  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10453:11058  function _transfer(... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10607:10611  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10595:10602  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10594  ERC721.ownerOf */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8433:8435   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8415:8436   */\n      mstore\n        /* \"#utility.yul\":8472:8474   */\n      0x25\n        /* \"#utility.yul\":8452:8470   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8445:8475   */\n      mstore\n        /* \"#utility.yul\":8511:8545   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":8491:8509   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8484:8546   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":8562:8580   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8555:8590   */\n      mstore\n        /* \"#utility.yul\":8607:8626   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_121\n        /* \"#utility.yul\":8231:8632   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10671:10687  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9196:9198   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9178:9199   */\n      mstore\n        /* \"#utility.yul\":9235:9237   */\n      0x24\n        /* \"#utility.yul\":9215:9233   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9208:9238   */\n      mstore\n        /* \"#utility.yul\":9274:9308   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":9254:9272   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9247:9309   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":9325:9343   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9318:9352   */\n      mstore\n        /* \"#utility.yul\":9369:9388   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_121\n        /* \"#utility.yul\":8994:9394   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10857:10858  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10861:10868  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10848  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10889  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_259\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_260\n      jump\t// in\n    tag_259:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10919  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_261\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_262\n      jump\t// in\n    tag_261:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10945  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10959  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sequential.sol\":933:1046  function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {... */\n    tag_156:\n        /* \"contracts/sequential.sol\":1019:1039  super._burn(tokenId) */\n      tag_155\n        /* \"contracts/sequential.sol\":1031:1038  tokenId */\n      dup2\n        /* \"contracts/sequential.sol\":1019:1030  super._burn */\n      tag_267\n        /* \"contracts/sequential.sol\":1019:1039  super._burn(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x07\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11625:11633  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11621  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9601:9603   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9583:9604   */\n      mstore\n        /* \"#utility.yul\":9640:9642   */\n      0x19\n        /* \"#utility.yul\":9620:9638   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9613:9643   */\n      mstore\n        /* \"#utility.yul\":9679:9706   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":9659:9677   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9652:9707   */\n      mstore\n        /* \"#utility.yul\":9724:9742   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_121\n        /* \"#utility.yul\":9399:9748   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11691  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11708  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11719  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":7129:7170   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":7102:7120   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6550:6857  function _safeTransfer(... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6711:6715  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6717:6719  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6721:6728  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6710  _transfer */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6770:6774  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6776:6778  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6780:6787  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6789:6794  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6769  _checkOnERC721Received */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6739:6850  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_280\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8117:8225  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8192:8218  _safeMint(to, tokenId, \"\") */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8202:8204  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8206:8213  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8192:8218  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8192:8201  _safeMint */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8192:8218  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1277:1491  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7225:7229  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11614:11616   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11596:11617   */\n      mstore\n        /* \"#utility.yul\":11653:11655   */\n      0x2e\n        /* \"#utility.yul\":11633:11651   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11626:11656   */\n      mstore\n        /* \"#utility.yul\":11692:11726   */\n      0x45524337323155524953746f726167653a2055524920736574206f66206e6f6e\n        /* \"#utility.yul\":11672:11690   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11665:11727   */\n      mstore\n      shl(0x91, 0x32bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":11743:11761   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11736:11780   */\n      mstore\n        /* \"#utility.yul\":11797:11816   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_121\n        /* \"#utility.yul\":11412:11822   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1472  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1463  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1472  _tokenURIs[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1484  _tokenURIs[tokenId] = _tokenURI */\n      dup3\n      mload\n      tag_136\n      swap3\n      dup5\n      add\n      swap1\n      tag_165\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1908  function _burn(uint256 tokenId) internal virtual override {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1776:1796  super._burn(tokenId) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1776:1787  super._burn */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1776:1796  super._burn(tokenId) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1817:1836  _tokenURIs[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1817:1827  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1817:1836  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1811:1844  bytes(_tokenURIs[tokenId]).length */\n      dup1\n      sload\n      tag_297\n      swap1\n      tag_112\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1811:1849  bytes(_tokenURIs[tokenId]).length != 0 */\n      iszero\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1807:1902  if (bytes(_tokenURIs[tokenId]).length != 0) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1872:1891  _tokenURIs[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1872:1882  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1872:1891  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1865:1891  delete _tokenURIs[tokenId] */\n      tag_155\n      swap2\n      tag_300\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12485:12489  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12505:12518  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12576  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_306\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12591:12595  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12597:12604  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12606:12611  _data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_307\n      jump\t// in\n    tag_306:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_308\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_308:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_309\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_310\n      swap2\n      dup2\n      add\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      0x01\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_312\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_317\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_316)\n    tag_317:\n      0x60\n      swap2\n      pop\n    tag_316:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12779:12792  reason.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12821:12881  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_280\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12993:12999  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12987:13000  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12978:12984  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12974:12976  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12970:12985  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12963:13001  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_312:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12662:12713  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12655:12713  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_246)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n    tag_304:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13092:13096  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8446:8757  function _safeMint(... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8571:8589  _mint(to, tokenId) */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8577:8579  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8581:8588  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8571:8576  _mint */\n      tag_325\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8571:8589  _mint(to, tokenId) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8620:8674  _checkOnERC721Received(address(0), to, tokenId, _data) */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8651:8652  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8655:8657  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8659:8666  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8668:8673  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8620:8642  _checkOnERC721Received */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8620:8674  _checkOnERC721Received(address(0), to, tokenId, _data) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8599:8750  require(... */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_280\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9723:10129  function _burn(uint256 tokenId) internal virtual {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9782:9795  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9798:9821  ERC721.ownerOf(tokenId) */\n      tag_330\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9813:9820  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9798:9812  ERC721.ownerOf */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9798:9821  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9782:9821  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9918:9947  _approve(address(0), tokenId) */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9935:9936  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9939:9946  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9918:9926  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9918:9947  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_332:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9974  _balances[owner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9967  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9974  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9979  _balances[owner] -= 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9978:9979  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9974  _balances[owner] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9979  _balances[owner] -= 1 */\n      tag_333\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9978:9979  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9979  _balances[owner] -= 1 */\n      tag_260\n      jump\t// in\n    tag_333:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9996:10012  _owners[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9996:10003  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9996:10012  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9989:10012  delete _owners[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10028:10064  Transfer(owner, address(0), tokenId) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10004:10011  tokenId */\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9996:10012  _owners[tokenId] */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10028:10064  Transfer(owner, address(0), tokenId) */\n      dup5\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9996:10012  _owners[tokenId] */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10028:10064  Transfer(owner, address(0), tokenId) */\n      log4\n        /* \"contracts/sequential.sol\":1147:1169  baseTokenURI = baseURI */\n      pop\n        /* \"contracts/sequential.sol\":1077:1176  function setBaseURI(string memory baseURI) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9079:9506  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_325:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9158:9174  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_337\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12029:12031   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12011:12032   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12048:12066   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12041:12071   */\n      mstore\n        /* \"#utility.yul\":12107:12141   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":12087:12105   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12080:12142   */\n      mstore\n        /* \"#utility.yul\":12159:12177   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_121\n        /* \"#utility.yul\":11827:12183   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7225:7229  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7278  _owners[tokenId] != address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8839:8841   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8821:8842   */\n      mstore\n        /* \"#utility.yul\":8878:8880   */\n      0x1c\n        /* \"#utility.yul\":8858:8876   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8851:8881   */\n      mstore\n        /* \"#utility.yul\":8917:8947   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":8897:8915   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8890:8948   */\n      mstore\n        /* \"#utility.yul\":8965:8983   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_121\n        /* \"#utility.yul\":8637:8989   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9359  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9355  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9359  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9364  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9363:9364  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9359  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9364  _balances[to] += 1 */\n      tag_345\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9363:9364  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9364  _balances[to] += 1 */\n      tag_262\n      jump\t// in\n    tag_345:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9381  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9395  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9411:9444  Transfer(address(0), to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      dup4\n      swap3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9411:9444  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9411:9444  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"contracts/sequential.sol\":1147:1169  baseTokenURI = baseURI */\n      pop\n        /* \"contracts/sequential.sol\":1077:1176  function setBaseURI(string memory baseURI) public onlyOwner {... */\n      pop\n      jump\t// out\n    tag_165:\n      dup3\n      dup1\n      sload\n      tag_347\n      swap1\n      tag_112\n      jump\t// in\n    tag_347:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_349\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_352)\n    tag_349:\n      dup3\n      0x1f\n      lt\n      tag_350\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_352)\n    tag_350:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_352\n      jumpi\n      swap2\n      dup3\n      add\n    tag_351:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_352\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_351)\n    tag_352:\n      pop\n      tag_353\n      swap3\n      swap2\n      pop\n      tag_354\n      jump\t// in\n    tag_353:\n      pop\n      swap1\n      jump\t// out\n    tag_300:\n      pop\n      dup1\n      sload\n      tag_355\n      swap1\n      tag_112\n      jump\t// in\n    tag_355:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_357\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_357:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n    tag_354:\n    tag_359:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_353\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_359)\n        /* \"#utility.yul\":14:645   */\n    tag_362:\n        /* \"#utility.yul\":78:83   */\n      0x00\n        /* \"#utility.yul\":108:126   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":149:151   */\n      dup1\n        /* \"#utility.yul\":141:147   */\n      dup5\n        /* \"#utility.yul\":138:152   */\n      gt\n        /* \"#utility.yul\":135:175   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":155:173   */\n      tag_365\n      tag_366\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":230:232   */\n      0x40\n        /* \"#utility.yul\":224:233   */\n      mload\n        /* \"#utility.yul\":198:200   */\n      0x1f\n        /* \"#utility.yul\":284:299   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":280:304   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":306:308   */\n      0x3f\n        /* \"#utility.yul\":276:309   */\n      add\n        /* \"#utility.yul\":272:314   */\n      and\n        /* \"#utility.yul\":260:315   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":330:348   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":350:372   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":327:373   */\n      or\n        /* \"#utility.yul\":324:396   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":376:394   */\n      tag_368\n      tag_366\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":416:426   */\n      dup2\n        /* \"#utility.yul\":412:414   */\n      0x40\n        /* \"#utility.yul\":405:427   */\n      mstore\n        /* \"#utility.yul\":445:451   */\n      dup1\n        /* \"#utility.yul\":436:451   */\n      swap4\n      pop\n        /* \"#utility.yul\":475:481   */\n      dup6\n        /* \"#utility.yul\":467:473   */\n      dup2\n        /* \"#utility.yul\":460:482   */\n      mstore\n        /* \"#utility.yul\":515:518   */\n      dup7\n        /* \"#utility.yul\":506:512   */\n      dup7\n        /* \"#utility.yul\":501:504   */\n      dup7\n        /* \"#utility.yul\":497:513   */\n      add\n        /* \"#utility.yul\":494:519   */\n      gt\n        /* \"#utility.yul\":491:536   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":532:533   */\n      0x00\n        /* \"#utility.yul\":529:530   */\n      dup1\n        /* \"#utility.yul\":522:534   */\n      revert\n        /* \"#utility.yul\":491:536   */\n    tag_369:\n        /* \"#utility.yul\":582:588   */\n      dup6\n        /* \"#utility.yul\":577:580   */\n      dup6\n        /* \"#utility.yul\":570:574   */\n      0x20\n        /* \"#utility.yul\":562:568   */\n      dup4\n        /* \"#utility.yul\":558:575   */\n      add\n        /* \"#utility.yul\":545:589   */\n      calldatacopy\n        /* \"#utility.yul\":637:638   */\n      0x00\n        /* \"#utility.yul\":630:634   */\n      0x20\n        /* \"#utility.yul\":621:627   */\n      dup8\n        /* \"#utility.yul\":613:619   */\n      dup4\n        /* \"#utility.yul\":609:628   */\n      add\n        /* \"#utility.yul\":605:635   */\n      add\n        /* \"#utility.yul\":598:639   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:645   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":650:823   */\n    tag_370:\n        /* \"#utility.yul\":718:738   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":767:798   */\n      dup2\n      and\n        /* \"#utility.yul\":757:799   */\n      dup2\n      eq\n        /* \"#utility.yul\":747:817   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":813:814   */\n      0x00\n        /* \"#utility.yul\":810:811   */\n      dup1\n        /* \"#utility.yul\":803:815   */\n      revert\n        /* \"#utility.yul\":747:817   */\n    tag_372:\n        /* \"#utility.yul\":650:823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":828:1049   */\n    tag_373:\n        /* \"#utility.yul\":871:876   */\n      0x00\n        /* \"#utility.yul\":924:927   */\n      dup3\n        /* \"#utility.yul\":917:921   */\n      0x1f\n        /* \"#utility.yul\":909:915   */\n      dup4\n        /* \"#utility.yul\":905:922   */\n      add\n        /* \"#utility.yul\":901:928   */\n      slt\n        /* \"#utility.yul\":891:946   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":942:943   */\n      0x00\n        /* \"#utility.yul\":939:940   */\n      dup1\n        /* \"#utility.yul\":932:944   */\n      revert\n        /* \"#utility.yul\":891:946   */\n    tag_375:\n        /* \"#utility.yul\":964:1043   */\n      tag_376\n        /* \"#utility.yul\":1039:1042   */\n      dup4\n        /* \"#utility.yul\":1030:1036   */\n      dup4\n        /* \"#utility.yul\":1017:1037   */\n      calldataload\n        /* \"#utility.yul\":1010:1014   */\n      0x20\n        /* \"#utility.yul\":1002:1008   */\n      dup6\n        /* \"#utility.yul\":998:1015   */\n      add\n        /* \"#utility.yul\":964:1043   */\n      tag_362\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":955:1043   */\n      swap4\n        /* \"#utility.yul\":828:1049   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1054:1240   */\n    tag_66:\n        /* \"#utility.yul\":1113:1119   */\n      0x00\n        /* \"#utility.yul\":1166:1168   */\n      0x20\n        /* \"#utility.yul\":1154:1163   */\n      dup3\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1141:1164   */\n      sub\n        /* \"#utility.yul\":1137:1169   */\n      slt\n        /* \"#utility.yul\":1134:1186   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":1182:1183   */\n      0x00\n        /* \"#utility.yul\":1179:1180   */\n      dup1\n        /* \"#utility.yul\":1172:1184   */\n      revert\n        /* \"#utility.yul\":1134:1186   */\n    tag_378:\n        /* \"#utility.yul\":1205:1234   */\n      tag_376\n        /* \"#utility.yul\":1224:1233   */\n      dup3\n        /* \"#utility.yul\":1205:1234   */\n      tag_370\n      jump\t// in\n        /* \"#utility.yul\":1245:1505   */\n    tag_99:\n        /* \"#utility.yul\":1313:1319   */\n      0x00\n        /* \"#utility.yul\":1321:1327   */\n      dup1\n        /* \"#utility.yul\":1374:1376   */\n      0x40\n        /* \"#utility.yul\":1362:1371   */\n      dup4\n        /* \"#utility.yul\":1353:1360   */\n      dup6\n        /* \"#utility.yul\":1349:1372   */\n      sub\n        /* \"#utility.yul\":1345:1377   */\n      slt\n        /* \"#utility.yul\":1342:1394   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":1390:1391   */\n      0x00\n        /* \"#utility.yul\":1387:1388   */\n      dup1\n        /* \"#utility.yul\":1380:1392   */\n      revert\n        /* \"#utility.yul\":1342:1394   */\n    tag_381:\n        /* \"#utility.yul\":1413:1442   */\n      tag_382\n        /* \"#utility.yul\":1432:1441   */\n      dup4\n        /* \"#utility.yul\":1413:1442   */\n      tag_370\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1403:1442   */\n      swap2\n      pop\n        /* \"#utility.yul\":1461:1499   */\n      tag_383\n        /* \"#utility.yul\":1495:1497   */\n      0x20\n        /* \"#utility.yul\":1484:1493   */\n      dup5\n        /* \"#utility.yul\":1480:1498   */\n      add\n        /* \"#utility.yul\":1461:1499   */\n      tag_370\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":1451:1499   */\n      swap1\n      pop\n        /* \"#utility.yul\":1245:1505   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1510:1838   */\n    tag_48:\n        /* \"#utility.yul\":1587:1593   */\n      0x00\n        /* \"#utility.yul\":1595:1601   */\n      dup1\n        /* \"#utility.yul\":1603:1609   */\n      0x00\n        /* \"#utility.yul\":1656:1658   */\n      0x60\n        /* \"#utility.yul\":1644:1653   */\n      dup5\n        /* \"#utility.yul\":1635:1642   */\n      dup7\n        /* \"#utility.yul\":1631:1654   */\n      sub\n        /* \"#utility.yul\":1627:1659   */\n      slt\n        /* \"#utility.yul\":1624:1676   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":1672:1673   */\n      0x00\n        /* \"#utility.yul\":1669:1670   */\n      dup1\n        /* \"#utility.yul\":1662:1674   */\n      revert\n        /* \"#utility.yul\":1624:1676   */\n    tag_385:\n        /* \"#utility.yul\":1695:1724   */\n      tag_386\n        /* \"#utility.yul\":1714:1723   */\n      dup5\n        /* \"#utility.yul\":1695:1724   */\n      tag_370\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1685:1724   */\n      swap3\n      pop\n        /* \"#utility.yul\":1743:1781   */\n      tag_387\n        /* \"#utility.yul\":1777:1779   */\n      0x20\n        /* \"#utility.yul\":1766:1775   */\n      dup6\n        /* \"#utility.yul\":1762:1780   */\n      add\n        /* \"#utility.yul\":1743:1781   */\n      tag_370\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":1733:1781   */\n      swap2\n      pop\n        /* \"#utility.yul\":1828:1830   */\n      0x40\n        /* \"#utility.yul\":1817:1826   */\n      dup5\n        /* \"#utility.yul\":1813:1831   */\n      add\n        /* \"#utility.yul\":1800:1832   */\n      calldataload\n        /* \"#utility.yul\":1790:1832   */\n      swap1\n      pop\n        /* \"#utility.yul\":1510:1838   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1843:2509   */\n    tag_84:\n        /* \"#utility.yul\":1938:1944   */\n      0x00\n        /* \"#utility.yul\":1946:1952   */\n      dup1\n        /* \"#utility.yul\":1954:1960   */\n      0x00\n        /* \"#utility.yul\":1962:1968   */\n      dup1\n        /* \"#utility.yul\":2015:2018   */\n      0x80\n        /* \"#utility.yul\":2003:2012   */\n      dup6\n        /* \"#utility.yul\":1994:2001   */\n      dup8\n        /* \"#utility.yul\":1990:2013   */\n      sub\n        /* \"#utility.yul\":1986:2019   */\n      slt\n        /* \"#utility.yul\":1983:2036   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":2032:2033   */\n      0x00\n        /* \"#utility.yul\":2029:2030   */\n      dup1\n        /* \"#utility.yul\":2022:2034   */\n      revert\n        /* \"#utility.yul\":1983:2036   */\n    tag_389:\n        /* \"#utility.yul\":2055:2084   */\n      tag_390\n        /* \"#utility.yul\":2074:2083   */\n      dup6\n        /* \"#utility.yul\":2055:2084   */\n      tag_370\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2045:2084   */\n      swap4\n      pop\n        /* \"#utility.yul\":2103:2141   */\n      tag_391\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2126:2135   */\n      dup7\n        /* \"#utility.yul\":2122:2140   */\n      add\n        /* \"#utility.yul\":2103:2141   */\n      tag_370\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2093:2141   */\n      swap3\n      pop\n        /* \"#utility.yul\":2188:2190   */\n      0x40\n        /* \"#utility.yul\":2177:2186   */\n      dup6\n        /* \"#utility.yul\":2173:2191   */\n      add\n        /* \"#utility.yul\":2160:2192   */\n      calldataload\n        /* \"#utility.yul\":2150:2192   */\n      swap2\n      pop\n        /* \"#utility.yul\":2243:2245   */\n      0x60\n        /* \"#utility.yul\":2232:2241   */\n      dup6\n        /* \"#utility.yul\":2228:2246   */\n      add\n        /* \"#utility.yul\":2215:2247   */\n      calldataload\n        /* \"#utility.yul\":2270:2288   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2262:2268   */\n      dup2\n        /* \"#utility.yul\":2259:2289   */\n      gt\n        /* \"#utility.yul\":2256:2306   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":2302:2303   */\n      0x00\n        /* \"#utility.yul\":2299:2300   */\n      dup1\n        /* \"#utility.yul\":2292:2304   */\n      revert\n        /* \"#utility.yul\":2256:2306   */\n    tag_392:\n        /* \"#utility.yul\":2325:2347   */\n      dup6\n      add\n        /* \"#utility.yul\":2378:2382   */\n      0x1f\n        /* \"#utility.yul\":2370:2383   */\n      dup2\n      add\n        /* \"#utility.yul\":2366:2393   */\n      dup8\n      sgt\n        /* \"#utility.yul\":2356:2411   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":2407:2408   */\n      0x00\n        /* \"#utility.yul\":2404:2405   */\n      dup1\n        /* \"#utility.yul\":2397:2409   */\n      revert\n        /* \"#utility.yul\":2356:2411   */\n    tag_393:\n        /* \"#utility.yul\":2430:2503   */\n      tag_394\n        /* \"#utility.yul\":2495:2502   */\n      dup8\n        /* \"#utility.yul\":2490:2492   */\n      dup3\n        /* \"#utility.yul\":2477:2493   */\n      calldataload\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2468:2470   */\n      dup5\n        /* \"#utility.yul\":2464:2475   */\n      add\n        /* \"#utility.yul\":2430:2503   */\n      tag_362\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2420:2503   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1843:2509   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2514:2861   */\n    tag_80:\n        /* \"#utility.yul\":2579:2585   */\n      0x00\n        /* \"#utility.yul\":2587:2593   */\n      dup1\n        /* \"#utility.yul\":2640:2642   */\n      0x40\n        /* \"#utility.yul\":2628:2637   */\n      dup4\n        /* \"#utility.yul\":2619:2626   */\n      dup6\n        /* \"#utility.yul\":2615:2638   */\n      sub\n        /* \"#utility.yul\":2611:2643   */\n      slt\n        /* \"#utility.yul\":2608:2660   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":2656:2657   */\n      0x00\n        /* \"#utility.yul\":2653:2654   */\n      dup1\n        /* \"#utility.yul\":2646:2658   */\n      revert\n        /* \"#utility.yul\":2608:2660   */\n    tag_396:\n        /* \"#utility.yul\":2679:2708   */\n      tag_397\n        /* \"#utility.yul\":2698:2707   */\n      dup4\n        /* \"#utility.yul\":2679:2708   */\n      tag_370\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2669:2708   */\n      swap2\n      pop\n        /* \"#utility.yul\":2758:2760   */\n      0x20\n        /* \"#utility.yul\":2747:2756   */\n      dup4\n        /* \"#utility.yul\":2743:2761   */\n      add\n        /* \"#utility.yul\":2730:2762   */\n      calldataload\n        /* \"#utility.yul\":2805:2810   */\n      dup1\n        /* \"#utility.yul\":2798:2811   */\n      iszero\n        /* \"#utility.yul\":2791:2812   */\n      iszero\n        /* \"#utility.yul\":2784:2789   */\n      dup2\n        /* \"#utility.yul\":2781:2813   */\n      eq\n        /* \"#utility.yul\":2771:2831   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":2827:2828   */\n      0x00\n        /* \"#utility.yul\":2824:2825   */\n      dup1\n        /* \"#utility.yul\":2817:2829   */\n      revert\n        /* \"#utility.yul\":2771:2831   */\n    tag_398:\n        /* \"#utility.yul\":2850:2855   */\n      dup1\n        /* \"#utility.yul\":2840:2855   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2514:2861   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2866:3262   */\n    tag_92:\n        /* \"#utility.yul\":2944:2950   */\n      0x00\n        /* \"#utility.yul\":2952:2958   */\n      dup1\n        /* \"#utility.yul\":3005:3007   */\n      0x40\n        /* \"#utility.yul\":2993:3002   */\n      dup4\n        /* \"#utility.yul\":2984:2991   */\n      dup6\n        /* \"#utility.yul\":2980:3003   */\n      sub\n        /* \"#utility.yul\":2976:3008   */\n      slt\n        /* \"#utility.yul\":2973:3025   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":3021:3022   */\n      0x00\n        /* \"#utility.yul\":3018:3019   */\n      dup1\n        /* \"#utility.yul\":3011:3023   */\n      revert\n        /* \"#utility.yul\":2973:3025   */\n    tag_400:\n        /* \"#utility.yul\":3044:3073   */\n      tag_401\n        /* \"#utility.yul\":3063:3072   */\n      dup4\n        /* \"#utility.yul\":3044:3073   */\n      tag_370\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3034:3073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3124:3126   */\n      0x20\n        /* \"#utility.yul\":3113:3122   */\n      dup4\n        /* \"#utility.yul\":3109:3127   */\n      add\n        /* \"#utility.yul\":3096:3128   */\n      calldataload\n        /* \"#utility.yul\":3151:3169   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3143:3149   */\n      dup2\n        /* \"#utility.yul\":3140:3170   */\n      gt\n        /* \"#utility.yul\":3137:3187   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":3183:3184   */\n      0x00\n        /* \"#utility.yul\":3180:3181   */\n      dup1\n        /* \"#utility.yul\":3173:3185   */\n      revert\n        /* \"#utility.yul\":3137:3187   */\n    tag_402:\n        /* \"#utility.yul\":3206:3256   */\n      tag_403\n        /* \"#utility.yul\":3248:3255   */\n      dup6\n        /* \"#utility.yul\":3239:3245   */\n      dup3\n        /* \"#utility.yul\":3228:3237   */\n      dup7\n        /* \"#utility.yul\":3224:3246   */\n      add\n        /* \"#utility.yul\":3206:3256   */\n      tag_373\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3196:3256   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2866:3262   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3267:3521   */\n    tag_44:\n        /* \"#utility.yul\":3335:3341   */\n      0x00\n        /* \"#utility.yul\":3343:3349   */\n      dup1\n        /* \"#utility.yul\":3396:3398   */\n      0x40\n        /* \"#utility.yul\":3384:3393   */\n      dup4\n        /* \"#utility.yul\":3375:3382   */\n      dup6\n        /* \"#utility.yul\":3371:3394   */\n      sub\n        /* \"#utility.yul\":3367:3399   */\n      slt\n        /* \"#utility.yul\":3364:3416   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":3412:3413   */\n      0x00\n        /* \"#utility.yul\":3409:3410   */\n      dup1\n        /* \"#utility.yul\":3402:3414   */\n      revert\n        /* \"#utility.yul\":3364:3416   */\n    tag_405:\n        /* \"#utility.yul\":3435:3464   */\n      tag_406\n        /* \"#utility.yul\":3454:3463   */\n      dup4\n        /* \"#utility.yul\":3435:3464   */\n      tag_370\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3425:3464   */\n      swap5\n        /* \"#utility.yul\":3511:3513   */\n      0x20\n        /* \"#utility.yul\":3496:3514   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3483:3515   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3267:3521   */\n      jump\t// out\n        /* \"#utility.yul\":3526:3771   */\n    tag_28:\n        /* \"#utility.yul\":3584:3590   */\n      0x00\n        /* \"#utility.yul\":3637:3639   */\n      0x20\n        /* \"#utility.yul\":3625:3634   */\n      dup3\n        /* \"#utility.yul\":3616:3623   */\n      dup5\n        /* \"#utility.yul\":3612:3635   */\n      sub\n        /* \"#utility.yul\":3608:3640   */\n      slt\n        /* \"#utility.yul\":3605:3657   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":3653:3654   */\n      0x00\n        /* \"#utility.yul\":3650:3651   */\n      dup1\n        /* \"#utility.yul\":3643:3655   */\n      revert\n        /* \"#utility.yul\":3605:3657   */\n    tag_408:\n        /* \"#utility.yul\":3692:3701   */\n      dup2\n        /* \"#utility.yul\":3679:3702   */\n      calldataload\n        /* \"#utility.yul\":3711:3741   */\n      tag_376\n        /* \"#utility.yul\":3735:3740   */\n      dup2\n        /* \"#utility.yul\":3711:3741   */\n      tag_410\n      jump\t// in\n        /* \"#utility.yul\":3776:4025   */\n    tag_311:\n        /* \"#utility.yul\":3845:3851   */\n      0x00\n        /* \"#utility.yul\":3898:3900   */\n      0x20\n        /* \"#utility.yul\":3886:3895   */\n      dup3\n        /* \"#utility.yul\":3877:3884   */\n      dup5\n        /* \"#utility.yul\":3873:3896   */\n      sub\n        /* \"#utility.yul\":3869:3901   */\n      slt\n        /* \"#utility.yul\":3866:3918   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":3914:3915   */\n      0x00\n        /* \"#utility.yul\":3911:3912   */\n      dup1\n        /* \"#utility.yul\":3904:3916   */\n      revert\n        /* \"#utility.yul\":3866:3918   */\n    tag_412:\n        /* \"#utility.yul\":3946:3955   */\n      dup2\n        /* \"#utility.yul\":3940:3956   */\n      mload\n        /* \"#utility.yul\":3965:3995   */\n      tag_376\n        /* \"#utility.yul\":3989:3994   */\n      dup2\n        /* \"#utility.yul\":3965:3995   */\n      tag_410\n      jump\t// in\n        /* \"#utility.yul\":4030:4352   */\n    tag_58:\n        /* \"#utility.yul\":4099:4105   */\n      0x00\n        /* \"#utility.yul\":4152:4154   */\n      0x20\n        /* \"#utility.yul\":4140:4149   */\n      dup3\n        /* \"#utility.yul\":4131:4138   */\n      dup5\n        /* \"#utility.yul\":4127:4150   */\n      sub\n        /* \"#utility.yul\":4123:4155   */\n      slt\n        /* \"#utility.yul\":4120:4172   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":4168:4169   */\n      0x00\n        /* \"#utility.yul\":4165:4166   */\n      dup1\n        /* \"#utility.yul\":4158:4170   */\n      revert\n        /* \"#utility.yul\":4120:4172   */\n    tag_415:\n        /* \"#utility.yul\":4208:4217   */\n      dup2\n        /* \"#utility.yul\":4195:4218   */\n      calldataload\n        /* \"#utility.yul\":4241:4259   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4233:4239   */\n      dup2\n        /* \"#utility.yul\":4230:4260   */\n      gt\n        /* \"#utility.yul\":4227:4277   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":4273:4274   */\n      0x00\n        /* \"#utility.yul\":4270:4271   */\n      dup1\n        /* \"#utility.yul\":4263:4275   */\n      revert\n        /* \"#utility.yul\":4227:4277   */\n    tag_416:\n        /* \"#utility.yul\":4296:4346   */\n      tag_246\n        /* \"#utility.yul\":4338:4345   */\n      dup5\n        /* \"#utility.yul\":4329:4335   */\n      dup3\n        /* \"#utility.yul\":4318:4327   */\n      dup6\n        /* \"#utility.yul\":4314:4336   */\n      add\n        /* \"#utility.yul\":4296:4346   */\n      tag_373\n      jump\t// in\n        /* \"#utility.yul\":4357:4537   */\n    tag_38:\n        /* \"#utility.yul\":4416:4422   */\n      0x00\n        /* \"#utility.yul\":4469:4471   */\n      0x20\n        /* \"#utility.yul\":4457:4466   */\n      dup3\n        /* \"#utility.yul\":4448:4455   */\n      dup5\n        /* \"#utility.yul\":4444:4467   */\n      sub\n        /* \"#utility.yul\":4440:4472   */\n      slt\n        /* \"#utility.yul\":4437:4489   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":4485:4486   */\n      0x00\n        /* \"#utility.yul\":4482:4483   */\n      dup1\n        /* \"#utility.yul\":4475:4487   */\n      revert\n        /* \"#utility.yul\":4437:4489   */\n    tag_419:\n      pop\n        /* \"#utility.yul\":4508:4531   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4357:4537   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4542:5013   */\n    tag_420:\n        /* \"#utility.yul\":4583:4586   */\n      0x00\n        /* \"#utility.yul\":4621:4626   */\n      dup2\n        /* \"#utility.yul\":4615:4627   */\n      mload\n        /* \"#utility.yul\":4648:4654   */\n      dup1\n        /* \"#utility.yul\":4643:4646   */\n      dup5\n        /* \"#utility.yul\":4636:4655   */\n      mstore\n        /* \"#utility.yul\":4673:4674   */\n      0x00\n        /* \"#utility.yul\":4683:4845   */\n    tag_422:\n        /* \"#utility.yul\":4697:4703   */\n      dup2\n        /* \"#utility.yul\":4694:4695   */\n      dup2\n        /* \"#utility.yul\":4691:4704   */\n      lt\n        /* \"#utility.yul\":4683:4845   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":4759:4763   */\n      0x20\n        /* \"#utility.yul\":4815:4828   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":4811:4833   */\n      dup2\n      add\n        /* \"#utility.yul\":4805:4834   */\n      mload\n        /* \"#utility.yul\":4787:4798   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":4783:4803   */\n      dup3\n      add\n        /* \"#utility.yul\":4776:4835   */\n      mstore\n        /* \"#utility.yul\":4712:4724   */\n      add\n        /* \"#utility.yul\":4683:4845   */\n      jump(tag_422)\n    tag_424:\n        /* \"#utility.yul\":4863:4869   */\n      dup2\n        /* \"#utility.yul\":4860:4861   */\n      dup2\n        /* \"#utility.yul\":4857:4870   */\n      gt\n        /* \"#utility.yul\":4854:4941   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":4929:4930   */\n      0x00\n        /* \"#utility.yul\":4922:4926   */\n      0x20\n        /* \"#utility.yul\":4913:4919   */\n      dup4\n        /* \"#utility.yul\":4908:4911   */\n      dup8\n        /* \"#utility.yul\":4904:4920   */\n      add\n        /* \"#utility.yul\":4900:4927   */\n      add\n        /* \"#utility.yul\":4893:4931   */\n      mstore\n        /* \"#utility.yul\":4854:4941   */\n    tag_425:\n      pop\n        /* \"#utility.yul\":4995:4997   */\n      0x1f\n        /* \"#utility.yul\":4974:4989   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4970:4999   */\n      and\n        /* \"#utility.yul\":4961:5000   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":5002:5006   */\n      0x20\n        /* \"#utility.yul\":4957:5007   */\n      add\n      swap3\n        /* \"#utility.yul\":4542:5013   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5018:6283   */\n    tag_202:\n        /* \"#utility.yul\":5275:5278   */\n      0x00\n        /* \"#utility.yul\":5304:5305   */\n      dup1\n        /* \"#utility.yul\":5337:5343   */\n      dup5\n        /* \"#utility.yul\":5331:5344   */\n      sload\n        /* \"#utility.yul\":5367:5370   */\n      dup2\n        /* \"#utility.yul\":5389:5390   */\n      0x01\n        /* \"#utility.yul\":5417:5426   */\n      dup3\n        /* \"#utility.yul\":5413:5415   */\n      dup2\n        /* \"#utility.yul\":5409:5427   */\n      shr\n        /* \"#utility.yul\":5399:5427   */\n      swap2\n      pop\n        /* \"#utility.yul\":5477:5479   */\n      dup1\n        /* \"#utility.yul\":5466:5475   */\n      dup4\n        /* \"#utility.yul\":5462:5480   */\n      and\n        /* \"#utility.yul\":5499:5517   */\n      dup1\n        /* \"#utility.yul\":5489:5550   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":5543:5547   */\n      0x7f\n        /* \"#utility.yul\":5535:5541   */\n      dup4\n        /* \"#utility.yul\":5531:5548   */\n      and\n        /* \"#utility.yul\":5521:5548   */\n      swap3\n      pop\n        /* \"#utility.yul\":5489:5550   */\n    tag_427:\n        /* \"#utility.yul\":5569:5571   */\n      0x20\n        /* \"#utility.yul\":5617:5619   */\n      dup1\n        /* \"#utility.yul\":5609:5615   */\n      dup5\n        /* \"#utility.yul\":5606:5620   */\n      lt\n        /* \"#utility.yul\":5586:5604   */\n      dup3\n        /* \"#utility.yul\":5583:5621   */\n      eq\n        /* \"#utility.yul\":5580:5745   */\n      iszero\n      tag_428\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5644:5677   */\n      dup7\n      mstore\n        /* \"#utility.yul\":5700:5704   */\n      0x22\n        /* \"#utility.yul\":5697:5698   */\n      0x04\n        /* \"#utility.yul\":5690:5705   */\n      mstore\n        /* \"#utility.yul\":5730:5734   */\n      0x24\n        /* \"#utility.yul\":5651:5654   */\n      dup7\n        /* \"#utility.yul\":5718:5735   */\n      revert\n        /* \"#utility.yul\":5580:5745   */\n    tag_428:\n        /* \"#utility.yul\":5761:5779   */\n      dup2\n        /* \"#utility.yul\":5788:5892   */\n      dup1\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":5906:5907   */\n      0x01\n        /* \"#utility.yul\":5901:6221   */\n      dup2\n      eq\n      tag_431\n      jumpi\n        /* \"#utility.yul\":5754:6221   */\n      jump(tag_429)\n        /* \"#utility.yul\":5788:5892   */\n    tag_430:\n      not(0xff)\n        /* \"#utility.yul\":5821:5845   */\n      dup7\n      and\n        /* \"#utility.yul\":5809:5846   */\n      dup10\n      mstore\n        /* \"#utility.yul\":5866:5882   */\n      dup5\n      dup10\n      add\n      swap7\n      pop\n        /* \"#utility.yul\":5788:5892   */\n      jump(tag_429)\n        /* \"#utility.yul\":5901:6221   */\n    tag_431:\n        /* \"#utility.yul\":14454:14455   */\n      0x00\n        /* \"#utility.yul\":14447:14461   */\n      dup12\n      dup2\n      mstore\n        /* \"#utility.yul\":14491:14495   */\n      0x20\n        /* \"#utility.yul\":14478:14496   */\n      swap1\n      keccak256\n        /* \"#utility.yul\":5996:5997   */\n      0x00\n        /* \"#utility.yul\":6010:6175   */\n    tag_434:\n        /* \"#utility.yul\":6024:6030   */\n      dup7\n        /* \"#utility.yul\":6021:6022   */\n      dup2\n        /* \"#utility.yul\":6018:6031   */\n      lt\n        /* \"#utility.yul\":6010:6175   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":6102:6116   */\n      dup2\n      sload\n        /* \"#utility.yul\":6089:6100   */\n      dup12\n      dup3\n      add\n        /* \"#utility.yul\":6082:6117   */\n      mstore\n        /* \"#utility.yul\":6145:6161   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":6039:6049   */\n      dup4\n      add\n        /* \"#utility.yul\":6010:6175   */\n      jump(tag_434)\n    tag_436:\n        /* \"#utility.yul\":6014:6017   */\n      pop\n      pop\n        /* \"#utility.yul\":6204:6210   */\n      dup5\n        /* \"#utility.yul\":6199:6202   */\n      dup10\n        /* \"#utility.yul\":6195:6211   */\n      add\n        /* \"#utility.yul\":6188:6211   */\n      swap7\n      pop\n        /* \"#utility.yul\":5754:6221   */\n    tag_429:\n      pop\n        /* \"#utility.yul\":6230:6249   */\n      swap8\n      dup6\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6265:6277   */\n      swap4\n      add\n      swap5\n        /* \"#utility.yul\":5018:6283   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6496:6984   */\n    tag_307:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6765:6780   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":6747:6781   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6817:6832   */\n      dup5\n      and\n        /* \"#utility.yul\":6812:6814   */\n      0x20\n        /* \"#utility.yul\":6797:6815   */\n      dup3\n      add\n        /* \"#utility.yul\":6790:6833   */\n      mstore\n        /* \"#utility.yul\":6864:6866   */\n      0x40\n        /* \"#utility.yul\":6849:6867   */\n      dup2\n      add\n        /* \"#utility.yul\":6842:6876   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6912:6915   */\n      0x80\n        /* \"#utility.yul\":6907:6909   */\n      0x60\n        /* \"#utility.yul\":6892:6910   */\n      dup3\n      add\n        /* \"#utility.yul\":6885:6916   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6690:6694   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6933:6978   */\n      tag_439\n      swap1\n        /* \"#utility.yul\":6958:6977   */\n      dup4\n      add\n        /* \"#utility.yul\":6950:6956   */\n      dup5\n        /* \"#utility.yul\":6933:6978   */\n      tag_420\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6925:6978   */\n      swap7\n        /* \"#utility.yul\":6496:6984   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7181:7400   */\n    tag_35:\n        /* \"#utility.yul\":7330:7332   */\n      0x20\n        /* \"#utility.yul\":7319:7328   */\n      dup2\n        /* \"#utility.yul\":7312:7333   */\n      mstore\n        /* \"#utility.yul\":7293:7297   */\n      0x00\n        /* \"#utility.yul\":7350:7394   */\n      tag_376\n        /* \"#utility.yul\":7390:7392   */\n      0x20\n        /* \"#utility.yul\":7379:7388   */\n      dup4\n        /* \"#utility.yul\":7375:7393   */\n      add\n        /* \"#utility.yul\":7367:7373   */\n      dup5\n        /* \"#utility.yul\":7350:7394   */\n      tag_420\n      jump\t// in\n        /* \"#utility.yul\":7405:7819   */\n    tag_280:\n        /* \"#utility.yul\":7607:7609   */\n      0x20\n        /* \"#utility.yul\":7589:7610   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7646:7648   */\n      0x32\n        /* \"#utility.yul\":7626:7644   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7619:7649   */\n      mstore\n        /* \"#utility.yul\":7685:7719   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":7680:7682   */\n      0x40\n        /* \"#utility.yul\":7665:7683   */\n      dup3\n      add\n        /* \"#utility.yul\":7658:7720   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":7751:7753   */\n      0x60\n        /* \"#utility.yul\":7736:7754   */\n      dup3\n      add\n        /* \"#utility.yul\":7729:7777   */\n      mstore\n        /* \"#utility.yul\":7809:7812   */\n      0x80\n        /* \"#utility.yul\":7794:7813   */\n      add\n      swap1\n        /* \"#utility.yul\":7405:7819   */\n      jump\t// out\n        /* \"#utility.yul\":12601:12957   */\n    tag_162:\n        /* \"#utility.yul\":12803:12805   */\n      0x20\n        /* \"#utility.yul\":12785:12806   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12822:12840   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":12815:12845   */\n      mstore\n        /* \"#utility.yul\":12881:12915   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12876:12878   */\n      0x40\n        /* \"#utility.yul\":12861:12879   */\n      dup3\n      add\n        /* \"#utility.yul\":12854:12916   */\n      mstore\n        /* \"#utility.yul\":12948:12950   */\n      0x60\n        /* \"#utility.yul\":12933:12951   */\n      add\n      swap1\n        /* \"#utility.yul\":12601:12957   */\n      jump\t// out\n        /* \"#utility.yul\":13364:13777   */\n    tag_144:\n        /* \"#utility.yul\":13566:13568   */\n      0x20\n        /* \"#utility.yul\":13548:13569   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13605:13607   */\n      0x31\n        /* \"#utility.yul\":13585:13603   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13578:13608   */\n      mstore\n        /* \"#utility.yul\":13644:13678   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":13639:13641   */\n      0x40\n        /* \"#utility.yul\":13624:13642   */\n      dup3\n      add\n        /* \"#utility.yul\":13617:13679   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":13710:13712   */\n      0x60\n        /* \"#utility.yul\":13695:13713   */\n      dup3\n      add\n        /* \"#utility.yul\":13688:13735   */\n      mstore\n        /* \"#utility.yul\":13767:13770   */\n      0x80\n        /* \"#utility.yul\":13752:13771   */\n      add\n      swap1\n        /* \"#utility.yul\":13364:13777   */\n      jump\t// out\n        /* \"#utility.yul\":14507:14635   */\n    tag_262:\n        /* \"#utility.yul\":14547:14550   */\n      0x00\n        /* \"#utility.yul\":14578:14579   */\n      dup3\n        /* \"#utility.yul\":14574:14580   */\n      not\n        /* \"#utility.yul\":14571:14572   */\n      dup3\n        /* \"#utility.yul\":14568:14581   */\n      gt\n        /* \"#utility.yul\":14565:14604   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":14584:14602   */\n      tag_464\n      tag_465\n      jump\t// in\n    tag_464:\n      pop\n        /* \"#utility.yul\":14620:14629   */\n      add\n      swap1\n        /* \"#utility.yul\":14507:14635   */\n      jump\t// out\n        /* \"#utility.yul\":14640:14765   */\n    tag_260:\n        /* \"#utility.yul\":14680:14684   */\n      0x00\n        /* \"#utility.yul\":14708:14709   */\n      dup3\n        /* \"#utility.yul\":14705:14706   */\n      dup3\n        /* \"#utility.yul\":14702:14710   */\n      lt\n        /* \"#utility.yul\":14699:14733   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":14713:14731   */\n      tag_468\n      tag_465\n      jump\t// in\n    tag_468:\n      pop\n        /* \"#utility.yul\":14750:14759   */\n      sub\n      swap1\n        /* \"#utility.yul\":14640:14765   */\n      jump\t// out\n        /* \"#utility.yul\":14770:15150   */\n    tag_112:\n        /* \"#utility.yul\":14849:14850   */\n      0x01\n        /* \"#utility.yul\":14845:14857   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":14892:14904   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":14913:14974   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":14967:14971   */\n      0x7f\n        /* \"#utility.yul\":14959:14965   */\n      dup3\n        /* \"#utility.yul\":14955:14972   */\n      and\n        /* \"#utility.yul\":14945:14972   */\n      swap2\n      pop\n        /* \"#utility.yul\":14913:14974   */\n    tag_470:\n        /* \"#utility.yul\":15020:15022   */\n      0x20\n        /* \"#utility.yul\":15012:15018   */\n      dup3\n        /* \"#utility.yul\":15009:15023   */\n      lt\n        /* \"#utility.yul\":14989:15007   */\n      dup2\n        /* \"#utility.yul\":14986:15024   */\n      eq\n        /* \"#utility.yul\":14983:15144   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":15066:15076   */\n      0x4e487b71\n        /* \"#utility.yul\":15061:15064   */\n      0xe0\n        /* \"#utility.yul\":15057:15077   */\n      shl\n        /* \"#utility.yul\":15054:15055   */\n      0x00\n        /* \"#utility.yul\":15047:15078   */\n      mstore\n        /* \"#utility.yul\":15101:15105   */\n      0x22\n        /* \"#utility.yul\":15098:15099   */\n      0x04\n        /* \"#utility.yul\":15091:15106   */\n      mstore\n        /* \"#utility.yul\":15129:15133   */\n      0x24\n        /* \"#utility.yul\":15126:15127   */\n      0x00\n        /* \"#utility.yul\":15119:15134   */\n      revert\n        /* \"#utility.yul\":14983:15144   */\n    tag_471:\n      pop\n        /* \"#utility.yul\":14770:15150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15155:15282   */\n    tag_465:\n        /* \"#utility.yul\":15216:15226   */\n      0x4e487b71\n        /* \"#utility.yul\":15211:15214   */\n      0xe0\n        /* \"#utility.yul\":15207:15227   */\n      shl\n        /* \"#utility.yul\":15204:15205   */\n      0x00\n        /* \"#utility.yul\":15197:15228   */\n      mstore\n        /* \"#utility.yul\":15247:15251   */\n      0x11\n        /* \"#utility.yul\":15244:15245   */\n      0x04\n        /* \"#utility.yul\":15237:15252   */\n      mstore\n        /* \"#utility.yul\":15271:15275   */\n      0x24\n        /* \"#utility.yul\":15268:15269   */\n      0x00\n        /* \"#utility.yul\":15261:15276   */\n      revert\n        /* \"#utility.yul\":15287:15414   */\n    tag_366:\n        /* \"#utility.yul\":15348:15358   */\n      0x4e487b71\n        /* \"#utility.yul\":15343:15346   */\n      0xe0\n        /* \"#utility.yul\":15339:15359   */\n      shl\n        /* \"#utility.yul\":15336:15337   */\n      0x00\n        /* \"#utility.yul\":15329:15360   */\n      mstore\n        /* \"#utility.yul\":15379:15383   */\n      0x41\n        /* \"#utility.yul\":15376:15377   */\n      0x04\n        /* \"#utility.yul\":15369:15384   */\n      mstore\n        /* \"#utility.yul\":15403:15407   */\n      0x24\n        /* \"#utility.yul\":15400:15401   */\n      0x00\n        /* \"#utility.yul\":15393:15408   */\n      revert\n        /* \"#utility.yul\":15419:15550   */\n    tag_410:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":15493:15525   */\n      dup2\n      and\n        /* \"#utility.yul\":15483:15526   */\n      dup2\n      eq\n        /* \"#utility.yul\":15473:15544   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":15540:15541   */\n      0x00\n        /* \"#utility.yul\":15537:15538   */\n      dup1\n        /* \"#utility.yul\":15530:15542   */\n      revert\n\n    auxdata: 0xa2646970667358221220f1e4d619c3b4cefae663e92d539c811f312f82e3d808123f5d4f9b7a776cb34264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_167": {
									"entryPoint": null,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_1951": {
									"entryPoint": null,
									"id": 1951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1596": {
									"entryPoint": 149,
									"id": 1596,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 153,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:14"
															},
															"nodeType": "YulIf",
															"src": "157:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:14"
															},
															"nodeType": "YulIf",
															"src": "227:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:14",
														"type": ""
													}
												],
												"src": "14:380:14"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604080518082018252600781526626bcaa37b5b2b760c91b6020808301918252835180850190945260038452624d544b60e81b9084015281519192916200005c91600091620000eb565b50805162000072906001906020840190620000eb565b5050506200008f620000896200009560201b60201c565b62000099565b620001ce565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f99062000191565b90600052602060002090601f0160209004810192826200011d576000855562000168565b82601f106200013857805160ff191683800117855562000168565b8280016001018555821562000168579182015b82811115620001685782518255916020019190600101906200014b565b50620001769291506200017a565b5090565b5b808211156200017657600081556001016200017b565b600181811c90821680620001a657607f821691505b60208210811415620001c857634e487b7160e01b600052602260045260246000fd5b50919050565b6118ee80620001de6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063715018a6116100ad578063c87b56dd11610071578063c87b56dd14610275578063d204c45e14610288578063d547cfb71461029b578063e985e9c5146102a3578063f2fde38b146102df57600080fd5b8063715018a61461022e5780638da5cb5b1461023657806395d89b4114610247578063a22cb4651461024f578063b88d4fde1461026257600080fd5b806342842e0e116100f457806342842e0e146101c157806342966c68146101d457806355f804b3146101e75780636352211e146101fa57806370a082311461020d57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806323b872dd146101ae575b600080fd5b61014461013f366004611570565b6102f2565b60405190151581526020015b60405180910390f35b610161610344565b6040516101509190611721565b61018161017c3660046115df565b6103d6565b6040516001600160a01b039091168152602001610150565b6101ac6101a7366004611546565b610470565b005b6101ac6101bc366004611404565b610586565b6101ac6101cf366004611404565b6105b8565b6101ac6101e23660046115df565b6105d3565b6101ac6101f53660046115aa565b61064d565b6101816102083660046115df565b61068e565b61022061021b3660046113b6565b610705565b604051908152602001610150565b6101ac61078c565b6007546001600160a01b0316610181565b6101616107c2565b6101ac61025d3660046114bc565b6107d1565b6101ac610270366004611440565b6107dc565b6101616102833660046115df565b610814565b6101ac6102963660046114f8565b610840565b610161610899565b6101446102b13660046113d1565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102ed3660046113b6565b610927565b60006001600160e01b031982166380ac58cd60e01b148061032357506001600160e01b03198216635b5e139f60e01b145b8061033e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103539061183b565b80601f016020809104026020016040519081016040528092919081815260200182805461037f9061183b565b80156103cc5780601f106103a1576101008083540402835291602001916103cc565b820191906000526020600020905b8154815290600101906020018083116103af57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104545760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061047b8261068e565b9050806001600160a01b0316836001600160a01b031614156104e95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161044b565b336001600160a01b0382161480610505575061050581336102b1565b6105775760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161044b565b61058183836109bf565b505050565b610591335b82610a2d565b6105ad5760405162461bcd60e51b815260040161044b906117bb565b610581838383610b24565b610581838383604051806020016040528060008152506107dc565b6105dc3361058b565b6106415760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b606482015260840161044b565b61064a81610cc0565b50565b6007546001600160a01b031633146106775760405162461bcd60e51b815260040161044b90611786565b805161068a90600990602084019061122e565b5050565b6000818152600260205260408120546001600160a01b03168061033e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161044b565b60006001600160a01b0382166107705760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161044b565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146107b65760405162461bcd60e51b815260040161044b90611786565b6107c06000610cc9565b565b6060600180546103539061183b565b61068a338383610d1b565b6107e63383610a2d565b6108025760405162461bcd60e51b815260040161044b906117bb565b61080e84848484610dea565b50505050565b606060098260405160200161082a929190611645565b6040516020818303038152906040529050919050565b6007546001600160a01b0316331461086a5760405162461bcd60e51b815260040161044b90611786565b600061087560085490565b9050610885600880546001019055565b61088f8382610e1d565b6105818183610e37565b600980546108a69061183b565b80601f01602080910402602001604051908101604052809291908181526020018280546108d29061183b565b801561091f5780601f106108f45761010080835404028352916020019161091f565b820191906000526020600020905b81548152906001019060200180831161090257829003601f168201915b505050505081565b6007546001600160a01b031633146109515760405162461bcd60e51b815260040161044b90611786565b6001600160a01b0381166109b65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161044b565b61064a81610cc9565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109f48261068e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610aa65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161044b565b6000610ab18361068e565b9050806001600160a01b0316846001600160a01b03161480610af857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b1c5750836001600160a01b0316610b11846103d6565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b378261068e565b6001600160a01b031614610b9b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161044b565b6001600160a01b038216610bfd5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161044b565b610c086000826109bf565b6001600160a01b0383166000908152600360205260408120805460019290610c31908490611824565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c5f90849061180c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61064a81610ed1565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610d7d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161044b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610df5848484610b24565b610e0184848484610f11565b61080e5760405162461bcd60e51b815260040161044b90611734565b61068a82826040518060200160405280600081525061101e565b6000828152600260205260409020546001600160a01b0316610eb25760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161044b565b600082815260066020908152604090912082516105819284019061122e565b610eda81611051565b60008181526006602052604090208054610ef39061183b565b15905061064a57600081815260066020526040812061064a916112b2565b60006001600160a01b0384163b1561101357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f559033908990889088906004016116e4565b602060405180830381600087803b158015610f6f57600080fd5b505af1925050508015610f9f575060408051601f3d908101601f19168201909252610f9c9181019061158d565b60015b610ff9573d808015610fcd576040519150601f19603f3d011682016040523d82523d6000602084013e610fd2565b606091505b508051610ff15760405162461bcd60e51b815260040161044b90611734565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b1c565b506001949350505050565b61102883836110ec565b6110356000848484610f11565b6105815760405162461bcd60e51b815260040161044b90611734565b600061105c8261068e565b90506110696000836109bf565b6001600160a01b0381166000908152600360205260408120805460019290611092908490611824565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166111425760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161044b565b6000818152600260205260409020546001600160a01b0316156111a75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161044b565b6001600160a01b03821660009081526003602052604081208054600192906111d090849061180c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461123a9061183b565b90600052602060002090601f01602090048101928261125c57600085556112a2565b82601f1061127557805160ff19168380011785556112a2565b828001600101855582156112a2579182015b828111156112a2578251825591602001919060010190611287565b506112ae9291506112e8565b5090565b5080546112be9061183b565b6000825580601f106112ce575050565b601f01602090049060005260206000209081019061064a91905b5b808211156112ae57600081556001016112e9565b600067ffffffffffffffff808411156113185761131861188c565b604051601f8501601f19908116603f011681019082821181831017156113405761134061188c565b8160405280935085815286868601111561135957600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461138a57600080fd5b919050565b600082601f8301126113a057600080fd5b6113af838335602085016112fd565b9392505050565b6000602082840312156113c857600080fd5b6113af82611373565b600080604083850312156113e457600080fd5b6113ed83611373565b91506113fb60208401611373565b90509250929050565b60008060006060848603121561141957600080fd5b61142284611373565b925061143060208501611373565b9150604084013590509250925092565b6000806000806080858703121561145657600080fd5b61145f85611373565b935061146d60208601611373565b925060408501359150606085013567ffffffffffffffff81111561149057600080fd5b8501601f810187136114a157600080fd5b6114b0878235602084016112fd565b91505092959194509250565b600080604083850312156114cf57600080fd5b6114d883611373565b9150602083013580151581146114ed57600080fd5b809150509250929050565b6000806040838503121561150b57600080fd5b61151483611373565b9150602083013567ffffffffffffffff81111561153057600080fd5b61153c8582860161138f565b9150509250929050565b6000806040838503121561155957600080fd5b61156283611373565b946020939093013593505050565b60006020828403121561158257600080fd5b81356113af816118a2565b60006020828403121561159f57600080fd5b81516113af816118a2565b6000602082840312156115bc57600080fd5b813567ffffffffffffffff8111156115d357600080fd5b610b1c8482850161138f565b6000602082840312156115f157600080fd5b5035919050565b6000815180845260005b8181101561161e57602081850181015186830182015201611602565b81811115611630576000602083870101525b50601f01601f19169290920160200192915050565b600080845481600182811c91508083168061166157607f831692505b602080841082141561168157634e487b7160e01b86526022600452602486fd5b81801561169557600181146116a6576116d3565b60ff198616895284890196506116d3565b60008b81526020902060005b868110156116cb5781548b8201529085019083016116b2565b505084890196505b509785525050509301949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611717908301846115f8565b9695505050505050565b6020815260006113af60208301846115f8565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561181f5761181f611876565b500190565b60008282101561183657611836611876565b500390565b600181811c9082168061184f57607f821691505b6020821081141561187057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461064a57600080fdfea2646970667358221220f1e4d619c3b4cefae663e92d539c811f312f82e3d808123f5d4f9b7a776cb34264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH3 0x4D544B PUSH1 0xE8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x5C SWAP2 PUSH1 0x0 SWAP2 PUSH3 0xEB JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x72 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xEB JUMP JUMPDEST POP POP POP PUSH3 0x8F PUSH3 0x89 PUSH3 0x95 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x99 JUMP JUMPDEST PUSH3 0x1CE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xF9 SWAP1 PUSH3 0x191 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x11D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x168 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x138 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x168 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x168 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x168 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x14B JUMP JUMPDEST POP PUSH3 0x176 SWAP3 SWAP2 POP PUSH3 0x17A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x176 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x17B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EE DUP1 PUSH3 0x1DE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x586 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST PUSH2 0x181 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x220 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x78C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x181 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x161 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x899 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x323 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x33E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x353 SWAP1 PUSH2 0x183B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37F SWAP1 PUSH2 0x183B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B DUP3 PUSH2 0x68E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x505 JUMPI POP PUSH2 0x505 DUP2 CALLER PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH2 0x581 DUP4 DUP4 PUSH2 0x9BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x591 CALLER JUMPDEST DUP3 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x581 DUP4 DUP4 DUP4 PUSH2 0xB24 JUMP JUMPDEST PUSH2 0x581 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x5DC CALLER PUSH2 0x58B JUMP JUMPDEST PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH2 0x64A DUP2 PUSH2 0xCC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1786 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x68A SWAP1 PUSH1 0x9 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x122E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x7C0 PUSH1 0x0 PUSH2 0xCC9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x353 SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x68A CALLER DUP4 DUP4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x7E6 CALLER DUP4 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x80E DUP5 DUP5 DUP5 DUP5 PUSH2 0xDEA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x82A SWAP3 SWAP2 SWAP1 PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x875 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x885 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x88F DUP4 DUP3 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x581 DUP2 DUP4 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x8A6 SWAP1 PUSH2 0x183B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D2 SWAP1 PUSH2 0x183B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x91F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x91F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x902 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH2 0x64A DUP2 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x9F4 DUP3 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB1 DUP4 PUSH2 0x68E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xAF8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xB1C JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB11 DUP5 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB37 DUP3 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH2 0xC08 PUSH1 0x0 DUP3 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xC31 SWAP1 DUP5 SWAP1 PUSH2 0x1824 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xC5F SWAP1 DUP5 SWAP1 PUSH2 0x180C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x64A DUP2 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xDF5 DUP5 DUP5 DUP5 PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xE01 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x68A DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x101E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x581 SWAP3 DUP5 ADD SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH2 0xEDA DUP2 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xEF3 SWAP1 PUSH2 0x183B JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x64A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x64A SWAP2 PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1013 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xF55 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF9F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF9C SWAP2 DUP2 ADD SWAP1 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFF9 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xFF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1734 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xB1C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1028 DUP4 DUP4 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x1035 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x68E JUMP JUMPDEST SWAP1 POP PUSH2 0x1069 PUSH1 0x0 DUP4 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1092 SWAP1 DUP5 SWAP1 PUSH2 0x1824 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1142 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x11D0 SWAP1 DUP5 SWAP1 PUSH2 0x180C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x123A SWAP1 PUSH2 0x183B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x125C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x12A2 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1275 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x12A2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x12A2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x12A2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1287 JUMP JUMPDEST POP PUSH2 0x12AE SWAP3 SWAP2 POP PUSH2 0x12E8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x12BE SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x12CE JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x64A SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1318 JUMPI PUSH2 0x1318 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1340 JUMPI PUSH2 0x1340 PUSH2 0x188C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x138A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13AF DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x12FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13AF DUP3 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13ED DUP4 PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP PUSH2 0x13FB PUSH1 0x20 DUP5 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1422 DUP5 PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP PUSH2 0x1430 PUSH1 0x20 DUP6 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145F DUP6 PUSH2 0x1373 JUMP JUMPDEST SWAP4 POP PUSH2 0x146D PUSH1 0x20 DUP7 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x14A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B0 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x12FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14D8 DUP4 PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x150B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1514 DUP4 PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x153C DUP6 DUP3 DUP7 ADD PUSH2 0x138F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1562 DUP4 PUSH2 0x1373 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13AF DUP2 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x13AF DUP2 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1C DUP5 DUP3 DUP6 ADD PUSH2 0x138F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x161E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1602 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1630 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x1661 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x1681 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1695 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x16A6 JUMPI PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x16CB JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x16B2 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP8 DUP6 MSTORE POP POP POP SWAP4 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1717 SWAP1 DUP4 ADD DUP5 PUSH2 0x15F8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13AF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x181F JUMPI PUSH2 0x181F PUSH2 0x1876 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1836 JUMPI PUSH2 0x1836 PUSH2 0x1876 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x184F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1870 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE4 0xD6 NOT 0xC3 0xB4 0xCE STATICCALL 0xE6 PUSH4 0xE92D539C DUP2 0x1F BALANCE 0x2F DUP3 0xE3 0xD8 ADDMOD SLT EXTCODEHASH 0x5D 0x4F SWAP12 PUSH27 0x776CB34264736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "378:1022:13:-:0;;;581:41;;;;;;;;;-1:-1:-1;1390:113:1;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:1;:::i;:::-;-1:-1:-1;1479:17:1;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;378:1022:13;;640:96:8;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;378:1022:13:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;378:1022:13;;;-1:-1:-1;378:1022:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:14;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;378:1022:13;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_969": {
									"entryPoint": null,
									"id": 969,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_853": {
									"entryPoint": 2495,
									"id": 853,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1261": {
									"entryPoint": 3793,
									"id": 1261,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_1997": {
									"entryPoint": 3264,
									"id": 1997,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_754": {
									"entryPoint": 4177,
									"id": 754,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_947": {
									"entryPoint": 3857,
									"id": 947,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_543": {
									"entryPoint": null,
									"id": 543,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_584": {
									"entryPoint": 2605,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_694": {
									"entryPoint": 4332,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1596": {
									"entryPoint": null,
									"id": 1596,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeMint_599": {
									"entryPoint": 3613,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_628": {
									"entryPoint": 4126,
									"id": 628,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_525": {
									"entryPoint": 3562,
									"id": 525,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_885": {
									"entryPoint": 3355,
									"id": 885,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1231": {
									"entryPoint": 3639,
									"id": 1231,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 3273,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_829": {
									"entryPoint": 2852,
									"id": 829,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_364": {
									"entryPoint": 1136,
									"id": 364,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_222": {
									"entryPoint": 1797,
									"id": 222,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@baseTokenURI_1943": {
									"entryPoint": 2201,
									"id": 1943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_1133": {
									"entryPoint": 1491,
									"id": 1133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_1624": {
									"entryPoint": null,
									"id": 1624,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_385": {
									"entryPoint": 982,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1638": {
									"entryPoint": null,
									"id": 1638,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_420": {
									"entryPoint": null,
									"id": 420,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1307": {
									"entryPoint": null,
									"id": 1307,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_260": {
									"entryPoint": 836,
									"id": 260,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_250": {
									"entryPoint": 1678,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1932,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_1982": {
									"entryPoint": 2112,
									"id": 1982,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_466": {
									"entryPoint": 1464,
									"id": 466,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_496": {
									"entryPoint": 2012,
									"id": 496,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_402": {
									"entryPoint": 2001,
									"id": 402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_2009": {
									"entryPoint": 1613,
									"id": 2009,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1906": {
									"entryPoint": null,
									"id": 1906,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_198": {
									"entryPoint": 754,
									"id": 198,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_270": {
									"entryPoint": 1986,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_2030": {
									"entryPoint": 2068,
									"id": 2030,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_447": {
									"entryPoint": 1414,
									"id": 447,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 2343,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 4861,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 5007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 5368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr_t_uint256_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5701,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 6306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15552:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "88:557:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "98:28:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "108:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "102:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "153:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "155:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "155:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "155:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "141:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "149:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "138:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "138:14:14"
															},
															"nodeType": "YulIf",
															"src": "135:40:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "198:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:7:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "210:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "230:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "224:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "214:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:73:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "264:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "288:6:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "296:2:14",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "284:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "284:15:14"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "301:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "280:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "280:24:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "306:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "276:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "276:33:14"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "311:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "272:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "272:42:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "260:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:55:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "246:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "374:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "376:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "376:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "376:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "333:10:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "345:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "330:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "353:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "365:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "350:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "350:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "327:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:46:14"
															},
															"nodeType": "YulIf",
															"src": "324:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "416:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "405:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "405:22:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "436:15:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "445:6:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "475:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "460:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:22:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "520:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "532:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "522:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "522:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "522:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "501:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "506:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:16:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "515:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "494:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:25:14"
															},
															"nodeType": "YulIf",
															"src": "491:45:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "562:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "570:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:17:14"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "577:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "582:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "545:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "545:44:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "545:44:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "613:6:14"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "621:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "609:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "609:19:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "630:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "605:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "605:30:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "637:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "598:41:14"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "57:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "62:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "78:5:14",
														"type": ""
													}
												],
												"src": "14:631:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "699:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "709:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "731:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "718:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "709:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "801:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "813:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "803:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "803:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "803:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "760:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "786:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "791:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "782:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "782:11:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "795:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "778:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "778:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "767:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "767:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "757:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:50:14"
															},
															"nodeType": "YulIf",
															"src": "747:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "678:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "689:5:14",
														"type": ""
													}
												],
												"src": "650:173:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:168:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "930:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "942:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "932:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "932:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "932:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "909:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "917:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "905:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "905:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "924:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "901:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "901:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:35:14"
															},
															"nodeType": "YulIf",
															"src": "891:55:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "955:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1002:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1010:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "998:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "998:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1017:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1017:20:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1039:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "964:33:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "955:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "855:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "863:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "871:5:14",
														"type": ""
													}
												],
												"src": "828:221:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1124:116:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1170:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1179:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1182:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1172:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1172:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1172:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1154:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1141:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1141:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1137:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:32:14"
															},
															"nodeType": "YulIf",
															"src": "1134:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1195:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1224:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1205:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1195:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1090:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1101:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1113:6:14",
														"type": ""
													}
												],
												"src": "1054:186:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1332:173:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1378:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1387:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1380:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1380:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1380:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1353:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1362:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1349:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1349:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1374:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:32:14"
															},
															"nodeType": "YulIf",
															"src": "1342:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1403:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1432:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1413:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1451:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1484:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1495:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1480:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1480:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1461:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1461:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1290:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1301:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1313:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1321:6:14",
														"type": ""
													}
												],
												"src": "1245:260:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1614:224:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1660:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1669:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1672:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1662:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1662:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1662:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1635:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1644:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1631:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1656:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1627:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1627:32:14"
															},
															"nodeType": "YulIf",
															"src": "1624:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1685:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1714:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1695:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1695:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1685:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1733:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1766:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1777:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1762:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1762:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1743:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1733:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1790:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1817:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1828:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1813:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1813:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1564:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1575:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1587:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1595:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1603:6:14",
														"type": ""
													}
												],
												"src": "1510:328:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1973:536:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2020:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2029:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2032:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2022:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2022:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2022:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1994:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2003:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1990:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1990:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2015:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1986:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:33:14"
															},
															"nodeType": "YulIf",
															"src": "1983:53:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2045:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2074:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2055:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2055:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2045:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2093:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2126:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2137:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2103:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2093:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2150:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2177:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2188:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2173:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2173:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2160:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2160:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2150:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2201:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2232:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2243:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2228:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2228:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2215:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2215:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2205:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2290:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2299:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2302:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2292:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2292:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2292:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2262:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2270:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2259:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:30:14"
															},
															"nodeType": "YulIf",
															"src": "2256:50:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2315:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2329:9:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2340:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2325:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2325:22:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2319:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2395:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2404:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2407:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2397:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2397:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2397:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2374:2:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2378:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2370:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2370:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2385:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2366:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2366:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2359:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2359:35:14"
															},
															"nodeType": "YulIf",
															"src": "2356:55:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2420:83:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2468:2:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2472:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2464:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2464:11:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2490:2:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2477:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2477:16:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2495:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2430:33:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:73:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1915:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1926:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1938:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1946:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1954:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1962:6:14",
														"type": ""
													}
												],
												"src": "1843:666:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2598:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2644:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2653:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2656:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2646:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2646:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2646:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2619:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2628:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2615:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2611:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:32:14"
															},
															"nodeType": "YulIf",
															"src": "2608:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2669:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2698:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2679:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2669:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2717:45:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2747:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2758:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2743:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2743:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2730:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:32:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2721:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2815:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2824:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2827:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2817:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2817:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2817:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2784:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2805:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2798:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2798:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2791:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2791:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2781:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2781:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2774:40:14"
															},
															"nodeType": "YulIf",
															"src": "2771:60:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2840:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2850:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2840:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2556:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2567:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2579:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2587:6:14",
														"type": ""
													}
												],
												"src": "2514:347:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2963:299:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3009:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3018:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3021:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3011:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3011:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3011:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2984:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3005:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2976:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:32:14"
															},
															"nodeType": "YulIf",
															"src": "2973:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3034:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3044:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3034:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3082:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3113:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3124:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3109:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3109:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3096:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3096:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3086:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3171:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3180:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3183:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3173:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3173:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3173:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3143:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3151:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3140:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:30:14"
															},
															"nodeType": "YulIf",
															"src": "3137:50:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3196:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3228:9:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3239:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3224:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3224:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3248:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3206:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3206:50:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3196:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2921:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2932:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2944:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2952:6:14",
														"type": ""
													}
												],
												"src": "2866:396:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3354:167:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3400:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3409:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3412:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3402:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3402:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3402:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3375:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3384:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3371:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3371:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3396:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3367:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3367:32:14"
															},
															"nodeType": "YulIf",
															"src": "3364:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3425:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3454:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3435:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3435:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3425:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3473:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3500:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3511:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3496:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3496:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3483:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3483:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3473:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3312:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3323:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3335:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3343:6:14",
														"type": ""
													}
												],
												"src": "3267:254:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:176:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3641:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3650:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3653:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3643:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3643:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3643:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3616:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3625:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3612:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3612:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3637:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3608:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3608:32:14"
															},
															"nodeType": "YulIf",
															"src": "3605:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3666:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3692:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3679:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3670:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3735:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3711:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3711:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3711:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3750:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3760:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3561:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3572:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3584:6:14",
														"type": ""
													}
												],
												"src": "3526:245:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3856:169:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3902:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3911:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3914:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3904:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3904:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3904:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3877:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3886:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3873:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3873:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3869:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3869:32:14"
															},
															"nodeType": "YulIf",
															"src": "3866:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3927:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3946:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3940:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3931:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3989:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3965:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3965:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4004:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4014:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4004:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3822:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3833:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3845:6:14",
														"type": ""
													}
												],
												"src": "3776:249:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4110:242:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4156:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4165:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4168:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4158:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4158:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4158:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4131:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4140:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4127:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4127:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4152:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4123:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4123:32:14"
															},
															"nodeType": "YulIf",
															"src": "4120:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4181:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4195:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4185:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4261:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4270:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4273:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4263:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4263:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4263:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4233:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4241:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4230:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4230:30:14"
															},
															"nodeType": "YulIf",
															"src": "4227:50:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4286:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4318:9:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4329:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4314:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4314:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4338:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4296:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:50:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4286:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4076:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4087:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4099:6:14",
														"type": ""
													}
												],
												"src": "4030:322:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4427:110:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4473:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4482:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4485:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4475:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4475:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4475:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4448:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4457:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4444:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4444:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4469:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4440:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:32:14"
															},
															"nodeType": "YulIf",
															"src": "4437:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4498:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4521:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4508:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4508:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4498:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4393:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4404:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4416:6:14",
														"type": ""
													}
												],
												"src": "4357:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:422:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4601:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4621:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4615:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4605:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4643:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4648:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4636:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4636:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4636:19:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4664:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4673:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4668:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4735:110:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4749:14:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4759:4:14",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "4753:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "4791:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4796:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4787:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4787:11:14"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "4800:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4783:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4783:20:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "4819:5:14"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "4826:1:14"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "4815:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4815:13:14"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "4830:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4811:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4811:22:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4805:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4805:29:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4776:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4776:59:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4776:59:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4694:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4697:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4691:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4691:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4705:21:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4707:17:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4716:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4719:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4712:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4712:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4707:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4687:3:14",
																"statements": []
															},
															"src": "4683:162:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4879:62:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "4908:3:14"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "4913:6:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4904:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4904:16:14"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4922:4:14",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4900:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4900:27:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4929:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4893:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4893:38:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4893:38:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4860:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4863:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4857:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4857:13:14"
															},
															"nodeType": "YulIf",
															"src": "4854:87:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4950:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4965:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4978:6:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4986:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4974:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4974:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4995:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4991:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4991:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4970:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4970:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4961:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4961:39:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5002:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4957:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4957:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4950:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4568:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4575:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4583:3:14",
														"type": ""
													}
												],
												"src": "4542:471:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5283:1000:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5293:12:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5304:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "5297:3:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5314:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5337:6:14"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "5331:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5331:13:14"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "5318:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5353:17:14",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "5367:3:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5357:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5379:11:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5389:1:14",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5383:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5399:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5413:2:14"
																	},
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "5417:9:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5409:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:18:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5399:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5436:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "5466:9:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5477:2:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5462:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5462:18:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5440:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5519:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5521:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5535:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5543:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5531:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5531:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5521:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5499:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5492:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5492:26:14"
															},
															"nodeType": "YulIf",
															"src": "5489:61:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5559:12:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5569:2:14",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5563:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5630:115:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "5651:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5660:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5665:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5656:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5656:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5644:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5644:33:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5644:33:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5697:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5700:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5690:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5690:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5690:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "5725:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5730:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5718:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5718:17:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5718:17:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5586:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5609:6:14"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5617:2:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5606:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5606:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5583:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5583:38:14"
															},
															"nodeType": "YulIf",
															"src": "5580:165:14"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5795:97:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5816:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "5825:9:14"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5840:3:14",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "5836:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5836:8:14"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "5821:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5821:24:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "5809:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5809:37:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5809:37:14"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "5859:23:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5870:3:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5875:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5866:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5866:16:14"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "5859:3:14"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5788:104:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5793:1:14",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5908:313:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5922:52:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
																							"src": "5967:6:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5937:29:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5937:37:14"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "5926:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5987:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5996:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5991:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6064:111:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "6093:3:14"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "6098:1:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6089:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6089:11:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "6108:7:14"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "6102:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6102:14:14"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "6082:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6082:35:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6082:35:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6134:27:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "6149:7:14"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "6158:2:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6145:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6145:16:14"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "6134:7:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6021:1:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6024:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6018:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6018:13:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6032:19:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6034:15:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6043:1:14"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "6046:2:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6039:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6039:10:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6034:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6014:3:14",
																					"statements": []
																				},
																				"src": "6010:165:14"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6188:23:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "6199:3:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6204:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6195:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6195:16:14"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "6188:3:14"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5901:320:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5906:1:14",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"name": "outOfPlaceEncoding",
																"nodeType": "YulIdentifier",
																"src": "5761:18:14"
															},
															"nodeType": "YulSwitch",
															"src": "5754:467:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "6237:3:14"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6242:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6230:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6230:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6230:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6258:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "6269:3:14"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6274:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6265:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6265:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6258:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr_t_uint256_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5251:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5256:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5264:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5275:3:14",
														"type": ""
													}
												],
												"src": "5018:1265:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6389:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6399:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6411:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6422:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6407:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6407:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6399:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6441:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6456:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6472:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6477:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6468:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6468:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6481:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6464:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6464:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6452:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6452:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6434:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6434:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6358:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6369:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6380:4:14",
														"type": ""
													}
												],
												"src": "6288:203:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6699:285:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6709:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6727:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6732:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6723:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6723:11:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6736:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6719:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6719:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6713:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6754:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6769:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6777:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6765:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6765:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6747:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6747:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6747:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6801:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6812:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6797:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6797:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6821:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6829:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6817:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6817:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6790:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6790:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6790:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6853:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6864:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6849:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6849:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6869:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6842:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6842:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6896:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6907:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6892:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6892:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6912:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6885:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6885:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6885:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6925:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6950:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6962:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6973:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6933:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6933:45:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6925:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6644:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6655:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6663:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6671:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6679:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6690:4:14",
														"type": ""
													}
												],
												"src": "6496:488:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7084:92:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7094:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7106:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7117:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7102:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7102:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7094:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7136:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7161:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7154:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7154:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7147:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7147:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7129:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7129:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7129:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7053:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7064:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7075:4:14",
														"type": ""
													}
												],
												"src": "6989:187:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7302:98:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7319:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7330:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7312:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7312:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7312:21:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7342:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7379:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7390:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7375:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7375:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7350:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7350:44:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7342:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7271:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7282:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7293:4:14",
														"type": ""
													}
												],
												"src": "7181:219:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7579:240:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7596:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7607:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7589:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7589:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7630:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7641:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7626:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7626:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7646:2:14",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7619:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7619:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7619:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7669:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7680:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7665:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7665:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7685:34:14",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7658:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7658:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7658:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7740:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7751:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7736:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7736:18:14"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7756:20:14",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7729:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7729:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7729:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7786:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7798:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7809:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7794:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7786:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7556:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7570:4:14",
														"type": ""
													}
												],
												"src": "7405:414:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7998:228:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8015:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8026:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8008:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8008:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8008:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8049:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8060:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8045:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8045:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8065:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8038:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8038:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8038:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8088:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8099:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8084:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8084:18:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8104:34:14",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8077:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8077:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8077:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8159:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8170:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:18:14"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8175:8:14",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8148:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:36:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8148:36:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8193:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8205:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8216:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8201:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8201:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8193:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7975:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7989:4:14",
														"type": ""
													}
												],
												"src": "7824:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8405:227:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8422:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8433:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8415:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8415:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8415:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8456:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8467:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8452:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8452:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8472:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8445:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8445:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8445:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8495:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8506:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8491:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8491:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8511:34:14",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8484:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8484:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8484:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8566:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8577:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8562:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8562:18:14"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8582:7:14",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8555:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8555:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8555:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8599:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8611:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8622:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8607:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8607:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8599:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8382:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8396:4:14",
														"type": ""
													}
												],
												"src": "8231:401:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8811:178:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8828:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8839:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8821:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8821:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8821:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8862:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8873:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8858:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8858:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8878:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8851:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8851:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8851:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8901:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8912:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8897:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8897:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8917:30:14",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8890:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8890:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8890:58:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8957:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8969:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8980:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8965:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8965:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8957:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8788:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8802:4:14",
														"type": ""
													}
												],
												"src": "8637:352:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:226:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9185:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9196:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9178:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9178:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9178:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9219:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9230:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9215:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9215:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9235:2:14",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9208:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9208:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9208:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9258:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9269:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9254:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9254:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9274:34:14",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9247:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9247:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9247:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9329:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9340:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9325:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9325:18:14"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9345:6:14",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9318:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9318:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9318:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9361:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9373:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9384:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9369:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9369:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9361:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9145:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9159:4:14",
														"type": ""
													}
												],
												"src": "8994:400:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9573:175:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9590:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9601:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9583:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9583:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9583:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9624:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9635:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9620:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9620:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9640:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9613:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9613:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9613:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9663:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9674:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9659:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9659:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9679:27:14",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9652:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:55:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9652:55:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9716:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9728:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9739:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9724:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9716:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9550:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9564:4:14",
														"type": ""
													}
												],
												"src": "9399:349:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9927:234:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9944:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9955:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9937:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9937:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9937:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9978:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9989:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9974:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9974:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9994:2:14",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9967:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9967:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9967:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10017:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10028:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10013:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10013:18:14"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10033:34:14",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10006:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10006:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10006:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10088:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10099:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10084:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10084:18:14"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10104:14:14",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10077:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10077:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10077:42:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10128:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10140:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10151:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10136:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10136:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10128:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9904:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9918:4:14",
														"type": ""
													}
												],
												"src": "9753:408:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10340:246:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10357:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10368:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10350:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10350:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10350:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10391:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10402:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10387:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10387:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10407:2:14",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10380:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10380:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10380:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10430:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10441:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10426:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10426:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10446:34:14",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10419:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10419:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10419:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10501:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10512:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10497:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10497:18:14"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10517:26:14",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10490:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10490:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10490:54:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10553:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10565:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10576:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10561:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10561:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10553:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10317:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10331:4:14",
														"type": ""
													}
												],
												"src": "10166:420:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10765:232:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10782:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10793:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10775:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10775:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10816:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10827:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10812:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10812:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10832:2:14",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10805:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10805:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10805:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10855:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10866:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10851:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10851:18:14"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10871:34:14",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10844:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10844:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10844:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10926:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10937:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10922:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10922:18:14"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10942:12:14",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10915:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10915:40:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10915:40:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10964:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10976:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10987:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10972:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10972:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10964:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10742:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10756:4:14",
														"type": ""
													}
												],
												"src": "10591:406:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11176:231:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11193:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11204:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11186:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11186:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11186:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11227:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11238:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11223:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11223:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11243:2:14",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11216:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11216:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11216:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11266:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11277:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11262:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11262:18:14"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11282:34:14",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11255:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11255:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11255:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11337:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11348:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11333:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11333:18:14"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11353:11:14",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11326:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:39:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11326:39:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11374:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11386:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11397:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11382:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11382:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11374:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11153:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11167:4:14",
														"type": ""
													}
												],
												"src": "11002:405:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11586:236:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11603:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11614:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11596:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11596:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11596:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11637:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11648:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11633:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11633:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11653:2:14",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11626:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11626:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11626:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11676:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11687:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11672:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11672:18:14"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11692:34:14",
																		"type": "",
																		"value": "ERC721URIStorage: URI set of non"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11665:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11665:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11665:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11747:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11758:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11743:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11743:18:14"
																	},
																	{
																		"hexValue": "6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11763:16:14",
																		"type": "",
																		"value": "existent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11736:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11736:44:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11736:44:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11789:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11801:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11812:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11797:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11797:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11789:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11563:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11577:4:14",
														"type": ""
													}
												],
												"src": "11412:410:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12001:182:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12018:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12029:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12011:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12011:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12011:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12052:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12063:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12048:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12048:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12068:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12041:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12041:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12041:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12091:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12102:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12087:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12087:18:14"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12107:34:14",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12080:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12080:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12080:62:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12151:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12163:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12174:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12159:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12159:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12151:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11978:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11992:4:14",
														"type": ""
													}
												],
												"src": "11827:356:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12362:234:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12379:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12390:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12372:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12372:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12372:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12413:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12424:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12409:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12409:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12429:2:14",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12402:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12402:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12402:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12452:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12463:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12448:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12448:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12468:34:14",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12441:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12441:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12441:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12523:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12534:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12519:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12519:18:14"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12539:14:14",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12512:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12512:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12512:42:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12563:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12575:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12586:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12571:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12571:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12563:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12339:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12353:4:14",
														"type": ""
													}
												],
												"src": "12188:408:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12775:182:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12792:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12803:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12785:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12785:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12785:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12826:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12837:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12822:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12822:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12842:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12815:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12815:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12815:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12865:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12876:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12861:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12861:18:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12881:34:14",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12854:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12854:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12854:62:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12925:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12937:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12948:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12933:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12933:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12925:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12752:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12766:4:14",
														"type": ""
													}
												],
												"src": "12601:356:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13136:223:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13153:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13164:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13146:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13146:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13146:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13187:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13198:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13183:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13183:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13203:2:14",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13176:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13176:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13176:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13226:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13237:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13222:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13222:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13242:34:14",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13215:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13215:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13215:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13297:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13308:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13293:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13293:18:14"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13313:3:14",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13286:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13286:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13286:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13326:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13338:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13349:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13334:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13334:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13326:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13113:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13127:4:14",
														"type": ""
													}
												],
												"src": "12962:397:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13538:239:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13555:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13566:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13548:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13548:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13548:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13589:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13600:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13585:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13585:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13605:2:14",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13578:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13578:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13578:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13628:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13639:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13624:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13624:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13644:34:14",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13617:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13617:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13617:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13699:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13710:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13695:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13695:18:14"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13715:19:14",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13688:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13688:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13688:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13744:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13756:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13767:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13752:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13752:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13744:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13515:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13529:4:14",
														"type": ""
													}
												],
												"src": "13364:413:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13956:238:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13973:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13984:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13966:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13966:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13966:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14007:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14018:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14003:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14003:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14023:2:14",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13996:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13996:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13996:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14046:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14057:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14042:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14042:18:14"
																	},
																	{
																		"hexValue": "4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14062:34:14",
																		"type": "",
																		"value": "ERC721Burnable: caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14035:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14035:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14035:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14117:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14128:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14113:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14113:18:14"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14133:18:14",
																		"type": "",
																		"value": "ner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14106:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14106:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14106:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14161:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14173:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14184:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14169:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14169:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14161:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13933:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13947:4:14",
														"type": ""
													}
												],
												"src": "13782:412:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14300:76:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14310:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14322:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14333:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14318:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14318:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14310:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14352:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14363:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14345:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14345:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14345:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14269:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14280:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14291:4:14",
														"type": ""
													}
												],
												"src": "14199:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14437:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14454:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14457:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14447:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14447:14:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14447:14:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14470:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14488:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14491:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "14478:9:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14478:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14470:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14420:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14428:4:14",
														"type": ""
													}
												],
												"src": "14381:121:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14555:80:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14582:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14584:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14584:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14584:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14571:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14578:1:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14574:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14574:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14568:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14568:13:14"
															},
															"nodeType": "YulIf",
															"src": "14565:39:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14613:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14624:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14627:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14620:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14620:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14613:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14538:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14541:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14547:3:14",
														"type": ""
													}
												],
												"src": "14507:128:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14689:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14711:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14713:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14713:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14713:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14705:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14708:1:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14702:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14702:8:14"
															},
															"nodeType": "YulIf",
															"src": "14699:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14742:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14754:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14757:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14750:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14750:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14742:4:14"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14671:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14674:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14680:4:14",
														"type": ""
													}
												],
												"src": "14640:125:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14825:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14835:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14849:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14852:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14845:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14845:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14835:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14866:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14896:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14902:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14892:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14892:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14870:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14943:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14945:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14959:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14967:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14955:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14955:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14945:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14923:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14916:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14916:26:14"
															},
															"nodeType": "YulIf",
															"src": "14913:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15033:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15054:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15061:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15066:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "15057:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15057:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15047:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15047:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15047:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15098:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15101:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15091:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15091:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15091:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15126:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15129:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15119:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15119:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15119:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14989:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15012:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15020:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "15009:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15009:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14986:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14986:38:14"
															},
															"nodeType": "YulIf",
															"src": "14983:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14805:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14814:6:14",
														"type": ""
													}
												],
												"src": "14770:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15187:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15204:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15211:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15216:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15207:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15207:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15197:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15197:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15197:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15244:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15247:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15237:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15237:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15237:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15268:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15271:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15261:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15261:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15261:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15155:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15319:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15336:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15343:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15348:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15339:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15339:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15329:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15329:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15329:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15376:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15379:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15369:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15369:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15369:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15400:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15403:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15393:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15393:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15393:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15287:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15463:87:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15528:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15537:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15540:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15530:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15530:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15530:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15486:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15497:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15508:3:14",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15513:10:14",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "15504:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15504:20:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "15493:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15493:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15483:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15483:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15476:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15476:51:14"
															},
															"nodeType": "YulIf",
															"src": "15473:71:14"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15452:5:14",
														"type": ""
													}
												],
												"src": "15419:131:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr_t_uint256_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        mstore(ret, value1)\n        end := add(ret, _2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI set of non\")\n        mstore(add(headStart, 96), \"existent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC721Burnable: caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x586 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST PUSH2 0x181 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x220 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x78C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x181 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x161 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x899 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x323 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x33E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x353 SWAP1 PUSH2 0x183B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37F SWAP1 PUSH2 0x183B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B DUP3 PUSH2 0x68E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x505 JUMPI POP PUSH2 0x505 DUP2 CALLER PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH2 0x581 DUP4 DUP4 PUSH2 0x9BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x591 CALLER JUMPDEST DUP3 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x581 DUP4 DUP4 DUP4 PUSH2 0xB24 JUMP JUMPDEST PUSH2 0x581 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x5DC CALLER PUSH2 0x58B JUMP JUMPDEST PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH2 0x64A DUP2 PUSH2 0xCC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1786 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x68A SWAP1 PUSH1 0x9 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x122E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x7C0 PUSH1 0x0 PUSH2 0xCC9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x353 SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x68A CALLER DUP4 DUP4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x7E6 CALLER DUP4 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x80E DUP5 DUP5 DUP5 DUP5 PUSH2 0xDEA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x82A SWAP3 SWAP2 SWAP1 PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x875 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x885 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x88F DUP4 DUP3 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x581 DUP2 DUP4 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x8A6 SWAP1 PUSH2 0x183B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D2 SWAP1 PUSH2 0x183B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x91F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x91F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x902 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH2 0x64A DUP2 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x9F4 DUP3 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB1 DUP4 PUSH2 0x68E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xAF8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xB1C JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB11 DUP5 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB37 DUP3 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH2 0xC08 PUSH1 0x0 DUP3 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xC31 SWAP1 DUP5 SWAP1 PUSH2 0x1824 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xC5F SWAP1 DUP5 SWAP1 PUSH2 0x180C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x64A DUP2 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xDF5 DUP5 DUP5 DUP5 PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xE01 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x68A DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x101E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x581 SWAP3 DUP5 ADD SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH2 0xEDA DUP2 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xEF3 SWAP1 PUSH2 0x183B JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x64A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x64A SWAP2 PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1013 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xF55 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF9F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF9C SWAP2 DUP2 ADD SWAP1 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFF9 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xFF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1734 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xB1C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1028 DUP4 DUP4 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x1035 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x68E JUMP JUMPDEST SWAP1 POP PUSH2 0x1069 PUSH1 0x0 DUP4 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1092 SWAP1 DUP5 SWAP1 PUSH2 0x1824 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1142 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x44B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x11D0 SWAP1 DUP5 SWAP1 PUSH2 0x180C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x123A SWAP1 PUSH2 0x183B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x125C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x12A2 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1275 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x12A2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x12A2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x12A2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1287 JUMP JUMPDEST POP PUSH2 0x12AE SWAP3 SWAP2 POP PUSH2 0x12E8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x12BE SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x12CE JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x64A SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1318 JUMPI PUSH2 0x1318 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1340 JUMPI PUSH2 0x1340 PUSH2 0x188C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x138A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13AF DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x12FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13AF DUP3 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13ED DUP4 PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP PUSH2 0x13FB PUSH1 0x20 DUP5 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1422 DUP5 PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP PUSH2 0x1430 PUSH1 0x20 DUP6 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145F DUP6 PUSH2 0x1373 JUMP JUMPDEST SWAP4 POP PUSH2 0x146D PUSH1 0x20 DUP7 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x14A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B0 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x12FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14D8 DUP4 PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x150B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1514 DUP4 PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x153C DUP6 DUP3 DUP7 ADD PUSH2 0x138F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1562 DUP4 PUSH2 0x1373 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13AF DUP2 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x13AF DUP2 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1C DUP5 DUP3 DUP6 ADD PUSH2 0x138F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x161E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1602 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1630 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x1661 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x1681 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1695 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x16A6 JUMPI PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x16CB JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x16B2 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP8 DUP6 MSTORE POP POP POP SWAP4 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1717 SWAP1 DUP4 ADD DUP5 PUSH2 0x15F8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13AF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x181F JUMPI PUSH2 0x181F PUSH2 0x1876 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1836 JUMPI PUSH2 0x1836 PUSH2 0x1876 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x184F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1870 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE4 0xD6 NOT 0xC3 0xB4 0xCE STATICCALL 0xE6 PUSH4 0xE92D539C DUP2 0x1F BALANCE 0x2F DUP3 0xE3 0xD8 ADDMOD SLT EXTCODEHASH 0x5D 0x4F SWAP12 PUSH27 0x776CB34264736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "378:1022:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:1;;;;;;:::i;:::-;;:::i;:::-;;;7154:14:14;;7147:22;7129:41;;7117:2;7102:18;1570:300:1;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;6452:32:14;;;6434:51;;6422:2;6407:18;4000:217:1;6288:203:14;3538:401:1;;;;;;:::i;:::-;;:::i;:::-;;4727:330;;;;;;:::i;:::-;;:::i;5123:179::-;;;;;;:::i;:::-;;:::i;529:241:4:-;;;;;;:::i;:::-;;:::i;1077:99:13:-;;;;;;:::i;:::-;;:::i;2191:235:1:-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;:::-;;;14345:25:14;;;14333:2;14318:18;1929:205:1;14199:177:14;1668:101:0;;;:::i;1036:85::-;1108:6;;-1:-1:-1;;;;;1108:6:0;1036:85;;2650:102:1;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;5368:320::-;;;;;;:::i;:::-;;:::i;1182:216:13:-;;;;;;:::i;:::-;;:::i;628:231::-;;;;;;:::i;:::-;;:::i;547:26::-;;;:::i;4503:162:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4623:25:1;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4503:162;1918:198:0;;;;;;:::i;:::-;;:::i;1570:300:1:-;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:11;;;1827:36:1;1688:175;1570:300;-1:-1:-1;;1570:300:1:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:1;4095:73;;;;-1:-1:-1;;;4095:73:1;;12390:2:14;4095:73:1;;;12372:21:14;12429:2;12409:18;;;12402:30;12468:34;12448:18;;;12441:62;-1:-1:-1;;;12519:18:14;;;12512:42;12571:19;;4095:73:1;;;;;;;;;-1:-1:-1;4186:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:1;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:1;:2;-1:-1:-1;;;;;3675:11:1;;;3667:57;;;;-1:-1:-1;;;3667:57:1;;13164:2:14;3667:57:1;;;13146:21:14;13203:2;13183:18;;;13176:30;13242:34;13222:18;;;13215:62;-1:-1:-1;;;13293:18:14;;;13286:31;13334:19;;3667:57:1;12962:397:14;3667:57:1;719:10:8;-1:-1:-1;;;;;3756:21:1;;;;:62;;-1:-1:-1;3781:37:1;3798:5;719:10:8;4503:162:1;:::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:1;;10368:2:14;3735:165:1;;;10350:21:14;10407:2;10387:18;;;10380:30;10446:34;10426:18;;;10419:62;10517:26;10497:18;;;10490:54;10561:19;;3735:165:1;10166:420:14;3735:165:1;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;4727:330::-;4916:41;719:10:8;4935:12:1;4949:7;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:1;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;5123:179::-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;529:241:4:-;645:41;719:10:8;664:12:4;640:96:8;645:41:4;637:102;;;;-1:-1:-1;;;637:102:4;;13984:2:14;637:102:4;;;13966:21:14;14023:2;14003:18;;;13996:30;14062:34;14042:18;;;14035:62;-1:-1:-1;;;14113:18:14;;;14106:46;14169:19;;637:102:4;13782:412:14;637:102:4;749:14;755:7;749:5;:14::i;:::-;529:241;:::o;1077:99:13:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1147:22:13;;::::1;::::0;:12:::1;::::0;:22:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1077:99:::0;:::o;2191:235:1:-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:1;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:1;;11204:2:14;2324:73:1;;;11186:21:14;11243:2;11223:18;;;11216:30;11282:34;11262:18;;;11255:62;-1:-1:-1;;;11333:18:14;;;11326:39;11382:19;;2324:73:1;11002:405:14;1929:205:1;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:74;;;;-1:-1:-1;;;2020:74:1;;10793:2:14;2020:74:1;;;10775:21:14;10832:2;10812:18;;;10805:30;10871:34;10851:18;;;10844:62;-1:-1:-1;;;10922:18:14;;;10915:40;10972:19;;2020:74:1;10591:406:14;2020:74:1;-1:-1:-1;;;;;;2111:16:1;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2650:102:1:-;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;719:10:8;4411:8:1;4421;4378:18;:52::i;5368:320::-;5537:41;719:10:8;5570:7:1;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:1;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;:::-;5368:320;;;;:::o;1182:216:13:-;1305:13;1366:12;1379:7;1349:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1335:56;;1182:216;;;:::o;628:231::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;704:15:13::1;722:25;:15;918:14:9::0;;827:112;722:25:13::1;704:43;;757:27;:15;1032:19:9::0;;1050:1;1032:19;;;945:123;757:27:13::1;794:22;804:2;808:7;794:9;:22::i;:::-;826:26;839:7;848:3;826:12;:26::i;547:::-:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;8026:2:14;1998:73:0::1;::::0;::::1;8008:21:14::0;8065:2;8045:18;;;8038:30;8104:34;8084:18;;;8077:62;-1:-1:-1;;;8155:18:14;;;8148:36;8201:19;;1998:73:0::1;7824:402:14::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;11169:171:1:-:0;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:1;-1:-1:-1;;;;;11243:29:1;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:1;;;;;;;;;;;11169:171;;:::o;7443:344::-;7536:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:1;7552:73;;;;-1:-1:-1;;;7552:73:1;;9955:2:14;7552:73:1;;;9937:21:14;9994:2;9974:18;;;9967:30;10033:34;10013:18;;;10006:62;-1:-1:-1;;;10084:18:14;;;10077:42;10136:19;;7552:73:1;9753:408:14;7552:73:1;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:1;:7;-1:-1:-1;;;;;7692:16:1;;:52;;;-1:-1:-1;;;;;;4623:25:1;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7712:32;7692:87;;;;7772:7;-1:-1:-1;;;;;7748:31:1;:20;7760:7;7748:11;:20::i;:::-;-1:-1:-1;;;;;7748:31:1;;7692:87;7684:96;7443:344;-1:-1:-1;;;;7443:344:1:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:1;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:1;;10572:81;;;;-1:-1:-1;;;10572:81:1;;8433:2:14;10572:81:1;;;8415:21:14;8472:2;8452:18;;;8445:30;8511:34;8491:18;;;8484:62;-1:-1:-1;;;8562:18:14;;;8555:35;8607:19;;10572:81:1;8231:401:14;10572:81:1;-1:-1:-1;;;;;10671:16:1;;10663:65;;;;-1:-1:-1;;;10663:65:1;;9196:2:14;10663:65:1;;;9178:21:14;9235:2;9215:18;;;9208:30;9274:34;9254:18;;;9247:62;-1:-1:-1;;;9325:18:14;;;9318:34;9369:19;;10663:65:1;8994:400:14;10663:65:1;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:1;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:1;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:1;-1:-1:-1;;;;;10938:21:1;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;933:113:13:-;1019:20;1031:7;1019:11;:20::i;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;11475:307:1:-;11625:8;-1:-1:-1;;;;;11616:17:1;:5;-1:-1:-1;;;;;11616:17:1;;;11608:55;;;;-1:-1:-1;;;11608:55:1;;9601:2:14;11608:55:1;;;9583:21:14;9640:2;9620:18;;;9613:30;9679:27;9659:18;;;9652:55;9724:18;;11608:55:1;9399:349:14;11608:55:1;-1:-1:-1;;;;;11673:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:1;;;;;;;;;;11734:41;;7129::14;;;11734::1;;7102:18:14;11734:41:1;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:1;;;;;;;:::i;8117:108::-;8192:26;8202:2;8206:7;8192:26;;;;;;;;;;;;:9;:26::i;1277:214:5:-;7225:4:1;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:1;1368:75:5;;;;-1:-1:-1;;;1368:75:5;;11614:2:14;1368:75:5;;;11596:21:14;11653:2;11633:18;;;11626:30;11692:34;11672:18;;;11665:62;-1:-1:-1;;;11743:18:14;;;11736:44;11797:19;;1368:75:5;11412:410:14;1368:75:5;1453:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;1708:200::-;1776:20;1788:7;1776:11;:20::i;:::-;1817:19;;;;:10;:19;;;;;1811:33;;;;;:::i;:::-;:38;;-1:-1:-1;1807:95:5;;1872:19;;;;:10;:19;;;;;1865:26;;;:::i;12335:778:1:-;12485:4;-1:-1:-1;;;;;12505:13:1;;1465:19:7;:23;12501:606:1;;12540:72;;-1:-1:-1;;;12540:72:1;;-1:-1:-1;;;;;12540:36:1;;;;;:72;;719:10:8;;12591:4:1;;12597:7;;12606:5;;12540:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:1;;;;;;;;-1:-1:-1;;12540:72:1;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12779:13:1;;12775:266;;12821:60;;-1:-1:-1;;;12821:60:1;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:1;-1:-1:-1;;;12662:51:1;;-1:-1:-1;12655:58:1;;12501:606;-1:-1:-1;13092:4:1;12335:778;;;;;;:::o;8446:311::-;8571:18;8577:2;8581:7;8571:5;:18::i;:::-;8620:54;8651:1;8655:2;8659:7;8668:5;8620:22;:54::i;:::-;8599:151;;;;-1:-1:-1;;;8599:151:1;;;;;;;:::i;9723:406::-;9782:13;9798:23;9813:7;9798:14;:23::i;:::-;9782:39;;9918:29;9935:1;9939:7;9918:8;:29::i;:::-;-1:-1:-1;;;;;9958:16:1;;;;;;:9;:16;;;;;:21;;9978:1;;9958:16;:21;;9978:1;;9958:21;:::i;:::-;;;;-1:-1:-1;;9996:16:1;;;;:7;:16;;;;;;9989:23;;-1:-1:-1;;;;;;9989:23:1;;;10028:36;10004:7;;9996:16;-1:-1:-1;;;;;10028:36:1;;;;;9996:16;;10028:36;1147:22:13::1;1077:99:::0;:::o;9079:427:1:-;-1:-1:-1;;;;;9158:16:1;;9150:61;;;;-1:-1:-1;;;9150:61:1;;12029:2:14;9150:61:1;;;12011:21:14;;;12048:18;;;12041:30;12107:34;12087:18;;;12080:62;12159:18;;9150:61:1;11827:356:14;9150:61:1;7225:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:1;:30;9221:58;;;;-1:-1:-1;;;9221:58:1;;8839:2:14;9221:58:1;;;8821:21:14;8878:2;8858:18;;;8851:30;8917;8897:18;;;8890:58;8965:18;;9221:58:1;8637:352:14;9221:58:1;-1:-1:-1;;;;;9346:13:1;;;;;;:9;:13;;;;;:18;;9363:1;;9346:13;:18;;9363:1;;9346:18;:::i;:::-;;;;-1:-1:-1;;9374:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9374:21:1;-1:-1:-1;;;;;9374:21:1;;;;;;;;9411:33;;9374:16;;;9411:33;;9374:16;;9411:33;1147:22:13::1;1077:99:::0;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:631:14;78:5;108:18;149:2;141:6;138:14;135:40;;;155:18;;:::i;:::-;230:2;224:9;198:2;284:15;;-1:-1:-1;;280:24:14;;;306:2;276:33;272:42;260:55;;;330:18;;;350:22;;;327:46;324:72;;;376:18;;:::i;:::-;416:10;412:2;405:22;445:6;436:15;;475:6;467;460:22;515:3;506:6;501:3;497:16;494:25;491:45;;;532:1;529;522:12;491:45;582:6;577:3;570:4;562:6;558:17;545:44;637:1;630:4;621:6;613;609:19;605:30;598:41;;;;14:631;;;;;:::o;650:173::-;718:20;;-1:-1:-1;;;;;767:31:14;;757:42;;747:70;;813:1;810;803:12;747:70;650:173;;;:::o;828:221::-;871:5;924:3;917:4;909:6;905:17;901:27;891:55;;942:1;939;932:12;891:55;964:79;1039:3;1030:6;1017:20;1010:4;1002:6;998:17;964:79;:::i;:::-;955:88;828:221;-1:-1:-1;;;828:221:14:o;1054:186::-;1113:6;1166:2;1154:9;1145:7;1141:23;1137:32;1134:52;;;1182:1;1179;1172:12;1134:52;1205:29;1224:9;1205:29;:::i;1245:260::-;1313:6;1321;1374:2;1362:9;1353:7;1349:23;1345:32;1342:52;;;1390:1;1387;1380:12;1342:52;1413:29;1432:9;1413:29;:::i;:::-;1403:39;;1461:38;1495:2;1484:9;1480:18;1461:38;:::i;:::-;1451:48;;1245:260;;;;;:::o;1510:328::-;1587:6;1595;1603;1656:2;1644:9;1635:7;1631:23;1627:32;1624:52;;;1672:1;1669;1662:12;1624:52;1695:29;1714:9;1695:29;:::i;:::-;1685:39;;1743:38;1777:2;1766:9;1762:18;1743:38;:::i;:::-;1733:48;;1828:2;1817:9;1813:18;1800:32;1790:42;;1510:328;;;;;:::o;1843:666::-;1938:6;1946;1954;1962;2015:3;2003:9;1994:7;1990:23;1986:33;1983:53;;;2032:1;2029;2022:12;1983:53;2055:29;2074:9;2055:29;:::i;:::-;2045:39;;2103:38;2137:2;2126:9;2122:18;2103:38;:::i;:::-;2093:48;;2188:2;2177:9;2173:18;2160:32;2150:42;;2243:2;2232:9;2228:18;2215:32;2270:18;2262:6;2259:30;2256:50;;;2302:1;2299;2292:12;2256:50;2325:22;;2378:4;2370:13;;2366:27;-1:-1:-1;2356:55:14;;2407:1;2404;2397:12;2356:55;2430:73;2495:7;2490:2;2477:16;2472:2;2468;2464:11;2430:73;:::i;:::-;2420:83;;;1843:666;;;;;;;:::o;2514:347::-;2579:6;2587;2640:2;2628:9;2619:7;2615:23;2611:32;2608:52;;;2656:1;2653;2646:12;2608:52;2679:29;2698:9;2679:29;:::i;:::-;2669:39;;2758:2;2747:9;2743:18;2730:32;2805:5;2798:13;2791:21;2784:5;2781:32;2771:60;;2827:1;2824;2817:12;2771:60;2850:5;2840:15;;;2514:347;;;;;:::o;2866:396::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3124:2;3113:9;3109:18;3096:32;3151:18;3143:6;3140:30;3137:50;;;3183:1;3180;3173:12;3137:50;3206;3248:7;3239:6;3228:9;3224:22;3206:50;:::i;:::-;3196:60;;;2866:396;;;;;:::o;3267:254::-;3335:6;3343;3396:2;3384:9;3375:7;3371:23;3367:32;3364:52;;;3412:1;3409;3402:12;3364:52;3435:29;3454:9;3435:29;:::i;:::-;3425:39;3511:2;3496:18;;;;3483:32;;-1:-1:-1;;;3267:254:14:o;3526:245::-;3584:6;3637:2;3625:9;3616:7;3612:23;3608:32;3605:52;;;3653:1;3650;3643:12;3605:52;3692:9;3679:23;3711:30;3735:5;3711:30;:::i;3776:249::-;3845:6;3898:2;3886:9;3877:7;3873:23;3869:32;3866:52;;;3914:1;3911;3904:12;3866:52;3946:9;3940:16;3965:30;3989:5;3965:30;:::i;4030:322::-;4099:6;4152:2;4140:9;4131:7;4127:23;4123:32;4120:52;;;4168:1;4165;4158:12;4120:52;4208:9;4195:23;4241:18;4233:6;4230:30;4227:50;;;4273:1;4270;4263:12;4227:50;4296;4338:7;4329:6;4318:9;4314:22;4296:50;:::i;4357:180::-;4416:6;4469:2;4457:9;4448:7;4444:23;4440:32;4437:52;;;4485:1;4482;4475:12;4437:52;-1:-1:-1;4508:23:14;;4357:180;-1:-1:-1;4357:180:14:o;4542:471::-;4583:3;4621:5;4615:12;4648:6;4643:3;4636:19;4673:1;4683:162;4697:6;4694:1;4691:13;4683:162;;;4759:4;4815:13;;;4811:22;;4805:29;4787:11;;;4783:20;;4776:59;4712:12;4683:162;;;4863:6;4860:1;4857:13;4854:87;;;4929:1;4922:4;4913:6;4908:3;4904:16;4900:27;4893:38;4854:87;-1:-1:-1;4995:2:14;4974:15;-1:-1:-1;;4970:29:14;4961:39;;;;5002:4;4957:50;;4542:471;-1:-1:-1;;4542:471:14:o;5018:1265::-;5275:3;5304:1;5337:6;5331:13;5367:3;5389:1;5417:9;5413:2;5409:18;5399:28;;5477:2;5466:9;5462:18;5499;5489:61;;5543:4;5535:6;5531:17;5521:27;;5489:61;5569:2;5617;5609:6;5606:14;5586:18;5583:38;5580:165;;;-1:-1:-1;;;5644:33:14;;5700:4;5697:1;5690:15;5730:4;5651:3;5718:17;5580:165;5761:18;5788:104;;;;5906:1;5901:320;;;;5754:467;;5788:104;-1:-1:-1;;5821:24:14;;5809:37;;5866:16;;;;-1:-1:-1;5788:104:14;;5901:320;14454:1;14447:14;;;14491:4;14478:18;;5996:1;6010:165;6024:6;6021:1;6018:13;6010:165;;;6102:14;;6089:11;;;6082:35;6145:16;;;;6039:10;;6010:165;;;6014:3;;6204:6;6199:3;6195:16;6188:23;;5754:467;-1:-1:-1;6230:19:14;;;-1:-1:-1;;;6265:12:14;;;5018:1265;-1:-1:-1;;;;5018:1265:14:o;6496:488::-;-1:-1:-1;;;;;6765:15:14;;;6747:34;;6817:15;;6812:2;6797:18;;6790:43;6864:2;6849:18;;6842:34;;;6912:3;6907:2;6892:18;;6885:31;;;6690:4;;6933:45;;6958:19;;6950:6;6933:45;:::i;:::-;6925:53;6496:488;-1:-1:-1;;;;;;6496:488:14:o;7181:219::-;7330:2;7319:9;7312:21;7293:4;7350:44;7390:2;7379:9;7375:18;7367:6;7350:44;:::i;7405:414::-;7607:2;7589:21;;;7646:2;7626:18;;;7619:30;7685:34;7680:2;7665:18;;7658:62;-1:-1:-1;;;7751:2:14;7736:18;;7729:48;7809:3;7794:19;;7405:414::o;12601:356::-;12803:2;12785:21;;;12822:18;;;12815:30;12881:34;12876:2;12861:18;;12854:62;12948:2;12933:18;;12601:356::o;13364:413::-;13566:2;13548:21;;;13605:2;13585:18;;;13578:30;13644:34;13639:2;13624:18;;13617:62;-1:-1:-1;;;13710:2:14;13695:18;;13688:47;13767:3;13752:19;;13364:413::o;14507:128::-;14547:3;14578:1;14574:6;14571:1;14568:13;14565:39;;;14584:18;;:::i;:::-;-1:-1:-1;14620:9:14;;14507:128::o;14640:125::-;14680:4;14708:1;14705;14702:8;14699:34;;;14713:18;;:::i;:::-;-1:-1:-1;14750:9:14;;14640:125::o;14770:380::-;14849:1;14845:12;;;;14892;;;14913:61;;14967:4;14959:6;14955:17;14945:27;;14913:61;15020:2;15012:6;15009:14;14989:18;14986:38;14983:161;;;15066:10;15061:3;15057:20;15054:1;15047:31;15101:4;15098:1;15091:15;15129:4;15126:1;15119:15;14983:161;;14770:380;;;:::o;15155:127::-;15216:10;15211:3;15207:20;15204:1;15197:31;15247:4;15244:1;15237:15;15271:4;15268:1;15261:15;15287:127;15348:10;15343:3;15339:20;15336:1;15329:31;15379:4;15376:1;15369:15;15403:4;15400:1;15393:15;15419:131;-1:-1:-1;;;;;;15493:32:14;;15483:43;;15473:71;;15540:1;15537;15530:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1276400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2700",
								"baseTokenURI()": "infinite",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "4760",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2376",
								"ownerOf(uint256)": "2645",
								"renounceOwnership()": "28140",
								"safeMint(address,string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26775",
								"setBaseURI(string)": "infinite",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28422"
							},
							"internal": {
								"_burn(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 581,
									"end": 622,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 581,
									"end": 622,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 581,
									"end": 622,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 581,
									"end": 622,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 581,
									"end": 622,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 581,
									"end": 622,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 581,
									"end": 622,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 581,
									"end": 622,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 581,
									"end": 622,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 581,
									"end": 622,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "tag",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 1400,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1e4d619c3b4cefae663e92d539c811f312f82e3d808123f5d4f9b7a776cb34264736f6c63430008070033",
									".code": [
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "C87B56DD"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "C87B56DD"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "D204C45E"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "D547CFB7"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "E985E9C5"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "A22CB465"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "B88D4FDE"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "42842E0E"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "42842E0E"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "42966C68"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "55F804B3"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "6352211E"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "81812FC"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 1400,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7154,
											"end": 7168,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7154,
											"end": 7168,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7129,
											"end": 7170,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7129,
											"end": 7170,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7117,
											"end": 7119,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7102,
											"end": 7120,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6452,
											"end": 6484,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6452,
											"end": 6484,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6452,
											"end": 6484,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6434,
											"end": 6485,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6434,
											"end": 6485,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6422,
											"end": 6424,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6407,
											"end": 6425,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 6288,
											"end": 6491,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 529,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 529,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 529,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14345,
											"end": 14370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14345,
											"end": 14370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14345,
											"end": 14370,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14333,
											"end": 14335,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 14199,
											"end": 14376,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 628,
											"end": 859,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 628,
											"end": 859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 628,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 628,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 628,
											"end": 859,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 628,
											"end": 859,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 628,
											"end": 859,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 628,
											"end": 859,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 628,
											"end": 859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 628,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 628,
											"end": 859,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2555,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2574,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12390,
											"end": 12392,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12372,
											"end": 12393,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12429,
											"end": 12431,
											"name": "PUSH",
											"source": 14,
											"value": "2C"
										},
										{
											"begin": 12409,
											"end": 12427,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12409,
											"end": 12427,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12409,
											"end": 12427,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12402,
											"end": 12432,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12468,
											"end": 12502,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 12448,
											"end": 12466,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 12448,
											"end": 12466,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12448,
											"end": 12466,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12441,
											"end": 12503,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12519,
											"end": 12537,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12519,
											"end": 12537,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12519,
											"end": 12537,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12512,
											"end": 12554,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12571,
											"end": 12590,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 12571,
											"end": 12590,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13164,
											"end": 13166,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13167,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13203,
											"end": 13205,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13176,
											"end": 13206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13242,
											"end": 13276,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 13222,
											"end": 13240,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 13222,
											"end": 13240,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13222,
											"end": 13240,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13215,
											"end": 13277,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13293,
											"end": 13311,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 13293,
											"end": 13311,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13293,
											"end": 13311,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13286,
											"end": 13317,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13334,
											"end": 13353,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 13334,
											"end": 13353,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 12962,
											"end": 13359,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10368,
											"end": 10370,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10371,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10409,
											"name": "PUSH",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 10387,
											"end": 10405,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10387,
											"end": 10405,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10387,
											"end": 10405,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10380,
											"end": 10410,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 10480,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10419,
											"end": 10481,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10517,
											"end": 10543,
											"name": "PUSH",
											"source": 14,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 10497,
											"end": 10515,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10497,
											"end": 10515,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10497,
											"end": 10515,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10490,
											"end": 10544,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10561,
											"end": 10580,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 10561,
											"end": 10580,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10166,
											"end": 10586,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4935,
											"end": 4947,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4935,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 5032,
											"end": 5036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5040,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 664,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 686,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 637,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 637,
											"end": 739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 637,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 637,
											"end": 739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 637,
											"end": 739,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13984,
											"end": 13986,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 637,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 637,
											"end": 739,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 637,
											"end": 739,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13966,
											"end": 13987,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14023,
											"end": 14025,
											"name": "PUSH",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 14003,
											"end": 14021,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 14003,
											"end": 14021,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14003,
											"end": 14021,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13996,
											"end": 14026,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14096,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 14042,
											"end": 14060,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 14042,
											"end": 14060,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14042,
											"end": 14060,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14035,
											"end": 14097,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14113,
											"end": 14131,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 14113,
											"end": 14131,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14113,
											"end": 14131,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14106,
											"end": 14152,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14169,
											"end": 14188,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 14169,
											"end": 14188,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 637,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 13782,
											"end": 14194,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 637,
											"end": 739,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 637,
											"end": 739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 749,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 755,
											"end": 762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 749,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 749,
											"end": 763,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 763,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 749,
											"end": 763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 529,
											"end": 770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1159,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1147,
											"end": 1159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11206,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11186,
											"end": 11207,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11243,
											"end": 11245,
											"name": "PUSH",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 11223,
											"end": 11241,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11223,
											"end": 11241,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11223,
											"end": 11241,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11216,
											"end": 11246,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 11316,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 11262,
											"end": 11280,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 11262,
											"end": 11280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11262,
											"end": 11280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11255,
											"end": 11317,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11326,
											"end": 11365,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11382,
											"end": 11401,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 11382,
											"end": 11401,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11002,
											"end": 11407,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10793,
											"end": 10795,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10796,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10832,
											"end": 10834,
											"name": "PUSH",
											"source": 14,
											"value": "2A"
										},
										{
											"begin": 10812,
											"end": 10830,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10812,
											"end": 10830,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10812,
											"end": 10830,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10805,
											"end": 10835,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10871,
											"end": 10905,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 10851,
											"end": 10869,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10851,
											"end": 10869,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10851,
											"end": 10869,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10844,
											"end": 10906,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10915,
											"end": 10955,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10972,
											"end": 10991,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 10972,
											"end": 10991,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10591,
											"end": 10997,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2738,
											"end": 2745,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4411,
											"end": 4419,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5675,
											"end": 5680,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1366,
											"end": 1378,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1390,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1335,
											"end": 1391,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1335,
											"end": 1391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1398,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 628,
											"end": 859,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 628,
											"end": 859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 722,
											"end": 737,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 747,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 722,
											"end": 747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 704,
											"end": 747,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 704,
											"end": 747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 757,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 757,
											"end": 772,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 757,
											"end": 784,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 757,
											"end": 784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 794,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 804,
											"end": 806,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 808,
											"end": 815,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 794,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 794,
											"end": 816,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 794,
											"end": 816,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 794,
											"end": 816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 826,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 839,
											"end": 846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 848,
											"end": 851,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 826,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 826,
											"end": 852,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 547,
											"end": 573,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8028,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8029,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8065,
											"end": 8067,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 8045,
											"end": 8063,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8045,
											"end": 8063,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8045,
											"end": 8063,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8038,
											"end": 8068,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8104,
											"end": 8138,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8077,
											"end": 8139,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8148,
											"end": 8184,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8201,
											"end": 8220,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 8201,
											"end": 8220,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7824,
											"end": 8226,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9937,
											"end": 9958,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9994,
											"end": 9996,
											"name": "PUSH",
											"source": 14,
											"value": "2C"
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9967,
											"end": 9997,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 10013,
											"end": 10031,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10013,
											"end": 10031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10013,
											"end": 10031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10006,
											"end": 10068,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10084,
											"end": 10102,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10084,
											"end": 10102,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10084,
											"end": 10102,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10077,
											"end": 10119,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10136,
											"end": 10155,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 10136,
											"end": 10155,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9753,
											"end": 10161,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7666,
											"end": 7673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7699,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7760,
											"end": 7767,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7780,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10607,
											"end": 10611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 10595,
											"end": 10602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8435,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8415,
											"end": 8436,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8472,
											"end": 8474,
											"name": "PUSH",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8445,
											"end": 8475,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8511,
											"end": 8545,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8484,
											"end": 8546,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8555,
											"end": 8590,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8607,
											"end": 8626,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 8607,
											"end": 8626,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8231,
											"end": 8632,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9198,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9199,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9235,
											"end": 9237,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9215,
											"end": 9233,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9215,
											"end": 9233,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9215,
											"end": 9233,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9208,
											"end": 9238,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9274,
											"end": 9308,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 9254,
											"end": 9272,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9254,
											"end": 9272,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9254,
											"end": 9272,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9247,
											"end": 9309,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9318,
											"end": 9352,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9369,
											"end": 9388,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 9369,
											"end": 9388,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8994,
											"end": 9394,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 10857,
											"end": 10858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10861,
											"end": 10868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10889,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10919,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10945,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 933,
											"end": 1046,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 933,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1019,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 1031,
											"end": 1038,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1019,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 1019,
											"end": 1039,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11616,
											"end": 11621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9601,
											"end": 9603,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9583,
											"end": 9604,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9642,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9613,
											"end": 9643,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9679,
											"end": 9706,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 9707,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9724,
											"end": 9742,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9724,
											"end": 9742,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9399,
											"end": 9748,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7129,
											"end": 7170,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7129,
											"end": 7170,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7129,
											"end": 7170,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7120,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6787,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6794,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8117,
											"end": 8225,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 8117,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8202,
											"end": 8204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1277,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11614,
											"end": 11616,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11596,
											"end": 11617,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11653,
											"end": 11655,
											"name": "PUSH",
											"source": 14,
											"value": "2E"
										},
										{
											"begin": 11633,
											"end": 11651,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11633,
											"end": 11651,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11651,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11626,
											"end": 11656,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11692,
											"end": 11726,
											"name": "PUSH",
											"source": 14,
											"value": "45524337323155524953746F726167653A2055524920736574206F66206E6F6E"
										},
										{
											"begin": 11672,
											"end": 11690,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 11672,
											"end": 11690,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11672,
											"end": 11690,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11665,
											"end": 11727,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11736,
											"end": 11780,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11797,
											"end": 11816,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 11797,
											"end": 11816,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 11412,
											"end": 11822,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1463,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 1908,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1708,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1827,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1849,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1807,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1807,
											"end": 1902,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1865,
											"end": 1891,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1865,
											"end": 1891,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12779,
											"end": 12792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12779,
											"end": 12792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12993,
											"end": 12999,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13000,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12978,
											"end": 12984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 12976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12963,
											"end": 13001,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13092,
											"end": 13096,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8446,
											"end": 8757,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8446,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 8577,
											"end": 8579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8581,
											"end": 8588,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8571,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 8651,
											"end": 8652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8657,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8666,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8668,
											"end": 8673,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8620,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9723,
											"end": 10129,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 9723,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9782,
											"end": 9795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 9813,
											"end": 9820,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 9798,
											"end": 9821,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9798,
											"end": 9821,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 9798,
											"end": 9821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9782,
											"end": 9821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9782,
											"end": 9821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 9935,
											"end": 9936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9939,
											"end": 9946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9918,
											"end": 9947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9918,
											"end": 9947,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 9918,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10003,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10012,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9989,
											"end": 10012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10012,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10004,
											"end": 10011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10004,
											"end": 10011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9079,
											"end": 9506,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 9079,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9158,
											"end": 9174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9158,
											"end": 9174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12031,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12011,
											"end": 12032,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12011,
											"end": 12032,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12011,
											"end": 12032,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12048,
											"end": 12066,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12048,
											"end": 12066,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12048,
											"end": 12066,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12041,
											"end": 12071,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12107,
											"end": 12141,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12080,
											"end": 12142,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11827,
											"end": 12183,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7278,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8841,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8821,
											"end": 8842,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8878,
											"end": 8880,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 8858,
											"end": 8876,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8858,
											"end": 8876,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8858,
											"end": 8876,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8851,
											"end": 8881,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8890,
											"end": 8948,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8965,
											"end": 8983,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8965,
											"end": 8983,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8637,
											"end": 8989,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9355,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9381,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1176,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "165"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "347"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "112"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "347"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "349"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "349"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "351"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "351"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "112"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "357"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "357"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "155"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "359"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "359"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 14,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 78,
											"end": 83,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 126,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 149,
											"end": 151,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 141,
											"end": 147,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 138,
											"end": 152,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 135,
											"end": 175,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 135,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 135,
											"end": 175,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 230,
											"end": 232,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 233,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 198,
											"end": 200,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 284,
											"end": 299,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 280,
											"end": 304,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 280,
											"end": 304,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 280,
											"end": 304,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 276,
											"end": 309,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 272,
											"end": 314,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 260,
											"end": 315,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 260,
											"end": 315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 260,
											"end": 315,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 330,
											"end": 348,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 330,
											"end": 348,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 330,
											"end": 348,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 350,
											"end": 372,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 327,
											"end": 373,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 324,
											"end": 396,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 324,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 324,
											"end": 396,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 416,
											"end": 426,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 427,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 445,
											"end": 451,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 436,
											"end": 451,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 436,
											"end": 451,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 460,
											"end": 482,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 515,
											"end": 518,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 501,
											"end": 504,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 497,
											"end": 513,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 494,
											"end": 519,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 491,
											"end": 536,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 491,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 491,
											"end": 536,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 532,
											"end": 533,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 522,
											"end": 534,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 491,
											"end": 536,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 491,
											"end": 536,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 582,
											"end": 588,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 577,
											"end": 580,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 570,
											"end": 574,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 562,
											"end": 568,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 558,
											"end": 575,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 545,
											"end": 589,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 634,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 627,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 613,
											"end": 619,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 609,
											"end": 628,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 605,
											"end": 635,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 598,
											"end": 639,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 645,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14,
											"end": 645,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 645,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 823,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 650,
											"end": 823,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 718,
											"end": 738,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 718,
											"end": 738,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 767,
											"end": 798,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 767,
											"end": 798,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 757,
											"end": 799,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 757,
											"end": 799,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 747,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 747,
											"end": 817,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 813,
											"end": 814,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 803,
											"end": 815,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 747,
											"end": 817,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 747,
											"end": 817,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 650,
											"end": 823,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 650,
											"end": 823,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 650,
											"end": 823,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 650,
											"end": 823,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 828,
											"end": 1049,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 828,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 871,
											"end": 876,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 927,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 917,
											"end": 921,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 905,
											"end": 922,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 901,
											"end": 928,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 891,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 891,
											"end": 946,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 942,
											"end": 943,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 940,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 932,
											"end": 944,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 891,
											"end": 946,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 891,
											"end": 946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 964,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 1039,
											"end": 1042,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1036,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1010,
											"end": 1014,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 964,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 964,
											"end": 1043,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 964,
											"end": 1043,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 964,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 955,
											"end": 1043,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 828,
											"end": 1049,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 828,
											"end": 1049,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1054,
											"end": 1240,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 1054,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1113,
											"end": 1119,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1168,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1154,
											"end": 1163,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1141,
											"end": 1164,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1134,
											"end": 1186,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1134,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 1134,
											"end": 1186,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1134,
											"end": 1186,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 1134,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1505,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 1245,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1313,
											"end": 1319,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1371,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1349,
											"end": 1372,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1345,
											"end": 1377,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1342,
											"end": 1394,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1342,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 1342,
											"end": 1394,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1390,
											"end": 1391,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1388,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1380,
											"end": 1392,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1342,
											"end": 1394,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 1342,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1413,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1413,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 1413,
											"end": 1442,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1413,
											"end": 1442,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 1413,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1403,
											"end": 1442,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1403,
											"end": 1442,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1484,
											"end": 1493,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 1461,
											"end": 1499,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 1499,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 1461,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1451,
											"end": 1499,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1451,
											"end": 1499,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1505,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1505,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1505,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1505,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1505,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1505,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1510,
											"end": 1838,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 1510,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1603,
											"end": 1609,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1635,
											"end": 1642,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1670,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1695,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 1714,
											"end": 1723,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1695,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 1695,
											"end": 1724,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1695,
											"end": 1724,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 1695,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1685,
											"end": 1724,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1685,
											"end": 1724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1743,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 1777,
											"end": 1779,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1775,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1762,
											"end": 1780,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1743,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 1743,
											"end": 1781,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1743,
											"end": 1781,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 1743,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1733,
											"end": 1781,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1733,
											"end": 1781,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1828,
											"end": 1830,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1826,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1800,
											"end": 1832,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1790,
											"end": 1832,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1790,
											"end": 1832,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1510,
											"end": 1838,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1510,
											"end": 1838,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1510,
											"end": 1838,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1510,
											"end": 1838,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1510,
											"end": 1838,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1510,
											"end": 1838,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1843,
											"end": 2509,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 1843,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1952,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2015,
											"end": 2018,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2003,
											"end": 2012,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2001,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1990,
											"end": 2013,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1986,
											"end": 2019,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2036,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 1983,
											"end": 2036,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2022,
											"end": 2034,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2036,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 1983,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2055,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 2074,
											"end": 2083,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2055,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 2055,
											"end": 2084,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2084,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 2055,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2045,
											"end": 2084,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2045,
											"end": 2084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2103,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2135,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2103,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 2103,
											"end": 2141,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2103,
											"end": 2141,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 2103,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2093,
											"end": 2141,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2093,
											"end": 2141,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2188,
											"end": 2190,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2186,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2160,
											"end": 2192,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2192,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2192,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2243,
											"end": 2245,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2232,
											"end": 2241,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2215,
											"end": 2247,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2270,
											"end": 2288,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2262,
											"end": 2268,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2259,
											"end": 2289,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2306,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 2256,
											"end": 2306,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2303,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2300,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2304,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2306,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 2256,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2325,
											"end": 2347,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2325,
											"end": 2347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2378,
											"end": 2382,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2366,
											"end": 2393,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2356,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 2356,
											"end": 2411,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2407,
											"end": 2408,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2409,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2356,
											"end": 2411,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 2356,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2430,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 2495,
											"end": 2502,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2490,
											"end": 2492,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2493,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2468,
											"end": 2470,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2430,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 2430,
											"end": 2503,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2430,
											"end": 2503,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 2430,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2503,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1843,
											"end": 2509,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1843,
											"end": 2509,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 1843,
											"end": 2509,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1843,
											"end": 2509,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1843,
											"end": 2509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1843,
											"end": 2509,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1843,
											"end": 2509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1843,
											"end": 2509,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2514,
											"end": 2861,
											"name": "tag",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2514,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2585,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2643,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2608,
											"end": 2660,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2608,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 2608,
											"end": 2660,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2656,
											"end": 2657,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2658,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2608,
											"end": 2660,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 2608,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2679,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2679,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 2679,
											"end": 2708,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2679,
											"end": 2708,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 2679,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2669,
											"end": 2708,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2669,
											"end": 2708,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2758,
											"end": 2760,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2743,
											"end": 2761,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2810,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2798,
											"end": 2811,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2791,
											"end": 2812,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2784,
											"end": 2789,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 2771,
											"end": 2831,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2817,
											"end": 2829,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2831,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 2771,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2855,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2514,
											"end": 2861,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2514,
											"end": 2861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2514,
											"end": 2861,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2514,
											"end": 2861,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2514,
											"end": 2861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2514,
											"end": 2861,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2866,
											"end": 3262,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 2866,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2958,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2984,
											"end": 2991,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2980,
											"end": 3003,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2976,
											"end": 3008,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3124,
											"end": 3126,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3122,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3096,
											"end": 3128,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3149,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3170,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3187,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 3137,
											"end": 3187,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3183,
											"end": 3184,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3173,
											"end": 3185,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3187,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 3137,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3206,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 3248,
											"end": 3255,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3224,
											"end": 3246,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3206,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 3206,
											"end": 3256,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3256,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 3206,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3256,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3256,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3256,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2866,
											"end": 3262,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2866,
											"end": 3262,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2866,
											"end": 3262,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2866,
											"end": 3262,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2866,
											"end": 3262,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2866,
											"end": 3262,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3267,
											"end": 3521,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3267,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3349,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3398,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3384,
											"end": 3393,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3375,
											"end": 3382,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3371,
											"end": 3394,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3367,
											"end": 3399,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3364,
											"end": 3416,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3364,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 3364,
											"end": 3416,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3412,
											"end": 3413,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3410,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3402,
											"end": 3414,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3364,
											"end": 3416,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 3364,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 3454,
											"end": 3463,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 3435,
											"end": 3464,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3435,
											"end": 3464,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 3435,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3425,
											"end": 3464,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3511,
											"end": 3513,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3496,
											"end": 3514,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3496,
											"end": 3514,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3496,
											"end": 3514,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3496,
											"end": 3514,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3483,
											"end": 3515,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3483,
											"end": 3515,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3267,
											"end": 3521,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3526,
											"end": 3771,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 3526,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3584,
											"end": 3590,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3639,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3634,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3616,
											"end": 3623,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3612,
											"end": 3635,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3608,
											"end": 3640,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3657,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 3605,
											"end": 3657,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3654,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3651,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3643,
											"end": 3655,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3657,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 3605,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3702,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3711,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 3735,
											"end": 3740,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3711,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 3711,
											"end": 3741,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3776,
											"end": 4025,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 3776,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 3851,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3884,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3873,
											"end": 3896,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3869,
											"end": 3901,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3866,
											"end": 3918,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3866,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 3866,
											"end": 3918,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3914,
											"end": 3915,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3911,
											"end": 3912,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3904,
											"end": 3916,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3866,
											"end": 3918,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 3866,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 3955,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3965,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 3989,
											"end": 3994,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3965,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 3965,
											"end": 3995,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4030,
											"end": 4352,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 4030,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4099,
											"end": 4105,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4154,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4140,
											"end": 4149,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4131,
											"end": 4138,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4127,
											"end": 4150,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4123,
											"end": 4155,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4120,
											"end": 4172,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4120,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 4120,
											"end": 4172,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4168,
											"end": 4169,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4120,
											"end": 4172,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 4120,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4208,
											"end": 4217,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4195,
											"end": 4218,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4233,
											"end": 4239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4230,
											"end": 4260,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4227,
											"end": 4277,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4227,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 4227,
											"end": 4277,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4273,
											"end": 4274,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4263,
											"end": 4275,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4227,
											"end": 4277,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 4227,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4296,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 4338,
											"end": 4345,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4318,
											"end": 4327,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4314,
											"end": 4336,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4296,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 4296,
											"end": 4346,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4537,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 4357,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4416,
											"end": 4422,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4471,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4448,
											"end": 4455,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4444,
											"end": 4467,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4440,
											"end": 4472,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 4489,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 4437,
											"end": 4489,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4486,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4483,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4475,
											"end": 4487,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 4489,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 4437,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4531,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4508,
											"end": 4531,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4537,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4357,
											"end": 4537,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4542,
											"end": 5013,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 4542,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4583,
											"end": 4586,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4621,
											"end": 4626,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4627,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4643,
											"end": 4646,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4636,
											"end": 4655,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4683,
											"end": 4845,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 4683,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4703,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4694,
											"end": 4695,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4691,
											"end": 4704,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4683,
											"end": 4845,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4683,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 4683,
											"end": 4845,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4759,
											"end": 4763,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4805,
											"end": 4834,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4787,
											"end": 4798,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4787,
											"end": 4798,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4787,
											"end": 4798,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4783,
											"end": 4803,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4783,
											"end": 4803,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4776,
											"end": 4835,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4712,
											"end": 4724,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4683,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 4683,
											"end": 4845,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4683,
											"end": 4845,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 4683,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4860,
											"end": 4861,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4870,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4854,
											"end": 4941,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4854,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 4854,
											"end": 4941,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 4930,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4926,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4913,
											"end": 4919,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4908,
											"end": 4911,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4904,
											"end": 4920,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4900,
											"end": 4927,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4893,
											"end": 4931,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4854,
											"end": 4941,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 4854,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4995,
											"end": 4997,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4974,
											"end": 4989,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4961,
											"end": 5000,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4961,
											"end": 5000,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4961,
											"end": 5000,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4961,
											"end": 5000,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5002,
											"end": 5006,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 5007,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4957,
											"end": 5007,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4542,
											"end": 5013,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4542,
											"end": 5013,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5018,
											"end": 6283,
											"name": "tag",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 5018,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5278,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5337,
											"end": 5343,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5331,
											"end": 5344,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5367,
											"end": 5370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5389,
											"end": 5390,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5417,
											"end": 5426,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5399,
											"end": 5427,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5399,
											"end": 5427,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5477,
											"end": 5479,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5466,
											"end": 5475,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5462,
											"end": 5480,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5489,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 5489,
											"end": 5550,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5543,
											"end": 5547,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 5535,
											"end": 5541,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5531,
											"end": 5548,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5489,
											"end": 5550,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 5489,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5569,
											"end": 5571,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5609,
											"end": 5615,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5606,
											"end": 5620,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5583,
											"end": 5621,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5580,
											"end": 5745,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5580,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 5580,
											"end": 5745,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5644,
											"end": 5677,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5644,
											"end": 5677,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5700,
											"end": 5704,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5690,
											"end": 5705,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5651,
											"end": 5654,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5718,
											"end": 5735,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5580,
											"end": 5745,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 5580,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5788,
											"end": 5892,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5788,
											"end": 5892,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5788,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 5788,
											"end": 5892,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5906,
											"end": 5907,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5901,
											"end": 6221,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5901,
											"end": 6221,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5901,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 5901,
											"end": 6221,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5754,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 5754,
											"end": 6221,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5788,
											"end": 5892,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 5788,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5821,
											"end": 5845,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5846,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5846,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5788,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 5788,
											"end": 5892,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5901,
											"end": 6221,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 5901,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14454,
											"end": 14455,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14447,
											"end": 14461,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 14447,
											"end": 14461,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14447,
											"end": 14461,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14491,
											"end": 14495,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14478,
											"end": 14496,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14478,
											"end": 14496,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5996,
											"end": 5997,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6175,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 6010,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6024,
											"end": 6030,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6021,
											"end": 6022,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6018,
											"end": 6031,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6175,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 6010,
											"end": 6175,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6102,
											"end": 6116,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6102,
											"end": 6116,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 6089,
											"end": 6100,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 6089,
											"end": 6100,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6089,
											"end": 6100,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6082,
											"end": 6117,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6145,
											"end": 6161,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6145,
											"end": 6161,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6145,
											"end": 6161,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6145,
											"end": 6161,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6039,
											"end": 6049,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6039,
											"end": 6049,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 6010,
											"end": 6175,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6175,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 6010,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6014,
											"end": 6017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6014,
											"end": 6017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6204,
											"end": 6210,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6199,
											"end": 6202,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 6195,
											"end": 6211,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6188,
											"end": 6211,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 6188,
											"end": 6211,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5754,
											"end": 6221,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 5754,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5018,
											"end": 6283,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5018,
											"end": 6283,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6496,
											"end": 6984,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 6496,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6765,
											"end": 6780,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6765,
											"end": 6780,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6765,
											"end": 6780,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6817,
											"end": 6832,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6817,
											"end": 6832,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6812,
											"end": 6814,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6815,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6797,
											"end": 6815,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6790,
											"end": 6833,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6864,
											"end": 6866,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6842,
											"end": 6876,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6842,
											"end": 6876,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6842,
											"end": 6876,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6912,
											"end": 6915,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6907,
											"end": 6909,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6892,
											"end": 6910,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6892,
											"end": 6910,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6885,
											"end": 6916,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6885,
											"end": 6916,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6885,
											"end": 6916,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6690,
											"end": 6694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6933,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 6933,
											"end": 6978,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 6977,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 6977,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6950,
											"end": 6956,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6933,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 6933,
											"end": 6978,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6933,
											"end": 6978,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 6933,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 6496,
											"end": 6984,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6496,
											"end": 6984,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7181,
											"end": 7400,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 7181,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7330,
											"end": 7332,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7312,
											"end": 7333,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7293,
											"end": 7297,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7350,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 7390,
											"end": 7392,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7388,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7375,
											"end": 7393,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7350,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 7350,
											"end": 7394,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7405,
											"end": 7819,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 7405,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7607,
											"end": 7609,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7589,
											"end": 7610,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7589,
											"end": 7610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7589,
											"end": 7610,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7646,
											"end": 7648,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 7626,
											"end": 7644,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7626,
											"end": 7644,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7626,
											"end": 7644,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7619,
											"end": 7649,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7685,
											"end": 7719,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 7680,
											"end": 7682,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7658,
											"end": 7720,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7751,
											"end": 7753,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 7736,
											"end": 7754,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7736,
											"end": 7754,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7729,
											"end": 7777,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7809,
											"end": 7812,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7405,
											"end": 7819,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12601,
											"end": 12957,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 12601,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12803,
											"end": 12805,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12785,
											"end": 12806,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12785,
											"end": 12806,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12785,
											"end": 12806,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12815,
											"end": 12845,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12881,
											"end": 12915,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12876,
											"end": 12878,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12861,
											"end": 12879,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12861,
											"end": 12879,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12854,
											"end": 12916,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12948,
											"end": 12950,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 12933,
											"end": 12951,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12933,
											"end": 12951,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12601,
											"end": 12957,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13364,
											"end": 13777,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 13364,
											"end": 13777,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13566,
											"end": 13568,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13548,
											"end": 13569,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13548,
											"end": 13569,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13548,
											"end": 13569,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13605,
											"end": 13607,
											"name": "PUSH",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 13585,
											"end": 13603,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13585,
											"end": 13603,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13585,
											"end": 13603,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13578,
											"end": 13608,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13644,
											"end": 13678,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 13639,
											"end": 13641,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13624,
											"end": 13642,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13624,
											"end": 13642,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13617,
											"end": 13679,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13710,
											"end": 13712,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13695,
											"end": 13713,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13695,
											"end": 13713,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13688,
											"end": 13735,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13767,
											"end": 13770,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 13752,
											"end": 13771,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13752,
											"end": 13771,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13364,
											"end": 13777,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14507,
											"end": 14635,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 14507,
											"end": 14635,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14578,
											"end": 14579,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14574,
											"end": 14580,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 14571,
											"end": 14572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14568,
											"end": 14581,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14565,
											"end": 14604,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14565,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 14565,
											"end": 14604,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14620,
											"end": 14629,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14620,
											"end": 14629,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14507,
											"end": 14635,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14640,
											"end": 14765,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 14640,
											"end": 14765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14680,
											"end": 14684,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14708,
											"end": 14709,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14705,
											"end": 14706,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14702,
											"end": 14710,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14699,
											"end": 14733,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14699,
											"end": 14733,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 14699,
											"end": 14733,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14713,
											"end": 14731,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 14713,
											"end": 14731,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 14713,
											"end": 14731,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14713,
											"end": 14731,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 14713,
											"end": 14731,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14750,
											"end": 14759,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14750,
											"end": 14759,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14640,
											"end": 14765,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14770,
											"end": 15150,
											"name": "tag",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 14770,
											"end": 15150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14849,
											"end": 14850,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14845,
											"end": 14857,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14845,
											"end": 14857,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14845,
											"end": 14857,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 14845,
											"end": 14857,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14892,
											"end": 14904,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14892,
											"end": 14904,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14892,
											"end": 14904,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14913,
											"end": 14974,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 14913,
											"end": 14974,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14967,
											"end": 14971,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 14959,
											"end": 14965,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14955,
											"end": 14972,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14945,
											"end": 14972,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14945,
											"end": 14972,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14913,
											"end": 14974,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 14913,
											"end": 14974,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15020,
											"end": 15022,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15012,
											"end": 15018,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15009,
											"end": 15023,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14989,
											"end": 15007,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14986,
											"end": 15024,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 14983,
											"end": 15144,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14983,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 14983,
											"end": 15144,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15066,
											"end": 15076,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 15061,
											"end": 15064,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 15057,
											"end": 15077,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 15054,
											"end": 15055,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15047,
											"end": 15078,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15101,
											"end": 15105,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 15098,
											"end": 15099,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15091,
											"end": 15106,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15129,
											"end": 15133,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 15126,
											"end": 15127,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15119,
											"end": 15134,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14983,
											"end": 15144,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 14983,
											"end": 15144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14983,
											"end": 15144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14770,
											"end": 15150,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14770,
											"end": 15150,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14770,
											"end": 15150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14770,
											"end": 15150,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15155,
											"end": 15282,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 15155,
											"end": 15282,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15216,
											"end": 15226,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 15211,
											"end": 15214,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 15207,
											"end": 15227,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 15204,
											"end": 15205,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15197,
											"end": 15228,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15247,
											"end": 15251,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 15244,
											"end": 15245,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15237,
											"end": 15252,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15271,
											"end": 15275,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 15268,
											"end": 15269,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15261,
											"end": 15276,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15287,
											"end": 15414,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 15287,
											"end": 15414,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15348,
											"end": 15358,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 15343,
											"end": 15346,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 15339,
											"end": 15359,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 15336,
											"end": 15337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15329,
											"end": 15360,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15379,
											"end": 15383,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 15376,
											"end": 15377,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15369,
											"end": 15384,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15403,
											"end": 15407,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 15400,
											"end": 15401,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15393,
											"end": 15408,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15419,
											"end": 15550,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 15419,
											"end": 15550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15493,
											"end": 15525,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15493,
											"end": 15525,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15483,
											"end": 15526,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15483,
											"end": 15526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 15473,
											"end": 15544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 15473,
											"end": 15544,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15540,
											"end": 15541,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15537,
											"end": 15538,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15530,
											"end": 15542,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseTokenURI()": "d547cfb7",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address,string)": "d204c45e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sequential.sol\":\"MyToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x1f16f9737853b988865ab819d1ebf8b5009defe981c75bc9079e0f40ed2a2e57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e50f827969ca93b0d7bad1e022aa3147c8f390e9f91bb814752e8fbbbe621c\",\"dweb:/ipfs/QmdR2fJ2a3HM7FyC9pGD4JeKF9z6bxqU9FbhMyQfH1sDJH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/sequential.sol\":{\"keccak256\":\"0x59a067d9d3a4a3b2f467730082a20c022e6e9812500cb8209f307e003517614e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3694acf4efd242a4e9e8a3d8c8fce4563debcd8d1fa3fccf15efe21b871135ee\",\"dweb:/ipfs/QmQ2hXtWSaoo1V42n1WfJEcGLjQhTTr6SVPmSwuvZR1yo6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "contracts/sequential.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "contracts/sequential.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 136,
								"contract": "contracts/sequential.sol:MyToken",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 140,
								"contract": "contracts/sequential.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 144,
								"contract": "contracts/sequential.sol:MyToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 150,
								"contract": "contracts/sequential.sol:MyToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1147,
								"contract": "contracts/sequential.sol:MyToken",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 7,
								"contract": "contracts/sequential.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1941,
								"contract": "contracts/sequential.sol:MyToken",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "8",
								"type": "t_struct(Counter)1612_storage"
							},
							{
								"astId": 1943,
								"contract": "contracts/sequential.sol:MyToken",
								"label": "baseTokenURI",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1612_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1611,
										"contract": "contracts/sequential.sol:MyToken",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1606
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 1607,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1606,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								1606
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1584
						],
						"Context": [
							1606
						],
						"ERC165": [
							1907
						],
						"ERC721": [
							970
						],
						"IERC165": [
							1919
						],
						"IERC721": [
							1086
						],
						"IERC721Metadata": [
							1289
						],
						"IERC721Receiver": [
							1104
						],
						"Strings": [
							1883
						]
					},
					"id": 971,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 971,
							"sourceUnit": 1087,
							"src": "132:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 971,
							"sourceUnit": 1105,
							"src": "156:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 971,
							"sourceUnit": 1290,
							"src": "188:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 971,
							"sourceUnit": 1585,
							"src": "231:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 971,
							"sourceUnit": 1607,
							"src": "265:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 971,
							"sourceUnit": 1884,
							"src": "299:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 113,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 971,
							"sourceUnit": 1908,
							"src": "333:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 115,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1606,
										"src": "647:7:1"
									},
									"id": 116,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:1"
								},
								{
									"baseName": {
										"id": 117,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1907,
										"src": "656:6:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:1"
								},
								{
									"baseName": {
										"id": 119,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "664:7:1"
									},
									"id": 120,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:1"
								},
								{
									"baseName": {
										"id": 121,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1289,
										"src": "673:15:1"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 114,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 970,
							"linearizedBaseContracts": [
								970,
								1289,
								1086,
								1907,
								1919,
								1606
							],
							"name": "ERC721",
							"nameLocation": "637:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1584,
										"src": "701:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:1",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 128,
									"libraryName": {
										"id": 126,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1883,
										"src": "732:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:1",
									"typeName": {
										"id": 127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 970,
									"src": "776:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 129,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 970,
									"src": "823:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 131,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 970,
									"src": "898:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 135,
										"keyType": {
											"id": 133,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 970,
									"src": "992:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 139,
										"keyType": {
											"id": 137,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 138,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 144,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 970,
									"src": "1093:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 143,
										"keyType": {
											"id": 141,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 142,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 150,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 970,
									"src": "1199:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 149,
										"keyType": {
											"id": 145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 148,
											"keyType": {
												"id": 146,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 147,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "1446:57:1",
										"statements": [
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 158,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1456:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 159,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1464:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:1"
											},
											{
												"expression": {
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 162,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1479:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 163,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1489:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:1"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 167,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1402:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1423:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 154,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:1"
									},
									"scope": 970,
									"src": "1390:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1906,
										1918
									],
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "1678:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 178,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "1707:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 180,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1086,
																			"src": "1727:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1086_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1086_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 179,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1086",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 184,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "1763:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 186,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "1783:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1289_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1289_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 185,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1289",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 193,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "1851:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 191,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$970_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1906,
															"src": "1827:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 177,
												"id": 196,
												"nodeType": "Return",
												"src": "1688:175:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 174,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 172,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1907,
												"src": "1646:6:1"
											},
											{
												"id": 173,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1919,
												"src": "1654:7:1"
											}
										],
										"src": "1637:25:1"
									},
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1597:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 169,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1672:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:1"
									},
									"scope": 970,
									"src": "1570:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1011
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2010:124:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "2028:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 209,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															},
															"value": "ERC721: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "2020:74:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 217,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2111:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 219,
													"indexExpression": {
														"id": 218,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "2121:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2111:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 220,
												"nodeType": "Return",
												"src": "2104:23:1"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:1"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1948:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2001:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:1"
									},
									"scope": 970,
									"src": "1929:205:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1019
									],
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2272:154:1",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2290:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 249,
														"src": "2282:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 231,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2282:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"baseExpression": {
														"id": 233,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "2298:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 235,
													"indexExpression": {
														"id": 234,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "2306:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2298:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2282:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 238,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "2332:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 239,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															},
															"value": "ERC721: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "2324:73:1"
											},
											{
												"expression": {
													"id": 247,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 232,
													"src": "2414:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 230,
												"id": 248,
												"nodeType": "Return",
												"src": "2407:12:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2140:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2200:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2245:8:1"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2216:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2208:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:17:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2263:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:9:1"
									},
									"scope": 970,
									"src": "2191:235:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1274
									],
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "2557:29:1",
										"statements": [
											{
												"expression": {
													"id": 257,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "2574:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 256,
												"id": 258,
												"nodeType": "Return",
												"src": "2567:12:1"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "2432:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2497:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 253,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2524:8:1"
									},
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2501:2:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2542:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 254,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2542:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2541:15:1"
									},
									"scope": 970,
									"src": "2488:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1280
									],
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "2721:31:1",
										"statements": [
											{
												"expression": {
													"id": 267,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 132,
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 266,
												"id": 268,
												"nodeType": "Return",
												"src": "2731:14:1"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "2592:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2659:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 263,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2688:8:1"
									},
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:2:1"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2706:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 264,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2706:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:15:1"
									},
									"scope": 970,
									"src": "2650:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1288
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "2906:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 281,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "2932:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 280,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "2924:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2924:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2942:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2916:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2916:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "2916:76:1"
											},
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "3017:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "3003:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 286,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3003:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 290,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 288,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "3027:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3027:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3003:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 293,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "3060:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3054:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3054:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3054:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3054:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3078:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3054:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3138:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3054:86:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 302,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "3106:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 303,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 273,
																				"src": "3115:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1765,
																			"src": "3115:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3115:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 300,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3089:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3089:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3089:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3082:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 298,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3082:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3082:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 278,
												"id": 310,
												"nodeType": "Return",
												"src": "3047:93:1"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "2758:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2827:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 275,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2873:8:1"
									},
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2844:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2836:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:17:1"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2891:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 276,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2891:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:15:1"
									},
									"scope": 970,
									"src": "2818:329:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "3455:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3472:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 317,
												"id": 319,
												"nodeType": "Return",
												"src": "3465:9:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "3153:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3398:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3406:2:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "3440:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3440:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:15:1"
									},
									"scope": 970,
									"src": "3389:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1059
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "3608:331:1",
										"statements": [
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3626:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "3618:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 330,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3618:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"arguments": [
														{
															"id": 334,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "3649:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 332,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "3634:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$970_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "3634:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3618:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 338,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "3675:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 339,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "3681:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3675:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3688:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3667:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3667:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "3667:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 345,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "3756:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3756:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 347,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "3772:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3756:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 350,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "3798:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 351,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "3805:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3805:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 349,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "3781:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3781:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3756:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3832:58:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															}
														],
														"id": 344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3735:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3735:165:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "3735:165:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 359,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "3920:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "3924:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 358,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "3911:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3911:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "3911:21:1"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "3487:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3547:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 328,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3599:8:1"
									},
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3563:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3555:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3555:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3575:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3567:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3554:29:1"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3608:0:1"
									},
									"scope": 970,
									"src": "3538:401:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "4085:132:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 375,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "4111:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 374,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "4103:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4103:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4121:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															},
															"value": "ERC721: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4095:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4095:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "4095:73:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "4186:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "4202:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4186:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 372,
												"id": 383,
												"nodeType": "Return",
												"src": "4179:31:1"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "3945:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4009:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 369,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:1"
									},
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4029:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "4021:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4020:17:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "4076:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:1"
									},
									"scope": 970,
									"src": "4000:217:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1067
									],
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "4368:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 395,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "4397:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4397:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "4411:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "4421:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 394,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "4378:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4378:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "4378:52:1"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "4223:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4293:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 392,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4359:8:1"
									},
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4319:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4311:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4334:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4329:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4329:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4310:33:1"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4368:0:1"
									},
									"scope": 970,
									"src": "4284:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "4606:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 413,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4623:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 415,
														"indexExpression": {
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4642:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4623:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 417,
													"indexExpression": {
														"id": 416,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "4649:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4623:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 412,
												"id": 418,
												"nodeType": "Return",
												"src": "4616:42:1"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "4443:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4512:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 409,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4582:8:1"
									},
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4537:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "4529:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4529:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4552:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "4544:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4528:33:1"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "4600:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4600:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4599:6:1"
									},
									"scope": 970,
									"src": "4503:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1051
									],
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "4846:211:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 433,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "4935:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4935:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 435,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "4949:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 432,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "4916:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4916:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4959:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4908:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4908:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "4908:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "5032:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "5038:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "5042:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 440,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "5022:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "5022:28:1"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "4671:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4736:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 429,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4837:8:1"
									},
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4766:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "4758:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4758:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4788:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "4780:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4808:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "4800:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4748:73:1"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4846:0:1"
									},
									"scope": 970,
									"src": "4727:330:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1041
									],
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "5246:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 459,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "5273:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "5279:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "5283:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5292:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 458,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															466,
															496
														],
														"referencedDeclaration": 496,
														"src": "5256:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5256:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "5256:39:1"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "5063:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5132:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 456,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5237:8:1"
									},
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5166:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5158:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5188:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5180:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5208:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5200:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5200:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5148:73:1"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5246:0:1"
									},
									"scope": 970,
									"src": "5123:179:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1031
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "5519:169:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 481,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "5556:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5556:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 483,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "5570:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 480,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "5537:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5537:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5580:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "5529:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 489,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "5656:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "5662:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "5666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 492,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "5675:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 488,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "5642:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5642:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "5642:39:1"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "5308:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5377:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5510:8:1"
									},
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5411:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5403:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5433:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5425:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5483:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5470:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5470:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5393:101:1"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5519:0:1"
									},
									"scope": 970,
									"src": "5368:320:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6691:166:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "6711:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "6717:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6721:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "6701:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6701:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "6701:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 516,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "6770:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 517,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "6776:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 518,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "6780:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 519,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "6789:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 515,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "6747:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6747:48:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6797:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6739:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:111:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "6739:111:1"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "5694:851:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6559:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6590:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6582:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6612:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6604:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6604:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6632:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6624:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "6662:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6649:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6649:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6572:101:1"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6691:0:1"
									},
									"scope": 970,
									"src": "6550:307:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "7231:54:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 533,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "7248:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 535,
														"indexExpression": {
															"id": 534,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "7256:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7248:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7276:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7268:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 536,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7268:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7268:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7248:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 532,
												"id": 541,
												"nodeType": "Return",
												"src": "7241:37:1"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "6863:292:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7169:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7185:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "7177:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7176:17:1"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "7225:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7225:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7224:6:1"
									},
									"scope": 970,
									"src": "7160:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "7542:245:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 555,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "7568:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 554,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "7560:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7560:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7578:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															},
															"value": "ERC721: operator query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7552:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7552:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "7552:73:1"
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7643:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "7635:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 560,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7635:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 566,
												"initialValue": {
													"arguments": [
														{
															"id": 564,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "7666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 562,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "7651:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$970_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "7651:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7651:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7635:39:1"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 567,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "7692:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 568,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "7703:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7692:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 571,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "7729:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 572,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "7736:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 570,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "7712:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7712:32:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7692:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 576,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 548,
																			"src": "7760:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 575,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "7748:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7748:20:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 578,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "7772:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7748:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7692:87:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 581,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7691:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 552,
												"id": 582,
												"nodeType": "Return",
												"src": "7684:96:1"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "7291:147:1",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7452:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7479:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "7471:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7496:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "7488:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7470:34:1"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "7536:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7536:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7535:6:1"
									},
									"scope": 970,
									"src": "7443:344:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "8182:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 593,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "8202:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 594,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "8206:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8215:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 592,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															628
														],
														"referencedDeclaration": 628,
														"src": "8192:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "8192:26:1"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "7793:319:1",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8126:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8144:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "8136:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8136:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8156:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "8148:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8148:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8135:29:1"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8182:0:1"
									},
									"scope": 970,
									"src": "8117:108:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "8561:196:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 610,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "8577:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "8581:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 609,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "8571:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8571:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "8571:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8651:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8643:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 616,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8643:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8643:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 620,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "8655:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 621,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "8659:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 622,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "8668:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 615,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "8620:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8620:54:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8688:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8599:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8599:151:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "8599:151:1"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "8231:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8455:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8482:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "8474:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8474:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8502:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "8494:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8532:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "8519:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 605,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8519:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8464:79:1"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8561:0:1"
									},
									"scope": 970,
									"src": "8446:311:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "9140:366:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 637,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "9158:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9164:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 638,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9164:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9164:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9158:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9176:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9150:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9150:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "9150:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9229:17:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 648,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "9238:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 647,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "9230:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9230:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9248:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9221:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9221:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "9221:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9319:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9311:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 655,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9311:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9311:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "9323:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "9327:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 654,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "9290:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9290:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "9290:45:1"
											},
											{
												"expression": {
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 663,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "9346:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 665,
														"indexExpression": {
															"id": 664,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "9356:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9346:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9363:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9346:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "9346:18:1"
											},
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 669,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "9374:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 671,
														"indexExpression": {
															"id": 670,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "9382:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9374:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 672,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "9393:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9374:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "9374:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9428:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9420:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 676,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9420:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9420:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "9432:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "9436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "9411:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9411:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "EmitStatement",
												"src": "9406:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9483:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9475:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 685,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9475:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9475:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 689,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "9487:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "9491:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 684,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "9455:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9455:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9455:44:1"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "8763:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9088:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9102:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "9094:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9114:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "9106:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9106:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9093:29:1"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9140:0:1"
									},
									"scope": 970,
									"src": "9079:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "9772:357:1",
										"statements": [
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9790:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "9782:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 700,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9782:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"arguments": [
														{
															"id": 704,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "9813:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 702,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "9798:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$970_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "9798:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9798:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9782:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "9853:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9868:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9860:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 709,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9860:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9860:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "9872:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "9832:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9832:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "9832:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9935:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9927:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 717,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9927:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9927:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "9939:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 716,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "9918:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9918:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "9918:29:1"
											},
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 724,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "9958:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 726,
														"indexExpression": {
															"id": 725,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "9968:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9958:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9978:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9958:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "9958:21:1"
											},
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9989:23:1",
													"subExpression": {
														"baseExpression": {
															"id": 730,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "9996:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 732,
														"indexExpression": {
															"id": 731,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "10004:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9996:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "9989:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 736,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "10037:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10052:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10044:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 737,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10044:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10044:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "10056:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 735,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "10028:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10028:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "EmitStatement",
												"src": "10023:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "10095:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10110:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10102:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 746,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10102:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10102:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "10114:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 744,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "10075:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10075:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "10075:47:1"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "9512:206:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9732:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9746:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "9738:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9737:17:1"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9772:0:1"
									},
									"scope": 970,
									"src": "9723:406:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "10562:496:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 767,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "10595:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 765,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "10580:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$970_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "10580:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10580:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 769,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "10607:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10580:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10613:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10572:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10572:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "10572:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 775,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "10671:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10685:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10677:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 776,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10677:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10677:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10671:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10689:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10663:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10663:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "10663:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "10760:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "10766:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "10770:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 784,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "10739:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10739:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "10739:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10857:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10849:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 791,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10849:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10849:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "10861:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 790,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "10840:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10840:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "10840:29:1"
											},
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 798,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "10880:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 800,
														"indexExpression": {
															"id": 799,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "10890:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10880:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10899:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10880:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "10880:20:1"
											},
											{
												"expression": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 804,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "10910:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 806,
														"indexExpression": {
															"id": 805,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "10920:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10910:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10910:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "10910:18:1"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 810,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "10938:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 812,
														"indexExpression": {
															"id": 811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "10946:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10938:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 813,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "10957:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10938:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "10938:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 817,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "10984:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "10990:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "10994:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 816,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "10975:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10975:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "EmitStatement",
												"src": "10970:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 823,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "11033:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "11039:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 825,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "11043:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 822,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "11013:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "11013:38:1"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "10135:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10462:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10489:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "10481:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10481:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10511:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "10503:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10531:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "10523:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10471:73:1"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10562:0:1"
									},
									"scope": 970,
									"src": "10453:605:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "11233:107:1",
										"statements": [
											{
												"expression": {
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 837,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "11243:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 839,
														"indexExpression": {
															"id": 838,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "11259:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11243:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 840,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "11270:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11243:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "11243:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 846,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "11311:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 844,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "11296:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$970_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 250,
																"src": "11296:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11296:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "11321:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "11325:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "11287:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11287:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "EmitStatement",
												"src": "11282:51:1"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "11064:100:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11178:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11195:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "11187:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11207:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "11199:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11199:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11186:29:1"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11233:0:1"
									},
									"scope": 970,
									"src": "11169:171:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "11598:184:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 864,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "11616:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 865,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "11625:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11616:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11635:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11608:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11608:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "11608:55:1"
											},
											{
												"expression": {
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 870,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "11673:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 873,
															"indexExpression": {
																"id": 871,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "11692:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11673:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 874,
														"indexExpression": {
															"id": 872,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "11699:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11673:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 875,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "11711:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11673:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "11673:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 879,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "11749:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "11756:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "11766:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 878,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "11734:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11734:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "EmitStatement",
												"src": "11729:46:1"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "11346:124:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "11484:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "11512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11512:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11543:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "11535:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11535:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "11566:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "11561:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 859,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11561:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11502:78:1"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11598:0:1"
									},
									"scope": 970,
									"src": "11475:307:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "12491:622:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 899,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "12505:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1307,
														"src": "12505:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12505:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 944,
													"nodeType": "Block",
													"src": "13071:36:1",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13092:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 898,
															"id": 943,
															"nodeType": "Return",
															"src": "13085:11:1"
														}
													]
												},
												"id": 945,
												"nodeType": "IfStatement",
												"src": "12501:606:1",
												"trueBody": {
													"id": 941,
													"nodeType": "Block",
													"src": "12522:543:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 921,
																		"nodeType": "Block",
																		"src": "12637:91:1",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 919,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 915,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 913,
																						"src": "12662:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 916,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1104,
																								"src": "12672:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1104_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 917,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1103,
																							"src": "12672:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 918,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "12672:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "12662:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 898,
																				"id": 920,
																				"nodeType": "Return",
																				"src": "12655:58:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 922,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 914,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 913,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "12629:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 922,
																				"src": "12622:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 912,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "12622:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12621:15:1"
																	},
																	"src": "12613:115:1"
																},
																{
																	"block": {
																		"id": 938,
																		"nodeType": "Block",
																		"src": "12757:298:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 929,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 926,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 924,
																							"src": "12779:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 927,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "12779:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 928,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12796:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12779:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 936,
																					"nodeType": "Block",
																					"src": "12906:135:1",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "12937:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "12974:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12978:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "12970:3:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12970:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12993:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "12987:5:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12987:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "12963:6:1"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "12963:38:1"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "12963:38:1"
																									}
																								]
																							},
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 924,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12978:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 924,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12993:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 935,
																							"nodeType": "InlineAssembly",
																							"src": "12928:95:1"
																						}
																					]
																				},
																				"id": 937,
																				"nodeType": "IfStatement",
																				"src": "12775:266:1",
																				"trueBody": {
																					"id": 934,
																					"nodeType": "Block",
																					"src": "12799:101:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 931,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12828:52:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 930,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "12821:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 932,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12821:60:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 933,
																							"nodeType": "ExpressionStatement",
																							"src": "12821:60:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 939,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 925,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 924,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "12749:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 939,
																				"src": "12736:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 923,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "12736:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12735:21:1"
																	},
																	"src": "12729:326:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 906,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "12577:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12577:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 908,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "12591:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 909,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 892,
																		"src": "12597:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 910,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "12606:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 903,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "12556:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 902,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "12540:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1104_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12540:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1104",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1103,
																	"src": "12540:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12540:72:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 940,
															"nodeType": "TryStatement",
															"src": "12536:519:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "11788:542:1",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "12344:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12384:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "12376:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12376:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12406:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "12398:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12398:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12426:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "12418:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12418:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12456:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "12443:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 893,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12443:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12366:101:1"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "12485:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 896,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12485:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12484:6:1"
									},
									"scope": 970,
									"src": "12335:778:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "13789:2:1",
										"statements": []
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "13119:545:1",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13678:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13716:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "13708:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13708:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13738:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "13730:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13730:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "13750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13698:73:1"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13789:0:1"
									},
									"scope": 970,
									"src": "13669:122:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "14282:2:1",
										"statements": []
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "13797:361:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "14172:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14209:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "14201:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14201:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14231:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "14223:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14251:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "14243:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14243:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14191:73:1"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14282:0:1"
									},
									"scope": 970,
									"src": "14163:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 971,
							"src": "628:13658:1",
							"usedErrors": []
						}
					],
					"src": "107:14180:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1919
						],
						"IERC721": [
							1086
						]
					},
					"id": 1087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 972,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 973,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1087,
							"sourceUnit": 1920,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 975,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1919,
										"src": "271:7:2"
									},
									"id": 976,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 974,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1086,
							"linearizedBaseContracts": [
								1086,
								1919
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 985,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 994,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 1003,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1011,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 1086,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 1086,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 1086,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "2682:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "2704:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "2724:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:2"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:2"
									},
									"scope": 1086,
									"src": "2647:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "3301:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "3323:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "3343:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:2"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 1086,
									"src": "3270:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1059,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "3854:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "3866:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:2"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:2"
									},
									"scope": 1086,
									"src": "3837:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "4239:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "4257:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:2"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:2"
									},
									"scope": 1086,
									"src": "4212:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "4453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:2"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "4493:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:2"
									},
									"scope": 1086,
									"src": "4432:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "4686:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "4701:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:2"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "4742:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:2"
									},
									"scope": 1086,
									"src": "4660:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1087,
							"src": "250:4500:2",
							"usedErrors": []
						}
					],
					"src": "108:4643:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1104
						]
					},
					"id": 1105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1088,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1089,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1104,
							"linearizedBaseContracts": [
								1104
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 1104,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1105,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
					"exportedSymbols": {
						"Address": [
							1584
						],
						"Context": [
							1606
						],
						"ERC165": [
							1907
						],
						"ERC721": [
							970
						],
						"ERC721Burnable": [
							1134
						],
						"IERC165": [
							1919
						],
						"IERC721": [
							1086
						],
						"IERC721Metadata": [
							1289
						],
						"IERC721Receiver": [
							1104
						],
						"Strings": [
							1883
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 971,
							"src": "136:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 1607,
							"src": "160:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1110,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1606,
										"src": "340:7:4"
									},
									"id": 1111,
									"nodeType": "InheritanceSpecifier",
									"src": "340:7:4"
								},
								{
									"baseName": {
										"id": 1112,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 970,
										"src": "349:6:4"
									},
									"id": 1113,
									"nodeType": "InheritanceSpecifier",
									"src": "349:6:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1109,
								"nodeType": "StructuredDocumentation",
								"src": "198:105:4",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be irreversibly burned (destroyed)."
							},
							"fullyImplemented": false,
							"id": 1134,
							"linearizedBaseContracts": [
								1134,
								970,
								1289,
								1086,
								1907,
								1919,
								1606
							],
							"name": "ERC721Burnable",
							"nameLocation": "322:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "575:195:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1121,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "664:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "664:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1123,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "678:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1120,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "645:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "645:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "688:50:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1",
																"typeString": "literal_string \"ERC721Burnable: caller is not owner nor approved\""
															},
															"value": "ERC721Burnable: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1",
																"typeString": "literal_string \"ERC721Burnable: caller is not owner nor approved\""
															}
														],
														"id": 1119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "637:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "637:102:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "637:102:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "755:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1128,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "749:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "749:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "749:14:4"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "362:162:4",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "538:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "551:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "543:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:17:4"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:0:4"
									},
									"scope": 1134,
									"src": "529:241:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1135,
							"src": "304:468:4",
							"usedErrors": []
						}
					],
					"src": "111:662:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"Address": [
							1584
						],
						"Context": [
							1606
						],
						"ERC165": [
							1907
						],
						"ERC721": [
							970
						],
						"ERC721URIStorage": [
							1262
						],
						"IERC165": [
							1919
						],
						"IERC721": [
							1086
						],
						"IERC721Metadata": [
							1289
						],
						"IERC721Receiver": [
							1104
						],
						"Strings": [
							1883
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 971,
							"src": "138:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1139,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 970,
										"src": "271:6:5"
									},
									"id": 1140,
									"nodeType": "InheritanceSpecifier",
									"src": "271:6:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1138,
								"nodeType": "StructuredDocumentation",
								"src": "163:69:5",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": false,
							"id": 1262,
							"linearizedBaseContracts": [
								1262,
								970,
								1289,
								1086,
								1907,
								1919,
								1606
							],
							"name": "ERC721URIStorage",
							"nameLocation": "251:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1143,
									"libraryName": {
										"id": 1141,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1883,
										"src": "290:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "284:26:5",
									"typeName": {
										"id": 1142,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "302:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1147,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "390:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "355:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1146,
										"keyType": {
											"id": 1144,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "363:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "355:26:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 1145,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "374:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										312
									],
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "555:575:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1158,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "581:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1157,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "573:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "573:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "591:51:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															},
															"value": "ERC721URIStorage: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															}
														],
														"id": 1156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "565:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "565:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "565:78:5"
											},
											{
												"assignments": [
													1164
												],
												"declarations": [
													{
														"constant": false,
														"id": 1164,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "668:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1208,
														"src": "654:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1163,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "654:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"baseExpression": {
														"id": 1165,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "680:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1167,
													"indexExpression": {
														"id": 1166,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "691:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "680:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "654:45:5"
											},
											{
												"assignments": [
													1170
												],
												"declarations": [
													{
														"constant": false,
														"id": 1170,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "723:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1208,
														"src": "709:18:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1169,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "709:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1173,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1171,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "730:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "709:31:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1176,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "819:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "813:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1174,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "813:5:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "813:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "835:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "813:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1184,
												"nodeType": "IfStatement",
												"src": "809:70:5",
												"trueBody": {
													"id": 1183,
													"nodeType": "Block",
													"src": "838:41:5",
													"statements": [
														{
															"expression": {
																"id": 1181,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "859:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1155,
															"id": 1182,
															"nodeType": "Return",
															"src": "852:16:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1187,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "987:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "981:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1185,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "981:5:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "981:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "981:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1007:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "981:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1202,
												"nodeType": "IfStatement",
												"src": "977:106:5",
												"trueBody": {
													"id": 1201,
													"nodeType": "Block",
													"src": "1010:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1196,
																				"name": "base",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "1055:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"id": 1197,
																				"name": "_tokenURI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1164,
																				"src": "1061:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1194,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1038:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1038:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1038:33:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1031:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1192,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1031:6:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1031:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1155,
															"id": 1200,
															"nodeType": "Return",
															"src": "1024:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1205,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "1115:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1203,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1100:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1262_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "1100:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1207,
												"nodeType": "Return",
												"src": "1093:30:5"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "407:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "476:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "522:8:5"
									},
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "493:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "485:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:17:5"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1153,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1262,
									"src": "467:663:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "1358:133:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1219,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "1384:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1218,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "1376:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1376:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															},
															"value": "ERC721URIStorage: URI set of nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1368:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1368:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1368:75:5"
											},
											{
												"expression": {
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1224,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "1453:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1226,
														"indexExpression": {
															"id": 1225,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "1464:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1453:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1227,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "1475:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1453:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "1453:31:5"
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "1136:136:5",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1286:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1307:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1299:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1330:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1316:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1213,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1316:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:42:5"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:5"
									},
									"scope": 1262,
									"src": "1277:214:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "1766:142:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1241,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "1788:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1238,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1776:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1262_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 754,
														"src": "1776:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1776:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "1776:20:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 1246,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "1817:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1248,
																	"indexExpression": {
																		"id": 1247,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "1828:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1817:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1811:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1244,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1811:5:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1811:26:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes storage pointer"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1811:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1848:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1811:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1259,
												"nodeType": "IfStatement",
												"src": "1807:95:5",
												"trueBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "1851:51:5",
													"statements": [
														{
															"expression": {
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "1865:26:5",
																"subExpression": {
																	"baseExpression": {
																		"id": 1253,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "1872:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1255,
																	"indexExpression": {
																		"id": 1254,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "1883:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1872:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "1865:26:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1497:206:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "1717:5:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1236,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1757:8:5"
									},
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1731:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1723:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1723:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:17:5"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1766:0:5"
									},
									"scope": 1262,
									"src": "1708:200:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1263,
							"src": "233:1677:5",
							"usedErrors": []
						}
					],
					"src": "113:1798:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1919
						],
						"IERC721": [
							1086
						],
						"IERC721Metadata": [
							1289
						]
					},
					"id": 1290,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 1087,
							"src": "137:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1267,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "326:7:6"
									},
									"id": 1268,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1266,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1289,
							"linearizedBaseContracts": [
								1289,
								1086,
								1919
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:6"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "442:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1271,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:6"
									},
									"scope": 1289,
									"src": "403:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:6"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "569:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:6"
									},
									"scope": 1289,
									"src": "528:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "703:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:6"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "743:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:6"
									},
									"scope": 1289,
									"src": "685:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1290,
							"src": "297:463:6",
							"usedErrors": []
						}
					],
					"src": "112:649:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1584
						]
					},
					"id": 1585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1291,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1292,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1584,
							"linearizedBaseContracts": [
								1584
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "1241:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1300,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "1465:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1305,
												"nodeType": "Return",
												"src": "1458:30:7"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "1195:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:7"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "1235:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:7"
									},
									"scope": 1584,
									"src": "1175:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "2483:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1318,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1584",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1584",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1316,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1321,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "2526:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:7"
											},
											{
												"assignments": [
													1327,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1340,
														"src": "2578:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1326,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1334,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1328,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "2596:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1330,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "2618:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1336,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "2647:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:7"
											}
										]
									},
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "2431:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "2458:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:7"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:7"
									},
									"scope": 1584,
									"src": "2412:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "3555:84:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "3585:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "3593:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1351,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1358,
															1378
														],
														"referencedDeclaration": 1378,
														"src": "3572:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1356,
												"nodeType": "Return",
												"src": "3565:67:7"
											}
										]
									},
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "3488:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "3504:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:7"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "3541:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:7"
									},
									"scope": 1584,
									"src": "3466:173:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "4008:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1371,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "4047:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1372,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "4055:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1374,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "4064:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1370,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1398,
															1448
														],
														"referencedDeclaration": 1448,
														"src": "4025:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1376,
												"nodeType": "Return",
												"src": "4018:59:7"
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "3892:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "3916:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "3943:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:7"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "3994:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:7"
									},
									"scope": 1584,
									"src": "3861:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "4589:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1391,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "4628:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1392,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "4636:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1393,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "4642:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1390,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1398,
															1448
														],
														"referencedDeclaration": 1448,
														"src": "4606:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1389,
												"id": 1396,
												"nodeType": "Return",
												"src": "4599:94:7"
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "4486:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "4510:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "4537:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:7"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "4575:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:7"
									},
									"scope": 1584,
									"src": "4446:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "5127:320:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1415,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1584",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1584",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1413,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1418,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "5170:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1425,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "5247:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1424,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "5236:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:7"
											},
											{
												"assignments": [
													1431,
													1433
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1447,
														"src": "5300:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1430,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1433,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1447,
														"src": "5314:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1432,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1440,
												"initialValue": {
													"arguments": [
														{
															"id": 1438,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "5367:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1434,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "5341:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1436,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "5360:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1442,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "5406:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1443,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "5415:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1444,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "5427:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1441,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "5389:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1411,
												"id": 1446,
												"nodeType": "Return",
												"src": "5382:58:7"
											}
										]
									},
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "4988:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "5012:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "5039:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "5062:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1406,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:7"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "5113:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1409,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:7"
									},
									"scope": 1584,
									"src": "4948:499:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "5724:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1459,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "5760:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1460,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "5768:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1458,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1465,
															1500
														],
														"referencedDeclaration": 1500,
														"src": "5741:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1457,
												"id": 1463,
												"nodeType": "Return",
												"src": "5734:80:7"
											}
										]
									},
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "5652:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "5668:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:7"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "5710:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:7"
									},
									"scope": 1584,
									"src": "5624:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "6163:228:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1479,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "6192:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1478,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "6181:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:7"
											},
											{
												"assignments": [
													1485,
													1487
												],
												"declarations": [
													{
														"constant": false,
														"id": 1485,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "6252:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1484,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1487,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "6266:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1486,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1492,
												"initialValue": {
													"arguments": [
														{
															"id": 1490,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "6311:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1488,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "6293:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1494,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "6350:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1495,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "6359:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1496,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "6371:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1493,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "6333:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1476,
												"id": 1498,
												"nodeType": "Return",
												"src": "6326:58:7"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "6042:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "6066:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "6093:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1471,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:7"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "6149:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:7"
									},
									"scope": 1584,
									"src": "6005:386:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "6667:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "6705:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1512,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "6713:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1510,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1517,
															1552
														],
														"referencedDeclaration": 1552,
														"src": "6684:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1509,
												"id": 1515,
												"nodeType": "Return",
												"src": "6677:84:7"
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "6600:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:7"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "6653:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:7"
									},
									"scope": 1584,
									"src": "6570:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "7109:232:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1531,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1520,
																	"src": "7138:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1530,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "7127:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:7"
											},
											{
												"assignments": [
													1537,
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1537,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1551,
														"src": "7200:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1536,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1551,
														"src": "7214:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1538,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1544,
												"initialValue": {
													"arguments": [
														{
															"id": 1542,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "7261:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1540,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "7241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1546,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "7300:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1547,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "7309:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1548,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "7321:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1545,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "7283:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1528,
												"id": 1550,
												"nodeType": "Return",
												"src": "7276:58:7"
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "6993:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "7017:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "7044:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:7"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "7095:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:7"
									},
									"scope": 1584,
									"src": "6954:387:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "7721:532:7",
										"statements": [
											{
												"condition": {
													"id": 1564,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1555,
													"src": "7735:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1580,
													"nodeType": "Block",
													"src": "7792:455:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1568,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1557,
																		"src": "7876:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1578,
																"nodeType": "Block",
																"src": "8184:53:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1575,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1559,
																					"src": "8209:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1574,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1577,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:7"
																	}
																]
															},
															"id": 1579,
															"nodeType": "IfStatement",
															"src": "7872:365:7",
															"trueBody": {
																"id": 1573,
																"nodeType": "Block",
																"src": "7899:279:7",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:7"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:7",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:7"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:7"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1557,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:7",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1557,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:7",
																				"valueSize": 1
																			}
																		],
																		"id": 1572,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:7"
																	}
																]
															}
														}
													]
												},
												"id": 1581,
												"nodeType": "IfStatement",
												"src": "7731:516:7",
												"trueBody": {
													"id": 1567,
													"nodeType": "Block",
													"src": "7744:42:7",
													"statements": [
														{
															"expression": {
																"id": 1565,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "7765:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1563,
															"id": 1566,
															"nodeType": "Return",
															"src": "7758:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:7",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "7596:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "7618:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "7651:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1558,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:7"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "7707:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:7"
									},
									"scope": 1584,
									"src": "7561:692:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1585,
							"src": "194:8061:7",
							"usedErrors": []
						}
					],
					"src": "101:8155:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1606
						]
					},
					"id": 1607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1587,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1606,
							"linearizedBaseContracts": [
								1606
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1592,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1591,
												"id": 1594,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1606,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1601,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1600,
												"id": 1603,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1606,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1607,
							"src": "608:235:8",
							"usedErrors": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1680
						]
					},
					"id": 1681,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1608,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1609,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:9",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1680,
							"linearizedBaseContracts": [
								1680
							],
							"name": "Counters",
							"nameLocation": "432:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1612,
									"members": [
										{
											"constant": false,
											"id": 1611,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1612,
											"src": "786:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1610,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:9",
									"nodeType": "StructDefinition",
									"scope": 1680,
									"src": "447:374:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "901:38:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1620,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "918:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1611,
													"src": "918:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1619,
												"id": 1622,
												"nodeType": "Return",
												"src": "911:21:9"
											}
										]
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "844:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1613,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1612,
														"src": "844:7:9"
													},
													"referencedDeclaration": 1612,
													"src": "844:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:9"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "892:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:9"
									},
									"scope": 1680,
									"src": "827:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "998:70:9",
										"statements": [
											{
												"id": 1636,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:9",
												"statements": [
													{
														"expression": {
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1630,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "1032:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1611,
																"src": "1032:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1635,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:9"
													}
												]
											}
										]
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "964:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1626,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1625,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1612,
														"src": "964:7:9"
													},
													"referencedDeclaration": 1612,
													"src": "964:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:9"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:9"
									},
									"scope": 1680,
									"src": "945:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "1127:176:9",
										"statements": [
											{
												"assignments": [
													1645
												],
												"declarations": [
													{
														"constant": false,
														"id": 1645,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1665,
														"src": "1137:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1644,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1648,
												"initialValue": {
													"expression": {
														"id": 1646,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "1153:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1611,
													"src": "1153:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1650,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "1185:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:9"
											},
											{
												"id": 1664,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:9",
												"statements": [
													{
														"expression": {
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1656,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "1260:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1611,
																"src": "1260:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1659,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1645,
																	"src": "1277:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1663,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:9"
													}
												]
											}
										]
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "1093:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1640,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1639,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1612,
														"src": "1093:7:9"
													},
													"referencedDeclaration": 1612,
													"src": "1093:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:9"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:9"
									},
									"scope": 1680,
									"src": "1074:229:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "1358:35:9",
										"statements": [
											{
												"expression": {
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1672,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "1368:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1611,
														"src": "1368:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:9"
											}
										]
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "1324:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1668,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1667,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1612,
														"src": "1324:7:9"
													},
													"referencedDeclaration": 1612,
													"src": "1324:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:9"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:9"
									},
									"scope": 1680,
									"src": "1309:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1681,
							"src": "424:971:9",
							"usedErrors": []
						}
					],
					"src": "87:1309:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1883
						]
					},
					"id": 1884,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1682,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1683,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1883,
							"linearizedBaseContracts": [
								1883
							],
							"name": "Strings",
							"nameLocation": "154:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1686,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "168:58:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1684,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1685,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "399:632:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "601:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1700,
												"nodeType": "IfStatement",
												"src": "597:51:10",
												"trueBody": {
													"id": 1699,
													"nodeType": "Block",
													"src": "613:35:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1693,
															"id": 1698,
															"nodeType": "Return",
															"src": "627:10:10"
														}
													]
												}
											},
											{
												"assignments": [
													1702
												],
												"declarations": [
													{
														"constant": false,
														"id": 1702,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1764,
														"src": "657:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1704,
												"initialValue": {
													"id": 1703,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1689,
													"src": "672:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:10"
											},
											{
												"assignments": [
													1706
												],
												"declarations": [
													{
														"constant": false,
														"id": 1706,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1764,
														"src": "687:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:10"
											},
											{
												"body": {
													"id": 1718,
													"nodeType": "Block",
													"src": "729:57:10",
													"statements": [
														{
															"expression": {
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:10",
																"subExpression": {
																	"id": 1711,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "743:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1713,
															"nodeType": "ExpressionStatement",
															"src": "743:8:10"
														},
														{
															"expression": {
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1714,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "765:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1717,
															"nodeType": "ExpressionStatement",
															"src": "765:10:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1708,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "718:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1719,
												"nodeType": "WhileStatement",
												"src": "711:75:10"
											},
											{
												"assignments": [
													1721
												],
												"declarations": [
													{
														"constant": false,
														"id": 1721,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1764,
														"src": "795:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1720,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1726,
												"initialValue": {
													"arguments": [
														{
															"id": 1724,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "827:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1722,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:10"
											},
											{
												"body": {
													"id": 1757,
													"nodeType": "Block",
													"src": "863:131:10",
													"statements": [
														{
															"expression": {
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1730,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "877:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1733,
															"nodeType": "ExpressionStatement",
															"src": "877:11:10"
														},
														{
															"expression": {
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1734,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "902:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1736,
																	"indexExpression": {
																		"id": 1735,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "909:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1748,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1741,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1746,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1744,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1689,
																									"src": "945:5:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1745,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1743,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1742,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:10",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1747,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1739,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1737,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1752,
															"nodeType": "ExpressionStatement",
															"src": "902:56:10"
														},
														{
															"expression": {
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "972:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1756,
															"nodeType": "ExpressionStatement",
															"src": "972:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1727,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "851:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1758,
												"nodeType": "WhileStatement",
												"src": "844:150:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1761,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "1017:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1759,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1693,
												"id": 1763,
												"nodeType": "Return",
												"src": "1003:21:10"
											}
										]
									},
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "346:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:10"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "384:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:10"
									},
									"scope": 1883,
									"src": "328:703:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "1210:255:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1773,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "1224:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1779,
												"nodeType": "IfStatement",
												"src": "1220:54:10",
												"trueBody": {
													"id": 1778,
													"nodeType": "Block",
													"src": "1236:38:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1772,
															"id": 1777,
															"nodeType": "Return",
															"src": "1250:13:10"
														}
													]
												}
											},
											{
												"assignments": [
													1781
												],
												"declarations": [
													{
														"constant": false,
														"id": 1781,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "1283:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1780,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1783,
												"initialValue": {
													"id": 1782,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1768,
													"src": "1298:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:10"
											},
											{
												"assignments": [
													1785
												],
												"declarations": [
													{
														"constant": false,
														"id": 1785,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "1313:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1784,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1787,
												"initialValue": {
													"hexValue": "30",
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:10"
											},
											{
												"body": {
													"id": 1798,
													"nodeType": "Block",
													"src": "1359:57:10",
													"statements": [
														{
															"expression": {
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:10",
																"subExpression": {
																	"id": 1791,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1785,
																	"src": "1373:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1793,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:10"
														},
														{
															"expression": {
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1794,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "1395:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1797,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1788,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1781,
														"src": "1348:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1799,
												"nodeType": "WhileStatement",
												"src": "1341:75:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1801,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "1444:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1802,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "1451:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1800,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1806,
															1882
														],
														"referencedDeclaration": 1882,
														"src": "1432:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1772,
												"id": 1804,
												"nodeType": "Return",
												"src": "1425:33:10"
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1157:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:10"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1195:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1770,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:10"
									},
									"scope": 1883,
									"src": "1136:329:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "1678:351:10",
										"statements": [
											{
												"assignments": [
													1817
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1881,
														"src": "1688:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1816,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1826,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1821,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "1724:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1818,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:10"
											},
											{
												"expression": {
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1827,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "1745:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1829,
														"indexExpression": {
															"hexValue": "30",
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1832,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:10"
											},
											{
												"expression": {
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1833,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "1770:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1835,
														"indexExpression": {
															"hexValue": "31",
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:10"
											},
											{
												"body": {
													"id": 1867,
													"nodeType": "Block",
													"src": "1840:87:10",
													"statements": [
														{
															"expression": {
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1853,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1817,
																		"src": "1854:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1855,
																	"indexExpression": {
																		"id": 1854,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "1861:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1856,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "1866:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1860,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1857,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1809,
																			"src": "1879:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1862,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:10"
														},
														{
															"expression": {
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1863,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1809,
																	"src": "1905:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1866,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1847,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "1828:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1868,
												"initializationExpression": {
													"assignments": [
														1840
													],
													"declarations": [
														{
															"constant": false,
															"id": 1840,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1868,
															"src": "1800:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1839,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1846,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1842,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "1816:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:10"
												},
												"loopExpression": {
													"expression": {
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:10",
														"subExpression": {
															"id": 1850,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "1837:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1852,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:10"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1870,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "1944:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1878,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "2015:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1876,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1880,
												"nodeType": "Return",
												"src": "2001:21:10"
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1609:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1624:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:10"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1663:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1813,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:10"
									},
									"scope": 1883,
									"src": "1588:441:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1884,
							"src": "146:1885:10",
							"usedErrors": []
						}
					],
					"src": "86:1946:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1907
						],
						"IERC165": [
							1919
						]
					},
					"id": 1908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1885,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1908,
							"sourceUnit": 1920,
							"src": "124:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1888,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1919,
										"src": "754:7:11"
									},
									"id": 1889,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:11"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1887,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1907,
							"linearizedBaseContracts": [
								1907,
								1919
							],
							"name": "ERC165",
							"nameLocation": "744:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1918
									],
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "920:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1898,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "937:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1900,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1919,
																	"src": "957:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1919_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1919_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1899,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1919",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1897,
												"id": 1904,
												"nodeType": "Return",
												"src": "930:47:11"
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1894,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:11"
									},
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "856:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1891,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:11"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "914:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1895,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:11"
									},
									"scope": 1907,
									"src": "829:155:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1908,
							"src": "726:260:11",
							"usedErrors": []
						}
					],
					"src": "99:888:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1919
						]
					},
					"id": 1920,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1909,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1910,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1919,
							"linearizedBaseContracts": [
								1919
							],
							"name": "IERC165",
							"nameLocation": "415:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "801:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1912,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:12"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "844:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1915,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:12"
									},
									"scope": 1919,
									"src": "774:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1920,
							"src": "405:447:12",
							"usedErrors": []
						}
					],
					"src": "100:753:12"
				},
				"id": 12
			},
			"contracts/sequential.sol": {
				"ast": {
					"absolutePath": "contracts/sequential.sol",
					"exportedSymbols": {
						"Address": [
							1584
						],
						"Context": [
							1606
						],
						"Counters": [
							1680
						],
						"ERC165": [
							1907
						],
						"ERC721": [
							970
						],
						"ERC721Burnable": [
							1134
						],
						"ERC721URIStorage": [
							1262
						],
						"IERC165": [
							1919
						],
						"IERC721": [
							1086
						],
						"IERC721Metadata": [
							1289
						],
						"IERC721Receiver": [
							1104
						],
						"MyToken": [
							2031
						],
						"Ownable": [
							104
						],
						"Strings": [
							1883
						]
					},
					"id": 2032,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1921,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 1922,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2032,
							"sourceUnit": 971,
							"src": "57:57:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 1923,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2032,
							"sourceUnit": 1263,
							"src": "115:78:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"id": 1924,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2032,
							"sourceUnit": 1135,
							"src": "194:76:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2032,
							"sourceUnit": 105,
							"src": "271:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 1926,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2032,
							"sourceUnit": 1681,
							"src": "324:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1927,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 970,
										"src": "398:6:13"
									},
									"id": 1928,
									"nodeType": "InheritanceSpecifier",
									"src": "398:6:13"
								},
								{
									"baseName": {
										"id": 1929,
										"name": "ERC721URIStorage",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "406:16:13"
									},
									"id": 1930,
									"nodeType": "InheritanceSpecifier",
									"src": "406:16:13"
								},
								{
									"baseName": {
										"id": 1931,
										"name": "ERC721Burnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1134,
										"src": "424:14:13"
									},
									"id": 1932,
									"nodeType": "InheritanceSpecifier",
									"src": "424:14:13"
								},
								{
									"baseName": {
										"id": 1933,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "440:7:13"
									},
									"id": 1934,
									"nodeType": "InheritanceSpecifier",
									"src": "440:7:13"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2031,
							"linearizedBaseContracts": [
								2031,
								104,
								1134,
								1262,
								970,
								1289,
								1086,
								1907,
								1919,
								1606
							],
							"name": "MyToken",
							"nameLocation": "387:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1938,
									"libraryName": {
										"id": 1935,
										"name": "Counters",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1680,
										"src": "460:8:13"
									},
									"nodeType": "UsingForDirective",
									"src": "454:36:13",
									"typeName": {
										"id": 1937,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1936,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1612,
											"src": "473:16:13"
										},
										"referencedDeclaration": 1612,
										"src": "473:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1941,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "521:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2031,
									"src": "496:40:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1612_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1940,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1939,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1612,
											"src": "496:16:13"
										},
										"referencedDeclaration": 1612,
										"src": "496:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1612_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d547cfb7",
									"id": 1943,
									"mutability": "mutable",
									"name": "baseTokenURI",
									"nameLocation": "561:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2031,
									"src": "547:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1942,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "547:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1950,
										"nodeType": "Block",
										"src": "620:2:13",
										"statements": []
									},
									"id": 1951,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "602:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "613:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 1948,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1945,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 970,
												"src": "595:6:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "595:24:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:2:13"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "620:0:13"
									},
									"scope": 2031,
									"src": "581:41:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "694:165:13",
										"statements": [
											{
												"assignments": [
													1961
												],
												"declarations": [
													{
														"constant": false,
														"id": 1961,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "712:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "704:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1960,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "704:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1965,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1962,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "722:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1612_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1963,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1624,
														"src": "722:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1612_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1612_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "722:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "704:43:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1966,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "757:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1612_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1638,
														"src": "757:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1612_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1612_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "757:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1970,
												"nodeType": "ExpressionStatement",
												"src": "757:27:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1972,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "804:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1973,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "808:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1971,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															628
														],
														"referencedDeclaration": 599,
														"src": "794:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "794:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1975,
												"nodeType": "ExpressionStatement",
												"src": "794:22:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1977,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "839:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1978,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "848:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1976,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "826:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "826:26:13"
											}
										]
									},
									"functionSelector": "d204c45e",
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1958,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1957,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "684:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "684:9:13"
										}
									],
									"name": "safeMint",
									"nameLocation": "637:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "654:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "646:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "672:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "658:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1954,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:31:13"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "694:0:13"
									},
									"scope": 2031,
									"src": "628:231:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754,
										1261
									],
									"body": {
										"id": 1996,
										"nodeType": "Block",
										"src": "1009:37:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1993,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "1031:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1990,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1019:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyToken_$2031_$",
																"typeString": "type(contract super MyToken)"
															}
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1261,
														"src": "1019:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1019:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "1019:20:13"
											}
										]
									},
									"id": 1997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "942:5:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1988,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1986,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 970,
												"src": "983:6:13"
											},
											{
												"id": 1987,
												"name": "ERC721URIStorage",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1262,
												"src": "991:16:13"
											}
										],
										"src": "974:34:13"
									},
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "956:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "948:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:17:13"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:13"
									},
									"scope": 2031,
									"src": "933:113:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "1137:39:13",
										"statements": [
											{
												"expression": {
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2004,
														"name": "baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "1147:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2005,
														"name": "baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "1162:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1147:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "1147:22:13"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2001,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1127:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1127:9:13"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "1086:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "baseURI",
												"nameLocation": "1111:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "1097:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1097:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:23:13"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:13"
									},
									"scope": 2031,
									"src": "1077:99:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										312,
										1209
									],
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "1324:74:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2023,
																	"name": "baseTokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "1366:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																{
																	"id": 2024,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "1379:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "",
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1387:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"id": 2021,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1349:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1349:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1349:41:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1342:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2019,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1342:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1342:49:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2018,
												"id": 2028,
												"nodeType": "Return",
												"src": "1335:56:13"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1191:8:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2015,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2013,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 970,
												"src": "1262:6:13"
											},
											{
												"id": 2014,
												"name": "ERC721URIStorage",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1262,
												"src": "1270:16:13"
											}
										],
										"src": "1253:34:13"
									},
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1208:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "1200:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:17:13"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "1305:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2016,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1305:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:15:13"
									},
									"scope": 2031,
									"src": "1182:216:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2032,
							"src": "378:1022:13",
							"usedErrors": []
						}
					],
					"src": "32:1368:13"
				},
				"id": 13
			}
		}
	}
}